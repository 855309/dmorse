<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ScottPlot</name>
    </assembly>
    <members>
        <member name="T:ScottPlot.AxisLimits">
            <summary>
            This object describes the 4 edges of a rectangular view in 2D space.
            Values may contain NaN to describe undefined or uninitialized edges.
            </summary>
        </member>
        <member name="P:ScottPlot.AxisLimits.NoLimits">
            <summary>
            AxisLimits representing uninitialized or "no data" limits (all limits are NaN)
            </summary>
        </member>
        <member name="M:ScottPlot.AxisLimits.VerticalLimitsOnly(System.Double,System.Double)">
            <summary>
            AxisLimits with finite vertical limits and undefined (NaN) horizontal limits
            </summary>
        </member>
        <member name="M:ScottPlot.AxisLimits.HorizontalLimitsOnly(System.Double,System.Double)">
            <summary>
            AxisLimits with finite horizontal limits and undefined (NaN) vertical limits
            </summary>
        </member>
        <member name="M:ScottPlot.AxisLimits.Expand(ScottPlot.AxisLimits)">
            <summary>
            Return the maximum boundary for both sets of axis limits
            </summary>
        </member>
        <member name="M:ScottPlot.AxisLimits.Contains(ScottPlot.Coordinate)">
            <summary>
            Returns True if the coordinate is contained inside these axis limits
            </summary>
        </member>
        <member name="T:ScottPlot.Control.ControlBackEnd">
            <summary>
            The control back end module contains all the logic required to manage a mouse-interactive
            plot to display in a user control. However, this module contains no control-specific dependencies.
            User controls can instantiate this object, pass mouse and resize event information in, and have
            renders triggered using events.
            </summary>
        </member>
        <member name="E:ScottPlot.Control.ControlBackEnd.BitmapUpdated">
            <summary>
            This event is invoked when an existing Bitmap is redrawn.
            e.g., after rendering following a click-drag-pan mouse event.
            </summary>
        </member>
        <member name="E:ScottPlot.Control.ControlBackEnd.BitmapChanged">
            <summary>
            This event is invoked after a new Bitmap was created.
            e.g., after resizing the control, requiring a new Bitmap of a different size
            </summary>
        </member>
        <member name="E:ScottPlot.Control.ControlBackEnd.CursorChanged">
            <summary>
            This event is invoked when the cursor is supposed to change.
            Cursor changes may be required when hovering over draggable plottable objects.
            </summary>
        </member>
        <member name="E:ScottPlot.Control.ControlBackEnd.AxesChanged">
            <summary>
            This event is invoked when the axis limts change.
            This is typically the result of a pan or zoom operation.
            </summary>
        </member>
        <member name="E:ScottPlot.Control.ControlBackEnd.RightClicked">
            <summary>
            This event is invoked when the user right-clicks the control with the mouse.
            It is typically used to deploy a context menu.
            </summary>
        </member>
        <member name="E:ScottPlot.Control.ControlBackEnd.LeftClicked">
            <summary>
            This event is invoked when the user left-clicks the control with the mouse.
            It is typically used to interact with custom plot types.
            </summary>
        </member>
        <member name="E:ScottPlot.Control.ControlBackEnd.LeftClickedPlottable">
            <summary>
            This event is invoked when the user left-clicks a plottable control with the mouse.
            </summary>
        </member>
        <member name="E:ScottPlot.Control.ControlBackEnd.PlottableDragged">
            <summary>
            This event is invoked after the mouse moves while dragging a draggable plottable.
            </summary>
        </member>
        <member name="E:ScottPlot.Control.ControlBackEnd.PlottableDropped">
            <summary>
            This event is invoked after the mouse moves while dragging a draggable plottable.
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.Configuration">
            <summary>
            The control configuration object stores advanced customization and behavior settings
            for mouse-interactive plots.
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.IsMiddleDown">
            <summary>
            True if the middle mouse button is pressed
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.IsRightDown">
            <summary>
            True if the right mouse button is pressed
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.IsLeftDown">
            <summary>
            True if the left mouse button is pressed
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.MouseLocationX">
            <summary>
            Current position of the mouse in pixels
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.MouseLocationY">
            <summary>
            Current position of the mouse in pixels
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.PlottableBeingDragged">
            <summary>
            Holds the plottable actively being dragged with the mouse.
            Contains null if no plottable is being dragged.
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.IsZoomingRectangle">
            <summary>
            True when a zoom rectangle is being drawn and the mouse button is still down
            </summary>
        </member>
        <member name="P:ScottPlot.Control.ControlBackEnd.Plot">
            <summary>
            The plot underlying this control.
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.Settings">
            <summary>
            The settings object underlying the plot.
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.Bmp">
            <summary>
            The latest render is stored in this bitmap.
            New renders may be performed on this existing bitmap.
            When a new bitmap is created, this bitmap will be stored in OldBitmaps and eventually disposed.
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.OldBitmaps">
            <summary>
            Bitmaps that are created are stored here so they can be kept track of and
            disposed properly when new bitmaps are created.
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.LimitsOnLastRender">
            <summary>
            Store last render limits so new renders can know whether the axis limits
            have changed and decide whether to invoke the AxesChanged event or not.
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.PlottablesIdentifierAtLastRender">
            <summary>
            Unique identifier of the plottables list that was last rendered.
            This value is used to determine if the plottables list was modified (requiring a re-render).
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.currentlyRendering">
            <summary>
            This is set to True while the render loop is running.
            This prevents multiple renders from occurring at the same time.
            </summary>
        </member>
        <member name="P:ScottPlot.Control.ControlBackEnd.Cursor">
            <summary>
            The style of cursor the control should display
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.EventsProcessor">
            <summary>
            The events processor invokes renders in response to custom events
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.EventFactory">
            <summary>
            The event factor creates event objects to be handled by the event processor
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.BitmapRenderCount">
            <summary>
            Number of times the current bitmap has been rendered on.
            </summary>
        </member>
        <member name="P:ScottPlot.Control.ControlBackEnd.RenderCount">
            <summary>
            Total number of renders performed.
            Note that at least one render occurs before the first request to measure the layout and calculate data area.
            This means the first render increments this number twice.
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.MouseDownTravelDistance">
            <summary>
            Tracks the total distance the mouse was click-dragged (rectangular pixel units)
            </summary>
        </member>
        <member name="P:ScottPlot.Control.ControlBackEnd.MouseDownDragged">
            <summary>
            True if the mouse was dragged (with a button down) long enough to quality as a drag instead of a click
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.WasManuallyRendered">
            <summary>
            Indicates whether Render() has been explicitly called by the user.
            Renders requested by resize events do not count.
            </summary>
        </member>
        <member name="F:ScottPlot.Control.ControlBackEnd.ControlName">
            <summary>
            Variable name for the user control tied to this backend.
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.#ctor(System.Single,System.Single,System.String)">
            <summary>
            Create a back-end for a user control
            </summary>
            <param name="width">initial bitmap size (pixels)</param>
            <param name="height">initial bitmap size (pixels)</param>
            <param name="name">variable name of the user control using this backend</param>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.StartProcessingEvents">
            <summary>
            The host control may instantiate the back-end and start sending it events
            before it has fully connected its event handlers. To prevent processing events before
            the host is control is ready, the processor will be stopped until is called by the host control.
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.Reset(System.Single,System.Single)">
            <summary>
            Reset the back-end by creating an entirely new plot of the given dimensions
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.Reset(System.Single,System.Single,ScottPlot.Plot)">
            <summary>
            Reset the back-end by replacing the existing plot with one that has already been created
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.GetHelpMessage">
            <summary>
            Return a multi-line string describing the default mouse interactions.
            This can be useful for displaying a help message in a user control.
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.GetLatestBitmap">
            <summary>
            Return the most recently rendered Bitmap.
            This method also disposes old Bitmaps if they exist.
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.Render(System.Boolean,System.Boolean)">
            <summary>
            Render onto the existing Bitmap.
            Quality describes whether anti-aliasing will be used.
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.AddErrorMessage(System.Drawing.Bitmap,System.String)">
            <summary>
            Add error text on top of the rendered plot
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.RenderRequest(ScottPlot.RenderType)">
            <summary>
            Request a render using the render queue. 
            This method does not block the calling thread.
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.RenderIfPlottableListChanged">
            <summary>
            Check if the number of plottibles has changed and if so request a render.
            This is typically called by a continuously running timer in the user control.
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.Resize(System.Single,System.Single,System.Boolean)">
            <summary>
            Resize the control (creates a new Bitmap and requests a render)
            </summary>
            <param name="width">new width (pixels)</param>
            <param name="height">new height (pixels)</param>
            <param name="useDelayedRendering">Render using the queue (best for mouse events), otherwise render immediately.</param>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.MouseDown(ScottPlot.Control.InputState)">
            <summary>
            Indicate a mouse button has just been pressed
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.GetMouseCoordinates(System.Int32,System.Int32)">
            <summary>
            Return the mouse position on the plot (in coordinate space) for the latest X and Y coordinates
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.GetMousePixel">
            <summary>
            Return the mouse position (in pixel space) for the last observed mouse position
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.MouseMove(ScottPlot.Control.InputState)">
            <summary>
            Indicate the mouse has moved to a new position
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.ProcessEvent(ScottPlot.Control.EventProcess.IUIEvent)">
            <summary>
            Process an event using the render queue (non-blocking) or traditional rendering (blocking)
            based on the UseRenderQueue flag in the Configuration module.
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.MouseMovedWithoutInteraction(ScottPlot.Control.InputState)">
            <summary>
            Call this when the mouse moves without any buttons being down.
            It will only update the cursor based on what's beneath the cursor.
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.UpdateCursor(ScottPlot.Control.InputState)">
            <summary>
            Set the cursor based on whether a draggable is engaged or not,
            then invoke the CursorChanged event.
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.MouseUp(ScottPlot.Control.InputState)">
            <summary>
            Indicate a mouse button has been released.
            This may initiate a render (and/or a delayed render).
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.DoubleClick">
            <summary>
            Indicate the left mouse button has been double-clicked.
            The default action of a double-click is to toggle the benchmark.
            </summary>
        </member>
        <member name="M:ScottPlot.Control.ControlBackEnd.MouseWheel(ScottPlot.Control.InputState)">
            <summary>
            Apply a scroll wheel action, perform a low quality render, and later re-render in high quality.
            </summary>
        </member>
        <member name="P:ScottPlot.Control.Configuration.Pan">
            <summary>
            Control whether panning is enabled
            </summary>
        </member>
        <member name="P:ScottPlot.Control.Configuration.Zoom">
            <summary>
            Control whether zooming is enabled (via left-click-drag, middle-click-drag, and scrollwheel)
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.Quality">
            <summary>
            Manual override to set anti-aliasing (high quality) behavior for all renders.
            Refer to the QualityConfiguration field for more control over quality in response to specific interactions.
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.QualityConfiguration">
            <summary>
            This module customizes anti-aliasing (high quality) behavior in response to interactive events.
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.LeftClickDragPan">
            <summary>
            Control whether left-click-drag panning is enabled
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.RightClickDragZoom">
            <summary>
            Control whether right-click-drag zooming is enabled
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.ScrollWheelZoom">
            <summary>
            Control whether scroll wheel zooming is enabled
            </summary>
        </member>
        <member name="P:ScottPlot.Control.Configuration.ScrollWheelZoomFraction">
            <summary>
            Fractional amount to zoom in or out when the mouse wheel is scrolled.
            Value must be between 0 and 1 (default is 0.15).
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.ScrollWheelZoomHighQualityDelay">
            <summary>
            Number of milliseconds after low quality scroll wheel zoom to re-render using high quality
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.MiddleClickDragZoom">
            <summary>
            Control whether middle-click-drag zooming to a rectangle is enabled
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.MiddleClickAutoAxis">
            <summary>
            Control whether middle-click can be used to reset axis limits
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.MiddleClickAutoAxisMarginX">
            <summary>
            Horizontal margin between the edge of the data and the edge of the plot when middle-click AutoAxis is called
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.MiddleClickAutoAxisMarginY">
            <summary>
            Vertical margin between the edge of the data and the edge of the plot when middle-click AutoAxis is called
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.DoubleClickBenchmark">
            <summary>
            If enabled, double-clicking the plot will toggle benchmark visibility
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.LockVerticalAxis">
            <summary>
            If enabled, the vertical axis limits cannot be modified by mouse actions
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.LockHorizontalAxis">
            <summary>
            If enabled, the horizontal axis limits cannot be modified by mouse actions
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.RenderIfPlottableListChanges">
            <summary>
            If enabled the control will automatically re-render as plottables are added and removed
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.AxesChangedEventEnabled">
            <summary>
            Controls whether or not a render event will be triggered if a change in the axis limits is detected
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.AllowDroppedFramesWhileDragging">
            <summary>
            Permitting dropped frames makes interactive mouse manipulation feel faster
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.UseRenderQueue">
            <summary>
            If true, control interactions will be non-blocking and renders will occur after interactions.
            If false, control interactions will be blocking while renders are drawn.
            </summary>
        </member>
        <member name="F:ScottPlot.Control.Configuration.IgnoreMouseDragDistance">
            <summary>
            Distance (in pixels) the mouse can travel with a button held-down for it to be treated as a click (not a drag).
            A number slightly above zero allows middle-click to call AxisAuto() even if it was draged a few pixels by accident.
            </summary>
        </member>
        <member name="P:ScottPlot.Control.Configuration.WarnIfRenderNotCalledManually">
            <summary>
            Now that the timer-based auto-render functionality has been removed users must manually call Render() at least once.
            This option controls whether a warning message is shown if the user did not call Render() manually.
            </summary>
        </member>
        <member name="P:ScottPlot.Control.Configuration.DpiStretch">
            <summary>
            Control whether the plot should be stretched when DPI scaling is in use.
            Enabling stretching may result in blurry plots.
            Disabling stretching may results in plots with text that is too small.
            </summary>
        </member>
        <member name="P:ScottPlot.Control.Configuration.DpiStretchRatio">
            <summary>
            DPI scaling ratio to use for plot size and mouse tracking.
            Will return 1.0 if <see cref="P:ScottPlot.Control.Configuration.DpiStretch"/> is enabled.
            </summary>
        </member>
        <member name="E:ScottPlot.Control.Configuration.ScaleChanged">
            <summary>
            This event is invoked whenever the display scale is changed.
            </summary>
        </member>
        <member name="M:ScottPlot.Control.Configuration.DpiMeasure">
            <summary>
            Set the DpiStretchRatio to that of the active display.
            Call this if you suspect DPI scaling has changed.
            </summary>
        </member>
        <member name="P:ScottPlot.Control.Configuration.EnablePlotObjectEditor">
            <summary>
            If true, controls that support the plot object editor will display an option to launch it in the right-click menu
            </summary>
        </member>
        <member name="T:ScottPlot.Control.DisplayScale">
            <summary>
            This class detects and stores display scale.
            The scale ratio is used to calculate plot size and
            translate mouse coordinates to real pixel coordinates.
            </summary>
        </member>
        <member name="P:ScottPlot.Control.DisplayScale.SystemScaleRatio">
            <summary>
            Scale ratio in use by the active display.
            This ratio is used when scaling is enabled.
            </summary>
        </member>
        <member name="P:ScottPlot.Control.DisplayScale.ManualScaleRatio">
            <summary>
            Scale ratio to use if scaling is disabled.
            </summary>
        </member>
        <member name="P:ScottPlot.Control.DisplayScale.Enabled">
            <summary>
            Control whether the plot bitmap should be stretched if display scaling is active.
            When enabled text will be large but may be blurry.
            When disabled text will be sharp but may be too small to read on high-resolution displays.
            </summary>
        </member>
        <member name="P:ScottPlot.Control.DisplayScale.ScaleRatio">
            <summary>
            Current display scale ratio. 
            </summary>
        </member>
        <member name="E:ScottPlot.Control.DisplayScale.ScaleChanged">
            <summary>
            This event is invoked whenever the display scale is changed.
            </summary>
        </member>
        <member name="M:ScottPlot.Control.DisplayScale.Measure">
            <summary>
            Update the scale ratio using that of the active display.
            Call this method if you expect the display scale has changed.
            </summary>
        </member>
        <member name="T:ScottPlot.Control.EventProcess.UIEventFactory">
            <summary>
            This class takes details about interactions and builds them into event objects which can 
            be passed into the event processor for processing/rendering when the render queue is free.
            </summary>
        </member>
        <member name="T:ScottPlot.Control.EventProcess.EventsProcessor">
            <summary>
            This event processor process incoming events and invokes renders as needed.
            This class contains logic to optionally display a fast preview render and a delayed high quality render.
            </summary>
        </member>
        <member name="F:ScottPlot.Control.EventProcess.EventsProcessor.Queue">
            <summary>
            List of events that have not yet been processed
            </summary>
        </member>
        <member name="F:ScottPlot.Control.EventProcess.EventsProcessor.Enable">
            <summary>
            The event processor loop will hang infinitely until this is set to True
            </summary>
        </member>
        <member name="F:ScottPlot.Control.EventProcess.EventsProcessor.RenderDelayTimer">
            <summary>
            This timer is used for delayed rendering.
            It is restarted whenever an event is processed which requests a delayed render.
            </summary>
        </member>
        <member name="F:ScottPlot.Control.EventProcess.EventsProcessor.QueueProcessorIsRunning">
            <summary>
            This is true while the processor is processing events and/or waiting for a delayed render.
            </summary>
        </member>
        <member name="P:ScottPlot.Control.EventProcess.EventsProcessor.RenderDelayMilliseconds">
            <summary>
            Time to wait after a low-quality render to invoke a high quality render
            </summary>
        </member>
        <member name="P:ScottPlot.Control.EventProcess.EventsProcessor.RenderAction">
            <summary>
            When a render is required this Action will be invoked.
            Its argument indicates whether low quality should be used.
            </summary>
        </member>
        <member name="M:ScottPlot.Control.EventProcess.EventsProcessor.#ctor(System.Action{System.Boolean},System.Int32)">
            <summary>
            Create a processor to invoke renders in response to incoming events
            </summary>
            <param name="renderAction">Action to invoke to perform a render. Bool argument is LowQuality.</param>
            <param name="renderDelay">Milliseconds after low-quality render to re-render using high quality.</param>
        </member>
        <member name="M:ScottPlot.Control.EventProcess.EventsProcessor.RenderHighQuality">
            <summary>
            Perform a high quality render.
            Call this instead of the action itself because this has better-documented arguments.
            </summary>
        </member>
        <member name="M:ScottPlot.Control.EventProcess.EventsProcessor.RenderLowQuality">
            <summary>
            Perform a low quality render.
            Call this instead of the action itself because this has better-documented arguments.
            </summary>
        </member>
        <member name="M:ScottPlot.Control.EventProcess.EventsProcessor.ProcessAsync(ScottPlot.Control.EventProcess.IUIEvent)">
            <summary>
            Add an event to the queue and process it when it is ready.
            After all events are processed a render will be called automatically by the queue processor.
            </summary>
        </member>
        <member name="M:ScottPlot.Control.EventProcess.EventsProcessor.RenderPreview(ScottPlot.RenderType)">
            <summary>
            Perform a low quality preview render if the render type allows it
            </summary>
        </member>
        <member name="M:ScottPlot.Control.EventProcess.EventsProcessor.RenderFinal(ScottPlot.RenderType)">
            <summary>
            Perform a final high quality render if the render type allows it.
            </summary>
            <returns>Return False if the final render needs to happen later</returns>
        </member>
        <member name="M:ScottPlot.Control.EventProcess.EventsProcessor.RunQueueProcessor">
            <summary>
            Process every event in the queue.
            A render will be executed after each event is processed.
            A slight delay will be added between queue checks.
            </summary>
        </member>
        <member name="T:ScottPlot.Control.EventProcess.Events.ApplyZoomRectangleEvent">
            <summary>
            This event describes what happens when the mouse button is lifted after 
            middle-click-dragging a rectangle to zoom into. The coordinates of that rectangle
            are calculated, and the plot's axis limits are adjusted accordingly.
            </summary>
        </member>
        <member name="T:ScottPlot.Control.EventProcess.Events.BenchmarkToggleEvent">
            <summary>
            This event toggles visibility of the benchmark.
            This event is typically called after double-clicking the plot.
            </summary>
        </member>
        <member name="T:ScottPlot.Control.EventProcess.Events.MouseAxisAutoEvent">
            <summary>
            This event calls AxisAuto() on all axes.
            This is typically called after middle-clicking.
            </summary>
        </member>
        <member name="T:ScottPlot.Control.EventProcess.Events.MouseMovedToZoomRectangle">
            <summary>
            This event occurs when the user is actively middle-click-dragging to zoom.
            A zoom window is drawn on the screen, but axis limits have not yet been changed.
            </summary>
        </member>
        <member name="T:ScottPlot.Control.EventProcess.Events.MousePanEvent">
            <summary>
            This event describes represents interactive panning.
            It is assume the plot has already been reset to the pre-mouse-interaction state,
            and processing of this event pans the plot on the axes according to the distance
            the mouse has moved.
            This is typically called on MouseMove events when the left button is held down.
            </summary>
        </member>
        <member name="T:ScottPlot.Control.EventProcess.Events.MouseScrollEvent">
            <summary>
            This event describes a zoom operation performed by scrolling the mouse wheel.
            </summary>
        </member>
        <member name="T:ScottPlot.Control.EventProcess.Events.MouseUpClearRenderEvent">
            <summary>
            This event is called after the mouse button is lifted (typically following panning and zooming).
            It assumes all the axis manipulation (panning/zooming) has already been performed,
            and the purpose of this event is only to request an immediate high quality render.
            </summary>
        </member>
        <member name="T:ScottPlot.Control.EventProcess.Events.MouseZoomEvent">
            <summary>
            This event describes represents interactive zooming.
            It is assume the plot has already been reset to the pre-mouse-interaction state,
            and processing of this event zooms the plot on the axes according to the distance
            the mouse has moved.
            This is typically called on MouseMove events when the right button is held down.
            </summary>
        </member>
        <member name="T:ScottPlot.Control.EventProcess.Events.PlottableDragEvent">
            <summary>
            This event describes what happens when a draggable plottable (like an axis line)
            has been moved from its initial position. This event places the plottable of interest
            at the current mouse position.
            This is typically called on MouseMove events while left-click-dragging a draggable plottable.
            </summary>
        </member>
        <member name="T:ScottPlot.Control.QualityConfiguration">
            <summary>
            This class defines the quality to use for renders after different interactive events occur.
            Programmatically-triggered events typically use high quality mode (anti-aliasing enabled).
            Real-time mouse-interactive events like zooming and panning typically use low quality mode.
            It is possible to automatically render using high quality after a period of inactivity.
            </summary>
        </member>
        <member name="F:ScottPlot.Control.QualityMode.Low">
            <summary>
            Anti-aliasing always off
            </summary>
        </member>
        <member name="F:ScottPlot.Control.QualityMode.LowWhileDragging">
            <summary>
            Anti-aliasing off while dragging (more responsive) but on otherwise
            </summary>
        </member>
        <member name="F:ScottPlot.Control.QualityMode.High">
            <summary>
            Anti-aliasing always on
            </summary>
        </member>
        <member name="T:ScottPlot.Coordinate">
            <summary>
            Describes an X/Y position in coordinate space
            </summary>
        </member>
        <member name="M:ScottPlot.Coordinate.IsFinite">
            <summary>
            True as lone as neither coordinate is NaN or Infinity
            </summary>
        </member>
        <member name="M:ScottPlot.Coordinate.Distance(ScottPlot.Coordinate)">
            <summary>
            Return the distance to another coordinate (in coordinate units)
            </summary>
        </member>
        <member name="T:ScottPlot.CoordinateRect">
            <summary>
            Describes the location and size of a rectangle in coordinate space
            </summary>
        </member>
        <member name="M:ScottPlot.DataGen.Consecutive(System.Int32,System.Double,System.Double)">
            <summary>
            Generates an array of numbers with constant spacing.
            </summary>
            <param name="pointCount">The number of points</param>
            <param name="spacing">The space between points. Default 1.</param>
            <param name="offset">The first point. Default 0</param>
            <returns>An array of numbers with constant spacing.</returns>
        </member>
        <member name="M:ScottPlot.DataGen.Sin(System.Double[],System.Double)">
            <summary>
            Generates an array of sine values of an input array.
            </summary>
            <param name="xs">The arguments to the sine function.</param>
            <param name="mult">A number to multiply the output by. Default 1.</param>
            <returns>An array of sine values</returns>
        </member>
        <member name="M:ScottPlot.DataGen.Sin(System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Generates an array of sine values.
            </summary>
            <param name="pointCount">The number of values to generate.</param>
            <param name="oscillations">The number of periods. Default 1.</param>
            <param name="offset">The number to increment the output by. Default 0.</param>
            <param name="mult">The number to multiply the output by. Default 1.</param>
            <param name="phase">The fraction of a period to offset by. Default 0.</param>
            <returns>An array of sine values</returns>
        </member>
        <member name="M:ScottPlot.DataGen.SinSweep(System.Int32,System.Double)">
            <summary>
            Return data for a sine wave that increases frequency toward the end of an array.
            This function may be useful for inspecting rendering artifacts when data is displayed at different densities.
            </summary>
            <param name="pointCount">The number of values to generate.</param>
            <param name="density">Increasing this value increases maximum frequency.</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:ScottPlot.DataGen.Cos(System.Double[],System.Double)">
            <summary>
            Generates an array of cosine values of an input array.
            </summary>
            <param name="xs">The arguments to the cosine function.</param>
            <param name="mult">A number to multiply the output by. Default 1.</param>
            <returns>An array of cosine values</returns>
        </member>
        <member name="M:ScottPlot.DataGen.Cos(System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Generates an array of cosine values.
            </summary>
            <param name="pointCount">The number of values to generate.</param>
            <param name="oscillations">The number of periods. Default 1.</param>
            <param name="offset">The number to increment the output by. Default 0.</param>
            <param name="mult">The number to multiply the output by. Default 1.</param>
            <param name="phase">The fraction of a period to offset by. Default 0.</param>
            <returns>An array of cosine values</returns>
        </member>
        <member name="M:ScottPlot.DataGen.Tan(System.Double[],System.Double)">
            <summary>
            Generates an array of tangent values of an input array.
            </summary>
            <param name="xs">The arguments to the tangent function.</param>
            <param name="mult">A number to multiply the output by. Default 1.</param>
            <returns>An array of tangent values</returns>
        </member>
        <member name="M:ScottPlot.DataGen.Random(System.Random,System.Int32,System.Double,System.Double)">
            <summary>
            Generates an array of random numbers following a uniform distribution on the interval [offset, multiplier].
            </summary>
            <param name="rand">The Random object to use.</param>
            <param name="pointCount">The number of random points to generate.</param>
            <param name="multiplier">The maximum number above offset that may be generated.</param>
            <param name="offset">The minimum number that may be generated.</param>
            <returns>An array of random numbers.</returns>
        </member>
        <member name="M:ScottPlot.DataGen.Random2D(System.Random,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Generates a 2D array of random numbers between 0 and 1 (uniform distribution)
            </summary>
            <param name="rand">The Random object to use.</param>
            <param name="rows">number of rows (dimension 0)</param>
            <param name="columns">number of columns (dimension 1)</param>
            <param name="multiplier">Multiply values by this number after generation</param>
            <param name="offset">Add to values after multiplication</param>
            <returns>2D array filled with random numbers</returns>
        </member>
        <member name="M:ScottPlot.DataGen.RandomInts(System.Random,System.Int32,System.Double,System.Double)">
            <summary>
            Generates an array of random numbers following a uniform distribution on the interval [offset, multiplier].
            </summary>
            <param name="rand">The Random object to use.</param>
            <param name="pointCount">The number of random points to generate.</param>
            <param name="multiplier">The maximum number above offset that may be generated.</param>
            <param name="offset">The minimum number that may be generated.</param>
            <returns>An array of random numbers.</returns>
        </member>
        <member name="M:ScottPlot.DataGen.RandomNormalValue(System.Random,System.Double,System.Double,System.Double)">
            <summary>
            Generates a single value from a normal distribution.
            </summary>
            <param name="rand">The Random object to use.</param>
            <param name="mean">The mean of the distribution.</param>
            <param name="stdDev">The standard deviation of the distribution.</param>
            <param name="maxSdMultiple">The maximum distance from the mean to generate, given as a multiple of the standard deviation.</param>
            <returns>A single value from a normal distribution.</returns>
        </member>
        <member name="M:ScottPlot.DataGen.RandomNormal(System.Int32,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Generates an array of values from a normal distribution.
            </summary>
            <param name="seed">The number to seed the random number generator with.</param>
            <param name="pointCount">The number of points to generate.</param>
            <param name="mean">The mean of the distribution.</param>
            <param name="stdDev">The standard deviation of the distribution.</param>
            <param name="maxSdMultiple">The maximum distance from the mean to generate, given as a multiple of the standard deviation.</param>
            <returns>An array of values from a normal distribution.</returns>
        </member>
        <member name="M:ScottPlot.DataGen.RandomNormal(System.Random,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Generates an array of values from a normal distribution.
            </summary>
            <param name="rand">The Random object to use.</param>
            <param name="pointCount">The number of points to generate.</param>
            <param name="mean">The mean of the distribution.</param>
            <param name="stdDev">The standard deviation of the distribution.</param>
            <param name="maxSdMultiple">The maximum distance from the mean to generate, given as a multiple of the standard deviation.</param>
            <returns>An array of values from a normal distribution.</returns>
        </member>
        <member name="M:ScottPlot.DataGen.NoisyLinear(System.Random,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Generates an array of data with normally distributed residuals about a line.
            </summary>
            <param name="rand">The Random object to use.</param>
            <param name="pointCount">The number of points to generate. Default 100.</param>
            <param name="slope">The slope of the line. Default 1.</param>
            <param name="offset">The y-intercept of the line. Default 0.</param>
            <param name="noise">The standard deviation of the residuals. Default 0.1</param>
            <returns>An array of approximately linear data.</returns>
        </member>
        <member name="M:ScottPlot.DataGen.NoisySin(System.Random,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Generates an array of data with uniformally distributed residuals about a sinusoidal curve.
            </summary>
            <param name="rand">The Random object to use.</param>
            <param name="pointCount">The number of points to generate.</param>
            <param name="oscillations">The number of periods. Default 1.</param>
            <param name="noiseLevel">Twice the maximum residual, in units of mult. Default 0.5</param>
            <param name="mult">The number to multiply the residuals by. Default 1.</param>
            <returns>An array of approximately sinusoidal data.</returns>
        </member>
        <member name="M:ScottPlot.DataGen.RandomColor(System.Random,System.Int32,System.Int32)">
            <summary>
            Generates a random color.
            </summary>
            <param name="rand">The Random object to use.</param>
            <param name="min">The min of each component. Default 0.</param>
            <param name="max">The max of each component. Default 255.</param>
            <returns>A random color.</returns>
        </member>
        <member name="M:ScottPlot.DataGen.RandomWalk(System.Int32,System.Double,System.Double)">
            <summary>
            Return the cumulative sum of a random set of numbers using a fixed seed
            </summary>
            <param name="pointCount">The number of points to generate.</param>
            <param name="mult">The max difference between points in the walk. Default 1.</param>
            <param name="offset">The first point in the walk. Default 0.</param>
            <returns>The cumulative sum of a random set of numbers.</returns>
        </member>
        <member name="M:ScottPlot.DataGen.RandomWalk(System.Random,System.Int32,System.Double,System.Double)">
            <summary>
            Return the cumulative sum of a random set of numbers.
            </summary>
            <param name="rand">The random object to use.</param>
            <param name="pointCount">The number of points to generate.</param>
            <param name="mult">The max difference between points in the walk. Default 1.</param>
            <param name="offset">The first point in the walk. Default 0.</param>
            <returns>The cumulative sum of a random set of numbers.</returns>
        </member>
        <member name="M:ScottPlot.DataGen.RandomWalk2D(System.Random,System.Int32)">
            <summary>
            Generate unevenly-spaced X/Y points.
            X values walk upward (by values from 0 to 1)
            Y values walk randomly (by values from -1 to 1)
            </summary>
        </member>
        <member name="M:ScottPlot.DataGen.RandomStockPrices(System.Random,System.Int32,System.TimeSpan,System.Double,System.Double)">
            <summary>
            Return OHLC array with random prices X positions as DateTime.ToOATime() values using the given time delta
            </summary>
            <param name="rand">The random object to use.</param>
            <param name="pointCount">The number of prices to generate.</param>
            <param name="delta">The difference in time between prices.</param>
            <param name="mult">The max difference between base prices around which that day's prices independently vary. Default 10.</param>
            <param name="startingPrice">The initial base price. Default 123.45</param>
            <returns>OHLC array with random prices</returns>
        </member>
        <member name="M:ScottPlot.DataGen.RandomStockPrices(System.Random,System.Int32,System.Double,System.Double)">
            <summary>
            Return OHLC array with random prices X positions as sequential numbers (0, 1, 2, etc.)
            </summary>
            <param name="rand">The random object to use.</param>
            <param name="pointCount">The number of prices to generate.</param>
            <param name="mult">The max difference between base prices around which that day's prices independently vary. Default 10.</param>
            <param name="startingPrice">The initial base price. Default 123.45</param>
            <returns>OHLC array with random prices</returns>
        </member>
        <member name="M:ScottPlot.DataGen.RandomStockPrices(System.Random,System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Return OHLC array with random prices X positions as sequential numbers (0, 1, 2, etc.)
            </summary>
            <param name="rand">The random object to use.</param>
            <param name="pointCount">The number of prices to generate.</param>
            <param name="mult">The max difference between base prices around which that day's prices independently vary. Default 10.</param>
            <param name="startingPrice">The initial base price. Default 123.45</param>
            <param name="deltaMinutes">The minutes between prices. Cumulative with deltaDays. Default 0.</param>
            <param name="deltaDays">The days between prices. Cumulative with deltaMinutes. Default 1.</param>
            <param name="sequential">Whether to use TimeSpan or integer x axis.</param>
            <returns>OHLC array with random prices</returns>
        </member>
        <member name="M:ScottPlot.DataGen.RandomSpan(System.Random,System.Double,System.Double,System.Double)">
            <summary>
            Generates a random span.
            </summary>
            <param name="rand">The random object to use.</param>
            <param name="low">The minimum of the span. Default 0.</param>
            <param name="high">Tge naximum of the span. Default 100.</param>
            <param name="minimumSpacing">The minimum length of the span. Default 10.</param>
            <returns>A random span.</returns>
        </member>
        <member name="M:ScottPlot.DataGen.Range(System.Int32)">
            <summary>
            Generates a range of values starting at 0 and separated by 1.
            </summary>
            <param name="stop">The end of the range.</param>
            <returns>A range of values.</returns>
        </member>
        <member name="M:ScottPlot.DataGen.Range(System.Int32,System.Int32)">
            <summary>
            Generates a range of values separated by 1.
            </summary>
            <param name="start">The start of the range.</param>
            <param name="stop">The end of the range.</param>
            <returns>A range of values.</returns>
        </member>
        <member name="M:ScottPlot.DataGen.Range(System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Generates a range of values.
            </summary>
            <param name="start">The start of the range.</param>
            <param name="stop">The end of the range.</param>
            <param name="step">The space between values.</param>
            <param name="includeStop">Indicates whether to include the stop point in the range. Default false.</param>
            <returns>A range of values.</returns>
        </member>
        <member name="M:ScottPlot.DataGen.Zeros(System.Int32)">
            <summary>
            Generates an array of zeros
            </summary>
            <param name="pointCount">The number of zeroes to generate</param>
            <returns>An array of zeros</returns>
        </member>
        <member name="M:ScottPlot.DataGen.Ones(System.Int32)">
            <summary>
            Generates an array of ones
            </summary>
            <param name="pointCount">The number of ones to generate</param>
            <returns>An array of ones</returns>
        </member>
        <member name="M:ScottPlot.DataGen.BitmapFrom2dArray(System.Double[0:,0:],ScottPlot.Drawing.Colormap)">
            <summary>
            Generates a Bitmap from data on the range [0, 255]
            </summary>
            <param name="data">The data to use.</param>
            <param name="cmap">The colormap to use.</param>
            <returns>A Bitmap</returns>
        </member>
        <member name="M:ScottPlot.DataGen.SampleImage">
            <summary>
            Generates a sample Bitmap.
            </summary>
            <returns>A sample Bitmap</returns>
        </member>
        <member name="M:ScottPlot.DataGen.SampleImageData">
            <summary>
            Returns a sample 2D array of grayscale values.
            </summary>
            <returns>2D array of grayscale values.</returns>
        </member>
        <member name="M:ScottPlot.DataGen.ActionPotential">
            <summary>
            Recording of a neuronal action potential (100 ms, 20 kHz sample rate, mV units)
            </summary>
            <returns>Recording of a neuronal action potential</returns>
        </member>
        <member name="P:ScottPlot.Drawing.Colormap.Name">
            <summary>
            Name of this colormap
            </summary>
        </member>
        <member name="M:ScottPlot.Drawing.Colormap.GetColormaps">
            <summary>
            Create new instances of every colormap and return them as an array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Drawing.Colormap.GetColormapNames">
            <summary>
            Return the names of all available colormaps.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Drawing.Colormap.GetColormapByName(System.String,System.Boolean)">
            <summary>
            Create a new colormap by its name.
            </summary>
            <param name="name">colormap name</param>
            <param name="throwIfNotFound">if false the default colormap (Viridis) will be returned</param>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Drawing.Colormap.Colorbar(ScottPlot.Drawing.Colormap,System.Int32,System.Int32,System.Boolean,System.Double,System.Double)">
            <summary>
            Return a bitmap showing the gradient of colors in a colormap.
            Defining min/max will create an image containing only part of the colormap.
            </summary>
        </member>
        <member name="M:ScottPlot.Drawing.GDI.GetScaleRatio">
            <summary>
            Return the display scale ratio being used.
            A scaling ratio of 1.0 means scaling is not active.
            </summary>
        </member>
        <member name="M:ScottPlot.Drawing.GDI.MeasureStringUsingTemporaryGraphics(System.String,ScottPlot.Drawing.Font)">
            <summary>
            Create a Bitmap and Graphics and use it to measure a string.
            Only use this function if an existing Graphics does not exist.
            </summary>
        </member>
        <member name="M:ScottPlot.Drawing.GDI.MeasureString(System.Drawing.Graphics,System.String,ScottPlot.Drawing.Font)">
            <summary>
            Return the size (in pixels) of the given string.
            </summary>
        </member>
        <member name="M:ScottPlot.Drawing.GDI.MeasureString(System.Drawing.Graphics,System.String,System.String,System.Double,System.Boolean,System.Drawing.FontFamily)">
            <summary>
            Return the size (in pixels) of the given string.
            If <paramref name="fontFamily"/> is provided it will be used instead of <paramref name="fontName"/>.
            </summary>
        </member>
        <member name="M:ScottPlot.Drawing.GDI.MeasureString(System.Drawing.Graphics,System.String,System.Drawing.Font)">
            <summary>
            Return the size (in pixels) of the given string.
            </summary>
        </member>
        <member name="M:ScottPlot.Drawing.GDI.TranslateString(System.Drawing.Graphics,System.String,ScottPlot.Drawing.Font)">
            <summary>
            Return the X and Y distance (pixels) necessary to translate the canvas for the given text/font/alignment
            </summary>
        </member>
        <member name="M:ScottPlot.Drawing.GDI.ClearType(System.Boolean)">
            <summary>
            Controls whether ClearType (instead of the default AntiAlias) hinting will be used.
            ClearType typically appears superior except when rendered above a transparent background.
            </summary>
        </member>
        <member name="M:ScottPlot.Drawing.GDI.Font(System.String,System.Single,System.Boolean,System.Drawing.FontFamily)">
            <summary>
            Return the size (in pixels) of the given string.
            If <paramref name="fontFamily"/> is provided it will be used instead of <paramref name="fontName"/>.
            </summary>
        </member>
        <member name="T:ScottPlot.Drawing.InstalledFont">
            <summary>
            This class is used to retrieve OS-agnostic fonts using those known to be installed on the system.
            </summary>
        </member>
        <member name="M:ScottPlot.Drawing.InstalledFont.ValidFontName(System.String)">
            <summary>
            Returns a font name guaranteed to be installed on the system
            </summary>
        </member>
        <member name="M:ScottPlot.Drawing.InstalledFont.ValidFontName(System.String[])">
            <summary>
            Returns a font name guaranteed to be installed on the system
            </summary>
        </member>
        <member name="M:ScottPlot.Drawing.InstalledFont.ValidFontFamily(System.String)">
            <summary>
            Returns a font family guaranteed to be installed on the system
            </summary>
        </member>
        <member name="M:ScottPlot.Drawing.InstalledFont.ValidFontFamily(System.String[])">
            <summary>
            Returns a font family guaranteed to be installed on the system
            </summary>
        </member>
        <member name="M:ScottPlot.Drawing.Tools.PolyAboveAndBelow(System.Double[],System.Double[],System.Double)">
            <summary>
            Return Xs and Ys for 2 polygons representing the input data above and below the given baseline
            </summary>
        </member>
        <member name="T:ScottPlot.Alignment">
            <summary>
            Vertical (upper/middle/lower) and Horizontal (left/center/right) alignment
            </summary>
        </member>
        <member name="F:ScottPlot.ArrowAnchor.Base">
            <summary>
            X/Y coordinates define the base of the arrow
            </summary>
        </member>
        <member name="F:ScottPlot.ArrowAnchor.Center">
            <summary>
            X/Y coordinates define the center of the arrow
            </summary>
        </member>
        <member name="F:ScottPlot.ArrowAnchor.Tip">
            <summary>
            X/Y coordinates define the tip of the arrow
            </summary>
        </member>
        <member name="T:ScottPlot.EqualScaleMode">
            <summary>
            Defines if/how axis scales (units per pixel) are matched between horizontal and vertical axes.
            </summary>
        </member>
        <member name="F:ScottPlot.EqualScaleMode.Disabled">
            <summary>
            Horizontal and vertical axes can be scaled independently. 
            Squares and circles may stretch to rectangles and ovals.
            </summary>
        </member>
        <member name="F:ScottPlot.EqualScaleMode.PreserveY">
            <summary>
            Axis scales are locked so geometry of squares and circles is preserved.
            After axes are set, the vertical scale (units per pixel) is applied to the horizontal axis.
            </summary>
        </member>
        <member name="F:ScottPlot.EqualScaleMode.PreserveX">
            <summary>
            Axis scales are locked so geometry of squares and circles is preserved.
            After axes are set, the horizontal scale (units per pixel) is applied to the vertical axis.
            </summary>
        </member>
        <member name="F:ScottPlot.EqualScaleMode.ZoomOut">
            <summary>
            Axis scales are locked so geometry of squares and circles is preserved.
            After axes are set, the largest scale (most units per pixel) is applied to both axes.
            Apply the most zoomed-out scale to both axes.
            </summary>
        </member>
        <member name="F:ScottPlot.EqualScaleMode.PreserveLargest">
            <summary>
            Apply the scale of the larger axis to both axes.
            </summary>
        </member>
        <member name="F:ScottPlot.EqualScaleMode.PreserveSmallest">
            <summary>
            Apply the scale of the smaller axis to both axes.
            </summary>
        </member>
        <member name="T:ScottPlot.ImagePlacement">
            <summary>
            Defines how an image will be placed in Radar and CoxComb charts
            </summary>
        </member>
        <member name="F:ScottPlot.ImagePlacement.Outside">
            <summary>
            Images will be aligned at the arms of the chart
            </summary>
        </member>
        <member name="F:ScottPlot.ImagePlacement.Inside">
            <summary>
            Images will be aligned halfway in the space between arms of the chart
            </summary>
        </member>
        <member name="F:ScottPlot.RadialGaugeMode.Stacked">
            <summary>
            Successive gauges start outward from the center but start at the same angle
            </summary>
        </member>
        <member name="F:ScottPlot.RadialGaugeMode.Sequential">
            <summary>
            Successive gauges start outward from the center and start at sequential angles
            </summary>
        </member>
        <member name="F:ScottPlot.RadialGaugeMode.SingleGauge">
            <summary>
            Gauges are all the same distance from the center but start at sequential angles
            </summary>
        </member>
        <member name="T:ScottPlot.RenderType">
            <summary>
            Describes how a render should be performed with respect to quality.
            High quality enables anti-aliasing but is slower.
            Some options describe multiple renders, with or without a delay between them.
            </summary>
        </member>
        <member name="F:ScottPlot.RenderType.LowQuality">
            <summary>
            Only render using low quality (anti-aliasing off)
            </summary>
        </member>
        <member name="F:ScottPlot.RenderType.HighQuality">
            <summary>
            Only render using high quality (anti-aliasing on)
            </summary>
        </member>
        <member name="F:ScottPlot.RenderType.HighQualityDelayed">
            <summary>
            Perform a high quality render after a delay.
            This is the best render type to use when resizing windows.
            </summary>
        </member>
        <member name="F:ScottPlot.RenderType.LowQualityThenHighQuality">
            <summary>
            Render low quality and display it, then if no new render requests
            have been received immediately render a high quality version and display it.
            This is the best render option to use when requesting renders programmatically
            </summary>
        </member>
        <member name="F:ScottPlot.RenderType.LowQualityThenHighQualityDelayed">
            <summary>
            Render low quality and display it, wait a small period of time for new render requests to arrive,
            and if no new requests have been received render a high quality version and display it.
            This is the best render option to use for mouse interaction.
            </summary>
        </member>
        <member name="F:ScottPlot.RenderType.ProcessMouseEventsOnly">
            <summary>
            Process mouse events only (pan, zoom, etc) and do not render graphics on a Bitmap,
            then if no new requests have been received render using the last-used render type.
            </summary>
        </member>
        <member name="M:ScottPlot.Marker.Create(ScottPlot.MarkerShape)">
            <summary>
            Create a new Marker (IMarker class) from an old marker (MarkerStyle enum)
            </summary>
        </member>
        <member name="T:ScottPlot.NumericConversion">
            <summary>
            This class contains type-specific methods to convert between generic values and doubles
            optimized for performance using platform-specific features.
            </summary>
        </member>
        <member name="M:ScottPlot.NumericConversion.GenericToDouble``1(``0@)">
            <summary>
            Returns the double value of a <typeparamref name="T"/> 
            using a conversion technique optimized for the platform.
            </summary>
        </member>
        <member name="M:ScottPlot.NumericConversion.GenericToDouble``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            Returns the double value of the <typeparamref name="T"/> at position <paramref name="i"/> in <paramref name="list"/>
            using a conversion technique optimized for the platform.
            </summary>
        </member>
        <member name="M:ScottPlot.NumericConversion.GenericToDouble``1(``0[],System.Int32)">
            <summary>
            Returns the double value of the <typeparamref name="T"/> at position <paramref name="i"/> in <paramref name="array"/>
            using a conversion technique optimized for the platform.
            </summary>
        </member>
        <member name="M:ScottPlot.NumericConversion.DoubleToGeneric``1(System.Double,``0@)">
            <summary>
            Creates a <typeparamref name="T"/> for a given double <paramref name="value"/>
            using a conversion technique optimized for the platform.
            </summary>
        </member>
        <member name="M:ScottPlot.Palette.FromHtmlColors(System.String[])">
            <summary>
            Create a new color palette from an array of HTML colors
            </summary>
        </member>
        <member name="M:ScottPlot.Palette.GetPalettes">
            <summary>
            Return an array containing every available style
            </summary>
        </member>
        <member name="T:ScottPlot.Pixel">
            <summary>
            Describes an X/Y position in pixel space
            </summary>
        </member>
        <member name="M:ScottPlot.Pixel.IsFinite">
            <summary>
            True as lone as neither coordinate is NaN or Infinity
            </summary>
        </member>
        <member name="M:ScottPlot.Pixel.Distance(ScottPlot.Pixel)">
            <summary>
            Return the distance to another pixel (in pixel units)
            </summary>
        </member>
        <member name="M:ScottPlot.Pixel.Translate(System.Single,System.Single)">
            <summary>
            Shift the pixel location by the given deltas
            </summary>
        </member>
        <member name="M:ScottPlot.Pixel.WithTranslation(System.Single,System.Single)">
            <summary>
            Return a new pixel translated by the given deltas
            </summary>
        </member>
        <member name="T:ScottPlot.PlotDimensions">
            <summary>
            PlotDimensions supplies figure dimensions and pixel/coordinate lookup methods for a single 2D plane
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.Annotation">
            <summary>
            Text placed at a location relative to the data area that does not move when the axis limits change
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Annotation.X">
            <summary>
            Horizontal location (in pixel units) relative to the data area
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Annotation.Y">
            <summary>
            Vertical position (in pixel units) relative to the data area
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Annotation.Label">
            <summary>
            Text displayed in the annotation
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.ArrowCoordinated">
            <summary>
            An arrow with X/Y coordinates for the base and the tip
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.ArrowCoordinated.Base">
            <summary>
            Location of the arrow base in coordinate space
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.ArrowCoordinated.Tip">
            <summary>
            Location of the arrow base in coordinate space
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ArrowCoordinated.Color">
            <summary>
            Color of the arrow and arrowhead
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ArrowCoordinated.LineColor">
            <summary>
            Color of the arrow and arrowhead
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ArrowCoordinated.LineWidth">
            <summary>
            Thickness of the arrow line
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ArrowCoordinated.LineStyle">
            <summary>
            Style of the arrow line
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ArrowCoordinated.Label">
            <summary>
            Label to appear in the legend
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ArrowCoordinated.ArrowheadWidth">
            <summary>
            Width of the arrowhead (pixels)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ArrowCoordinated.ArrowheadLength">
            <summary>
            Height of the arrowhead (pixels)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ArrowCoordinated.MinimumLengthPixels">
            <summary>
            The arrow will be lengthened to ensure it is at least this size on the screen
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ArrowCoordinated.MarkerShape">
            <summary>
            Marker to be drawn at the base (if MarkerSize > 0)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ArrowCoordinated.MarkerSize">
            <summary>
            Size of marker (in pixels) to draw at the base
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLine.Position">
            <summary>
            Location of the line (Y position if horizontal line, X position if vertical line)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLine.PositionLabel">
            <summary>
            If True, the position will be labeled on the axis using the PositionFormatter
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.AxisLine.PositionLabelFont">
            <summary>
            Font to use for position labels (labels drawn over the axis)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLine.PositionLabelBackground">
            <summary>
            Color to use behind the position labels
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLine.PositionLabelOppositeAxis">
            <summary>
            If true the position label will be drawn on the right or top of the data area.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLine.PositionLabelAxis">
            <summary>
            If provided, the position label will be rendered on this axis
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLine.PositionFormatter">
            <summary>
            This method generates the position label text for numeric (non-DateTime) axes.
            For DateTime axes assign your own format string that uses DateTime.FromOADate(position).
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLine.DateTime">
            <summary>
            Position of the axis line in DateTime (OADate) units.
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.AxisLine.IsHorizontal">
            <summary>
            Indicates whether the line is horizontal (position in Y units) or vertical (position in X units)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLine.IgnoreAxisAuto">
            <summary>
            If true, AxisAuto() will ignore the position of this line when determining axis limits
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLine.Label">
            <summary>
            Text that appears in the legend
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLine.DragEnabled">
            <summary>
            Indicates whether this line is draggable in user controls.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLine.DragCursor">
            <summary>
            Cursor to display while hovering over this line if dragging is enabled.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLine.DragLimitMin">
            <summary>
            If dragging is enabled the line cannot be dragged more negative than this position
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLine.DragLimitMax">
            <summary>
            If dragging is enabled the line cannot be dragged more positive than this position
            </summary>
        </member>
        <member name="E:ScottPlot.Plottable.AxisLine.Dragged">
            <summary>
            This event is invoked after the line is dragged
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLine.Min">
            <summary>
            The lower bound of the axis line.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLine.Max">
            <summary>
            The upper bound of the axis line.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.AxisLine.DragTo(System.Double,System.Double,System.Boolean)">
            <summary>
            Move the line to a new coordinate in plot space.
            </summary>
            <param name="coordinateX">new X position</param>
            <param name="coordinateY">new Y position</param>
            <param name="fixedSize">This argument is ignored</param>
        </member>
        <member name="M:ScottPlot.Plottable.AxisLine.IsUnderMouse(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Return True if the line is within a certain number of pixels (snap) to the mouse
            </summary>
            <param name="coordinateX">mouse position (coordinate space)</param>
            <param name="coordinateY">mouse position (coordinate space)</param>
            <param name="snapX">snap distance (pixels)</param>
            <param name="snapY">snap distance (pixels)</param>
            <returns></returns>
        </member>
        <member name="F:ScottPlot.Plottable.AxisLineVector.Positions">
            <summary>
            Location of the line (Y position if horizontal line, X position if vertical line)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLineVector.Offset">
            <summary>
            Add this value to each datapoint value before plotting (axis units)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLineVector.PositionLabel">
            <summary>
            If True, the position will be labeled on the axis using the PositionFormatter
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.AxisLineVector.PositionLabelFont">
            <summary>
            Font to use for position labels (labels drawn over the axis)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLineVector.PositionLabelBackground">
            <summary>
            Color to use behind the position labels
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLineVector.PositionLabelOppositeAxis">
            <summary>
            If true the position label will be drawn on the right or top of the data area.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLineVector.PositionFormatter">
            <summary>
            This method generates the position label text for numeric (non-DateTime) axes.
            For DateTime axes assign your own format string that uses DateTime.FromOADate(position).
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.AxisLineVector.IsHorizontal">
            <summary>
            Indicates whether the line is horizontal (position in Y units) or vertical (position in X units)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLineVector.IgnoreAxisAuto">
            <summary>
            If true, AxisAuto() will ignore the position of this line when determining axis limits
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLineVector.Label">
            <summary>
            Text that appears in the legend
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLineVector.DragEnabled">
            <summary>
            Indicates whether this line is draggable in user controls.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLineVector.DragCursor">
            <summary>
            Cursor to display while hovering over this line if dragging is enabled.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLineVector.DragLimitMin">
            <summary>
            If dragging is enabled the line cannot be dragged more negative than this position
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLineVector.DragLimitMax">
            <summary>
            If dragging is enabled the line cannot be dragged more positive than this position
            </summary>
        </member>
        <member name="E:ScottPlot.Plottable.AxisLineVector.Dragged">
            <summary>
            This event is invoked after the line is dragged
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLineVector.Min">
            <summary>
            The lower bound of the axis line.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisLineVector.Max">
            <summary>
            The upper bound of the axis line.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.AxisLineVector.DragTo(System.Double,System.Double,System.Boolean)">
            <summary>
            Move the reference line to a new coordinate in plot space.
            </summary>
            <param name="coordinateX">new X position</param>
            <param name="coordinateY">new Y position</param>
            <param name="fixedSize">This argument is ignored</param>
        </member>
        <member name="M:ScottPlot.Plottable.AxisLineVector.IsUnderMouse(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Return True if the reference line is within a certain number of pixels (snap) to the mouse
            </summary>
            <param name="coordinateX">mouse position (coordinate space)</param>
            <param name="coordinateY">mouse position (coordinate space)</param>
            <param name="snapX">snap distance (pixels)</param>
            <param name="snapY">snap distance (pixels)</param>
            <returns></returns>
        </member>
        <member name="T:ScottPlot.Plottable.VLineVector">
            <summary>
            Vertical line at an X position
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.VLineVector.Xs">
            <summary>
            X position to render the line
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.HLineVector">
            <summary>
            Horizontal line at an Y position
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.HLineVector.Ys">
            <summary>
            Y position to render the line
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.AxisSpan.IgnoreAxisAuto">
            <summary>
            If true, AxisAuto() will ignore the position of this span when determining axis limits
            </summary>
        </member>
        <member name="E:ScottPlot.Plottable.AxisSpan.Dragged">
            <summary>
            This event is invoked after the line is dragged 
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.AxisSpan.IsUnderMouse(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Return True if either span edge is within a certain number of pixels (snap) to the mouse
            </summary>
            <param name="coordinateX">mouse position (coordinate space)</param>
            <param name="coordinateY">mouse position (coordinate space)</param>
            <param name="snapX">snap distance (pixels)</param>
            <param name="snapY">snap distance (pixels)</param>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Plottable.AxisSpan.DragTo(System.Double,System.Double,System.Boolean)">
            <summary>
            Move the span to a new coordinate in plot space.
            </summary>
            <param name="coordinateX">new X position</param>
            <param name="coordinateY">new Y position</param>
            <param name="fixedSize">if True, both edges will be moved to maintain the size of the span</param>
        </member>
        <member name="T:ScottPlot.Plottable.Bar">
            <summary>
            This class represents a single Bar shown as part of a collection of Bars on a <see cref="T:ScottPlot.Plottable.BarSeries"/> plot
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Bar.Position">
            <summary>
            Horizontal position of the center of the bar 
            (or vertical position if it's a horizontal bar)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Bar.Value">
            <summary>
            Vertical position of the top of the bar 
            (or right edge if it's a horizontal bar)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Bar.ValueBase">
            <summary>
            Vertical position of the bottom of the bar 
            (or left edge if it's a horizontal bar)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Bar.Label">
            <summary>
            Text to display above the bar
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.Bar.Font">
            <summary>
            Styling of the text displayed above the bar
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Bar.Thickness">
            <summary>
            Horizontal width of the bar in axis units
            (or vertical height if it's a horizontal bar)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Bar.FillColor">
            <summary>
            Color filling the rectangular area of the bar
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Bar.LineColor">
            <summary>
            Color of the line outlining the rectangular area of the bar
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Bar.LineWidth">
            <summary>
            Width of the line outlining the rectangular area of the bar
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Bar.IsVertical">
            <summary>
            Indicates whether bars extend upward (vertical, default) or two the right (horizontal)
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.BarPlot">
            <summary>
            Bar plots display a series of bars. 
            Positions are defined by Xs.
            Heights are defined by Ys (relative to BaseValue and YOffsets).
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.BarPlotBase.Orientation">
            <summary>
            Orientation of the bars.
            Default behavior is vertical so values are on the Y axis and positions are on the X axis.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.BarPlotBase.PositionOffset">
            <summary>
            The position of each bar defines where the left edge of the bar should be.
            To center the bar at each position, adjust this value to be negative one-half of the BarWidth.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.BarPlotBase.Values">
            <summary>
            Size of each bar (along the axis defined by Orientation) relative to ValueBase
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.BarPlotBase.Positions">
            <summary>
            Location of the left edge of each bar.
            To center bars on these positions, adjust PositionOffset to be negative one-half of the BarWidth.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.BarPlotBase.ValueOffsets">
            <summary>
            This array defines the base of each bar.
            Unless the user specifically defines it, this will be an array of zeros.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.BarPlotBase.ValueErrors">
            <summary>
            If populated, this array describes the height of errorbars for each bar
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.BarPlotBase.ShowValuesAboveBars">
            <summary>
            If true, errorbars will be drawn according to the values in the YErrors array
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.BarPlotBase.ValueFormatter">
            <summary>
            Function to generate the strings placed above each bar based on its value
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.BarPlotBase.ValueBase">
            <summary>
            Bars are drawn from this level and extend according to the sizes defined in Values[]
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.BarPlotBase.BarWidth">
            <summary>
            Width of bars defined in axis units.
            If bars are evenly spaced, consider setting this to a fraction of the distance between the first two Positions.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.BarPlotBase.ErrorCapSize">
            <summary>
            Width of the errorbar caps defined in axis units.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.BarPlotBase.ErrorLineWidth">
            <summary>
            Thickness of the errorbar lines (pixel units)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.BarPlotBase.BorderColor">
            <summary>
            Outline each bar with this color. 
            Set this to transparent to disable outlines.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.BarPlotBase.ErrorColor">
            <summary>
            Color of errorbar lines.
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.BarPlotBase.Font">
            <summary>
            Font settings for labels drawn above the bars
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.BarPlotBase.Replace(System.Double[],System.Double[])">
            <summary>
            Replace the arrays used to define positions and values.
            New error arrays will be created and filled with zeros.
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.BarSeries">
            <summary>
            This plot type displays a collection of Bar objects, 
            allowing each Bar to be positioned and styled individually.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.BarSeries.GetBar(ScottPlot.Coordinate)">
            <summary>
            Return the bar located under the given coordinate (or null if no bar is there)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Bracket.X1">
            <summary>
            Horizontal location (in pixel units) relative to the data area
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Bracket.Y1">
            <summary>
            Vertical position (in pixel units) relative to the data area
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Bracket.X2">
            <summary>
            Horizontal location (in pixel units) relative to the data area
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Bracket.Y2">
            <summary>
            Vertical position (in pixel units) relative to the data area
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.Bracket.EdgeLength">
            <summary>
            Size of the small lines (in pixels) placed the edges of the bracket and between the center of the bracket and the label
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Bracket.Label">
            <summary>
            Text displayed in the annotation
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Bracket.Color">
            <summary>
            Color of the bracket lines and text
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Bracket.LineWidth">
            <summary>
            Thickness (in pixels) of the lines
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Bracket.LabelCounterClockwise">
            <summary>
            Controls whether the tip of the bracket is counter-clockwise from the line formed by the bracket base.
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.BubblePlot">
            <summary>
            Display circles of user-defined sizes and colors at specific X/Y positions
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.BubblePlot.Clear">
            <summary>
            Clear all bubbles
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.BubblePlot.Add(System.Double,System.Double,System.Double,System.Drawing.Color,System.Double,System.Drawing.Color)">
            <summary>
            Add a single bubble
            </summary>
            <param name="x">horizontal position (in coordinate space)</param>
            <param name="y">horizontal vertical (in coordinate space)</param>
            <param name="radius">size of the bubble (in pixels)</param>
            <param name="fillColor"></param>
            <param name="edgeWidth">size of the outline (in pixels)</param>
            <param name="edgeColor"></param>
        </member>
        <member name="M:ScottPlot.Plottable.BubblePlot.Add(System.Double[],System.Double[],System.Double,System.Drawing.Color,System.Double,System.Drawing.Color)">
            <summary>
            Add many bubbles with the same size and style
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.BubblePlot.GetPointNearestX(System.Double)">
            <summary>
            Return the X/Y coordinates of the point nearest the X position
            </summary>
            <param name="x">X position in plot space</param>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Plottable.BubblePlot.GetPointNearestY(System.Double)">
            <summary>
            Return the X/Y coordinates of the point nearest the Y position
            </summary>
            <param name="y">Y position in plot space</param>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Plottable.BubblePlot.GetPointNearest(System.Double,System.Double,System.Double)">
            <summary>
            Return the position and index of the data point nearest the given coordinate
            </summary>
            <param name="x">location in coordinate space</param>
            <param name="y">location in coordinate space</param>
            <param name="xyRatio">Ratio of pixels per unit (X/Y) when rendered</param>
        </member>
        <member name="T:ScottPlot.Plottable.ClevelandDotPlot">
            <summary>
            Cleveland Dot plots display a series of paired p[oints. 
            Positions are defined by Xs.
            Heights are defined by Ys1 and Ys2 (internally done with Ys and YOffsets).
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ClevelandDotPlot.StemColor">
            <summary>
            Color for the line
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ClevelandDotPlot.DotRadius">
            <summary>
            Size of the markers at the ends of each line
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ClevelandDotPlot.Label">
            <summary>
            Text to display in the legend associated with the series 1 data
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ClevelandDotPlot.Color1">
            <summary>
            Color for one of the markers
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ClevelandDotPlot.MarkerShape1">
            <summary>
            Marker to use for the series 1 data
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ClevelandDotPlot.Label2">
            <summary>
            Text to display in the legend associated with the series 2 data
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ClevelandDotPlot.Color2">
            <summary>
            Color for one of the markers
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ClevelandDotPlot.MarkerShape2">
            <summary>
            Marker to use for the series 2 data
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.ClevelandDotPlot.SetPoint1Style(System.Nullable{System.Drawing.Color},System.Nullable{ScottPlot.MarkerShape},System.String)">
            <summary>
            Allows customizing the first point (set by ys1)
            </summary>
            <param name="color">The color of the dot, null for no change.</param>
            <param name="markerShape">The shape of the dot, null for no change.</param>
            <param name="label">The label of the dot in the legend, null for no change</param>
        </member>
        <member name="M:ScottPlot.Plottable.ClevelandDotPlot.SetPoint2Style(System.Nullable{System.Drawing.Color},System.Nullable{ScottPlot.MarkerShape},System.String)">
            <summary>
            Allows customizing the second point (set by ys2)
            </summary>
            <param name="color">The color of the dot, null for no change.</param>
            <param name="markerShape">The shape of the dot, null for no change.</param>
            <param name="label">The label of the dot in the legend, null for no change</param>
        </member>
        <member name="T:ScottPlot.Plottable.Colorbar">
            <summary>
            A colorbar translates numeric intensity values to colors.
            The Colorbar plot type displays a Colorbar along an edge of the plot.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Colorbar.Width">
            <summary>
            Width of the colorbar rectangle
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.Colorbar.Plottable">
            <summary>
            If populated, this object holds the plottable containing the heatmap and value data this colorbar represents
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.Colorbar.AutomaticTicks(System.Boolean,System.Nullable{System.Int32},System.Func{System.Double,System.String})">
            <summary>
            Configure ticks that are automatically generated in the absense of manually-added ticks
            </summary>
            <param name="enable"></param>
            <param name="minimumSpacing">Minimum number of vertical pixels between tick positions</param>
            <param name="formatter">Optional custom string formatter to translate tick positions to labels</param>
        </member>
        <member name="M:ScottPlot.Plottable.Colorbar.ClearTicks">
            <summary>
            Clear the list of manually-defined ticks.
            To enable automatic tick placement call 
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.Colorbar.AddTick(System.Double,System.String)">
            <summary>
            Add a tick to the list of manually-defined ticks (disabling automatic tick placement)
            </summary>
            <param name="fraction">from 0 (darkest) to 1 (brightest)</param>
            <param name="label">string displayed beside the tick</param>
        </member>
        <member name="M:ScottPlot.Plottable.Colorbar.AddTicks(System.Double[],System.String[])">
            <summary>
            Manually define ticks (disabling automatic tick placement)
            </summary>
            <param name="fractions">from 0 (darkest) to 1 (brightest)</param>
            <param name="labels">strings displayed beside the ticks</param>
        </member>
        <member name="M:ScottPlot.Plottable.Colorbar.SetTicks(System.Double[],System.String[])">
            <summary>
            Manually define ticks as a fraction from 0 to 1 (disabling automatic tick placement)
            </summary>
            <param name="fractions">from 0 (darkest) to 1 (brightest)</param>
            <param name="labels">strings displayed beside the ticks</param>
        </member>
        <member name="M:ScottPlot.Plottable.Colorbar.SetTicks(System.Double[],System.String[],System.Double,System.Double)">
            <summary>
            Manually define ticks by value within a range (disabling automatic tick placement)
            </summary>
            <param name="values">position for each tick</param>
            <param name="labels">label for each tick</param>
            <param name="min">colorbar range minimum</param>
            <param name="max">colorbar range maximum</param>
        </member>
        <member name="M:ScottPlot.Plottable.Colorbar.UpdateColormap(ScottPlot.Drawing.Colormap)">
            <summary>
            Re-Render the colorbar using a new colormap
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.Colorbar.GetBitmap">
            <summary>
            Return a Bitmap of just the color portion of the colorbar.
            The width is defined by the Width field
            The height will be 256
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Plottable.Colorbar.GetBitmap(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Return a Bitmap of just the color portion of the colorbar
            </summary>
            <param name="width">width of the Bitmap</param>
            <param name="height">height of the Bitmap</param>
            <param name="vertical">if true, colormap will be vertically oriented (tall and skinny)</param>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Plottable.Colorbar.GetEvenlySpacedTicks(System.Single,System.Double)">
            <summary>
            Return a list of ticks evenly spaced between the min and max values.
            </summary>
            <param name="height">height of the vertical colorbar</param>
            <param name="tickSpacing">minimum pixel distance between adjacent ticks</param>
            <returns></returns>
        </member>
        <member name="T:ScottPlot.Plottable.CoxcombPlot">
            <summary>
            A Pie chart where the angle of slices is constant but the radii are not.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.CoxcombPlot.Values">
            <summary>
            The data to be plotted
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.CoxcombPlot.FillColors">
            <summary>
            The colors of each slice
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.CoxcombPlot.WebColor">
            <summary>
            The color to draw the axis in
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.CoxcombPlot.AxisType">
            <summary>
            Controls rendering style of the concentric circles (ticks) of the web
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.CoxcombPlot.ShowAxisValues">
            <summary>
            If true, each value will be written in text on the plot.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.CoxcombPlot.SliceLabels">
            <summary>
            Labels for each category.
            Length must be equal to the number of columns (categories) in the original data.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.CoxcombPlot.CategoryImages">
            <summary>
            Icons for each category.
            Length must be equal to the number of columns (categories) in the original data. 
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.Crosshair">
            <summary>
            The Crosshair plot type draws a vertical and horizontal line to label a point
            on the plot and displays the coordinates of that point in labels that overlap
            the axis tick labels. 
            
            This plot type is typically used in combination with
            MouseMove events to track the location of the mouse and/or with plot types that
            have GetPointNearest() methods.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Crosshair.X">
            <summary>
            X position (axis units) of the vertical line
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Crosshair.Y">
            <summary>
            X position (axis units) of the horizontal line
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Crosshair.LineStyle">
            <summary>
            Sets style for horizontal and vertical lines
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Crosshair.LineWidth">
            <summary>
            Sets the line width for vertical and horizontal lines
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Crosshair.Color">
            <summary>
            Set color for horizontal and vertical lines and their position label backgrounds
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Crosshair.IgnoreAxisAuto">
            <summary>
            If true, AxisAuto() will ignore the position of this line when determining axis limits
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.DraggableMarkerPlot">
            <summary>
            This plot type displays a marker at a point that can be dragged with the mouse.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.DraggableMarkerPlot.DragEnabled">
            <summary>
            Indicates whether this marker is draggable in user controls.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.DraggableMarkerPlot.DragCursor">
            <summary>
            Cursor to display while hovering over this marker if dragging is enabled.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.DraggableMarkerPlot.DragXLimitMin">
            <summary>
            If dragging is enabled the marker cannot be dragged more negative than this position
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.DraggableMarkerPlot.DragXLimitMax">
            <summary>
            If dragging is enabled the marker cannot be dragged more positive than this position
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.DraggableMarkerPlot.DragYLimitMin">
            <summary>
            If dragging is enabled the marker cannot be dragged more negative than this position
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.DraggableMarkerPlot.DragYLimitMax">
            <summary>
            If dragging is enabled the marker cannot be dragged more positive than this position
            </summary>
        </member>
        <member name="E:ScottPlot.Plottable.DraggableMarkerPlot.Dragged">
            <summary>
            This event is invoked after the marker is dragged
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.DraggableMarkerPlot.DragTo(System.Double,System.Double,System.Boolean)">
            <summary>
            Move the marker to a new coordinate in plot space.
            </summary>
            <param name="coordinateX">new X position</param>
            <param name="coordinateY">new Y position</param>
            <param name="fixedSize">This argument is ignored</param>
        </member>
        <member name="M:ScottPlot.Plottable.DraggableMarkerPlot.IsUnderMouse(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Return True if the marker is within a certain number of pixels (snap) to the mouse
            </summary>
            <param name="coordinateX">mouse position (coordinate space)</param>
            <param name="coordinateY">mouse position (coordinate space)</param>
            <param name="snapX">snap distance (pixels)</param>
            <param name="snapY">snap distance (pixels)</param>
            <returns></returns>
        </member>
        <member name="T:ScottPlot.Plottable.DraggableMarkerPlotInVector">
            <summary>
            This plot type displays a marker at a point that can be dragged with the mouse,
            but when dragged it "snaps" to specific X/Y coordinates defined by two arrays of values.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.DraggableMarkerPlotInVector.Xs">
            <summary>
            Horizontal position in coordinate space
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.DraggableMarkerPlotInVector.Ys">
            <summary>
            Vertical position in coordinate space
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.DraggableMarkerPlotInVector.MarkerShape">
            <summary>
            Marker to draw at this point
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.DraggableMarkerPlotInVector.MarkerSize">
            <summary>
            Size of the marker in pixel units
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.DraggableMarkerPlotInVector.Color">
            <summary>
            Color of the marker to display at this point
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.DraggableMarkerPlotInVector.MarkerColor">
            <summary>
            Color of the marker to display at this point
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.DraggableMarkerPlotInVector.MarkerLineWidth">
            <summary>
            Width of the marker lines in pixel units
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.DraggableMarkerPlotInVector.Label">
            <summary>
            Text to appear in the legend (if populated)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.DraggableMarkerPlotInVector.DragEnabled">
            <summary>
            Indicates whether this marker on the scatter plot is draggable in user controls.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.DraggableMarkerPlotInVector.DragCursor">
            <summary>
            Cursor to display while hovering over this marker on the scatter plot if dragging is enabled.
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.DraggableMarkerPlotInVector.DragXLimitMin">
            <summary>
            If dragging is enabled the marker on the scatter plot cannot be dragged more negative than this position
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.DraggableMarkerPlotInVector.DragXLimitMax">
            <summary>
            If dragging is enabled the marker on the scatter plot cannot be dragged more positive than this position
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.DraggableMarkerPlotInVector.DragYLimitMin">
            <summary>
            If dragging is enabled the marker on the scatter plot cannot be dragged more negative than this position
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.DraggableMarkerPlotInVector.DragYLimitMax">
            <summary>
            If dragging is enabled the marker on the scatter plot cannot be dragged more positive than this position
            </summary>
        </member>
        <member name="E:ScottPlot.Plottable.DraggableMarkerPlotInVector.Dragged">
            <summary>
            This event is invoked after the marker on the scatter plot is dragged
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.DraggableMarkerPlotInVector.DragTo(System.Double,System.Double,System.Boolean)">
            <summary>
            Move the line to a new coordinate in plot space.
            </summary>
            <param name="coordinateX">new X position</param>
            <param name="coordinateY">new Y position</param>
            <param name="fixedSize">This argument is ignored</param>
        </member>
        <member name="M:ScottPlot.Plottable.DraggableMarkerPlotInVector.IsUnderMouse(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Return True if the line is within a certain number of pixels (snap) to the mouse
            </summary>
            <param name="coordinateX">mouse position (coordinate space)</param>
            <param name="coordinateY">mouse position (coordinate space)</param>
            <param name="snapX">snap distance (pixels)</param>
            <param name="snapY">snap distance (pixels)</param>
            <returns></returns>
        </member>
        <member name="T:ScottPlot.Plottable.FinancePlot">
            <summary>
            Finance plots display open/high/low/close (OHLC) data
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.FinancePlot.Last">
            <summary>
            Returns the last element of OHLCs so users can modify FinancePlots in real time.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.FinancePlot.Candle">
            <summary>
            Display prices as filled candlesticks (otherwise display as OHLC lines)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.FinancePlot.Sequential">
            <summary>
            If True, OHLC timestamps are ignored and candles are placed at consecutive integers and all given a width of 1
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.FinancePlot.ColorUp">
            <summary>
            Color of the candle if it closes at or above its open value
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.FinancePlot.ColorDown">
            <summary>
            Color of the candle if it closes below its open value
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.FinancePlot.WickColor">
            <summary>
            This field controls the color of the wick and rectangular candle border.
            If null, the wick is the same color as the candle and no border is applied.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.FinancePlot.#ctor">
            <summary>
            Create an empty finance plot. 
            Call Add() and AddRange() to add data.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.FinancePlot.#ctor(ScottPlot.OHLC[])">
            <summary>
            Create a finance plot from existing OHLC data.
            </summary>
            <param name="ohlcs"></param>
        </member>
        <member name="M:ScottPlot.Plottable.FinancePlot.Add(System.Double,System.Double,System.Double,System.Double,System.DateTime,System.TimeSpan)">
            <summary>
            Add a single candle representing a defined time span
            </summary>
            <param name="open"></param>
            <param name="high"></param>
            <param name="low"></param>
            <param name="close"></param>
            <param name="timeStart"></param>
            <param name="timeSpan"></param>
        </member>
        <member name="M:ScottPlot.Plottable.FinancePlot.Add(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Add a single candle to the end of the list assuming each candle is spaced 1 horizontal unit apart
            </summary>
            <param name="open"></param>
            <param name="high"></param>
            <param name="low"></param>
            <param name="close"></param>
        </member>
        <member name="M:ScottPlot.Plottable.FinancePlot.Add(ScottPlot.OHLC)">
            <summary>
            Add a single OHLC to the plot
            </summary>
            <param name="ohlc"></param>
        </member>
        <member name="M:ScottPlot.Plottable.FinancePlot.AddRange(ScottPlot.OHLC[])">
            <summary>
            Add multiple OHLCs to the plot
            </summary>
            <param name="ohlcs"></param>
        </member>
        <member name="M:ScottPlot.Plottable.FinancePlot.Clear">
            <summary>
            Clear all OHLCs
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.FinancePlot.GetSMA(System.Int32)">
            <summary>
            Return the simple moving average (SMA) of the OHLC closing prices.
            The returned ys are SMA where each point is the average of N points.
            The returned xs are times in OATime units.
            The returned xs and ys arrays will be the length of the OHLC data minus N.
            </summary>
            <param name="N">each returned value represents the average of N points</param>
            <returns>times and averages of the OHLC closing prices</returns>
        </member>
        <member name="M:ScottPlot.Plottable.FinancePlot.GetBollingerBands(System.Int32)">
            <summary>
            Return Bollinger bands (mean +/- 2*SD) for the OHLC closing prices.
            The returned xs are times in OATime units.
            The returned xs and ys arrays will be the length of the OHLC data minus N (points).
            </summary>
            <param name="N">each returned value represents the average of N points</param>
            <returns>times, averages, and both Bollinger bands for the OHLC closing prices</returns>
        </member>
        <member name="T:ScottPlot.Plottable.FunctionPlot">
            <summary>
            A function plot displays a curve using a function (Y as a function of X)
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.FunctionPlot.Function">
            <summary>
            The function to translate an X to a Y (or null if undefined)
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.Heatmap">
            <summary>
            A heatmap displays a 2D array of intensities as small rectangles on the plot
            colored according to their intensity value according to a colormap.
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.Heatmap.Min">
            <summary>
            Minimum heatmap value
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.Heatmap.Max">
            <summary>
            Maximum heatmap value
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.Heatmap.DataWidth">
            <summary>
            Number of columns in the heatmap data
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.Heatmap.DataHeight">
            <summary>
            Number of rows in the heatmap data
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.Heatmap.BmpHeatmap">
            <summary>
            Pre-rendered heatmap image
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.OffsetX">
            <summary>
            Horizontal location of the lower-left cell
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.OffsetY">
            <summary>
            Vertical location of the lower-left cell
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.CellWidth">
            <summary>
            Width of each cell composing the heatmap
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.CellHeight">
            <summary>
            Width of each cell composing the heatmap
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.XMin">
            <summary>
            Position of the left edge of the heatmap
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.XMax">
            <summary>
            Position of the right edge of the heatmap
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.IsDefaultSizeAndLocation">
            <summary>
            Indicates whether the heatmap's size or location has been modified by the user
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.Label">
            <summary>
            Text to appear in the legend
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.Colormap">
            <summary>
            Colormap used to translate heatmap values to colors
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.ScaleMin">
            <summary>
            If defined, colors will be "clipped" to this value such that lower values (lower colors) will not be shown
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.ScaleMax">
            <summary>
            If defined, colors will be "clipped" to this value such that greater values (higher colors) will not be shown
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.TransparencyThreshold">
            <summary>
            Heatmap values below this number (if defined) will be made transparent
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.ColormapMin">
            <summary>
            Value of the the lower edge of the colormap
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.ColormapMax">
            <summary>
            Value of the the upper edge of the colormap
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.ColormapMinIsClipped">
            <summary>
            Indicates whether values extend beyond the lower edge of the colormap
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.ColormapMaxIsClipped">
            <summary>
            Indicates whether values extend beyond the upper edge of the colormap
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.Smooth">
            <summary>
            If true, heatmap squares will be smoothed using high quality bicubic interpolation.
            If false, heatmap squares will look like sharp rectangles (nearest neighbor interpolation).
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.Interpolation">
            <summary>
            Controls which interpolation mode is used when zooming into the heatmap.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Heatmap.FlipVertically">
            <summary>
            If true the Heatmap will be drawn from the bottom left corner of the plot. Otherwise it will be drawn from the top left corner. Defaults to false.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.Heatmap.Update(System.Nullable{System.Double}[0:,0:],ScottPlot.Drawing.Colormap,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            This method analyzes the intensities and colormap to create a bitmap
            with a single pixel for every intensity value. The bitmap is stored
            and displayed (without anti-alias interpolation) when Render() is called.
            </summary>
            <param name="intensities">2D array of data for the heatmap (null values are not shown)</param>
            <param name="colormap">update the Colormap to use this colormap</param>
            <param name="min">minimum intensity (according to the colormap)</param>
            <param name="max">maximum intensity (according to the colormap)</param>
        </member>
        <member name="M:ScottPlot.Plottable.Heatmap.Update(System.Double[0:,0:],ScottPlot.Drawing.Colormap,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            This method analyzes the intensities and colormap to create a bitmap
            with a single pixel for every intensity value. The bitmap is stored
            and displayed (without anti-alias interpolation) when Render() is called.
            </summary>
            <param name="intensities">2D array of data for the heatmap (all values are shown)</param>
            <param name="colormap">update the Colormap to use this colormap</param>
            <param name="min">minimum intensity (according to the colormap)</param>
            <param name="max">maximum intensity (according to the colormap)</param>
        </member>
        <member name="M:ScottPlot.Plottable.Heatmap.GetCellIndexes(System.Double,System.Double)">
            <summary>
            Return the position in the 2D array corresponding to the given coordinate.
            Returns null if the coordinate is not over the heatmap.
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.HLine">
            <summary>
            Horizontal line at a Y position
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.HLine.Y">
            <summary>
            Y position to render the line
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.HSpan">
            <summary>
            Shaded horizontal region between two X values
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.IHasPixelOffset.PixelOffsetX">
            <summary>
            Render the object this number of pixels right of its coordinate location
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.IHasPixelOffset.PixelOffsetY">
            <summary>
            Render the object this number of pixels above its coordinate location
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.IHasPoints">
            <summary>
            Indicates a plottable has data distributed along both axes
            and can return the X/Y location of the point nearest a given X/Y location.
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.IHasPointsGenericX`2">
            <summary>
            Indicates a plottable has data distributed along the horizontal axis 
            and can return the X/Y location of the point nearest a given X value.
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.IHasPointsGenericY`2">
            <summary>
            Indicates a plottable has data distributed along the vertical axis 
            and can return the X/Y location of the point nearest a given Y value.
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.IHasPointsGeneric`2">
            <summary>
            Indicates a plottable has data distributed along both axes
            and can return the X/Y location of the point nearest a given X/Y location.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.IHighlightable.HighlightCoefficient">
            <summary>
            Scale lines and markers by this fraction (1.0 for no size change)
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.IHittable">
            <summary>
            Describes a Plottable that can report whether or not it is beneath the mouse cursor
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.IHittable.HitCursor">
            <summary>
            Cursor to display when the Plottable is under the mouse
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.IHittable.HitTest(ScottPlot.Coordinate)">
            <summary>
            Returns true if the Plottable is at the given coordinate
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.IHittable.HitTestEnabled">
            <summary>
            Controls whether logic inside <see cref="M:ScottPlot.Plottable.IHittable.HitTest(ScottPlot.Coordinate)"/> will run (or always return false).
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.Image">
            <summary>
            Display a Bitmap at X/Y coordinates in unit space
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Image.X">
            <summary>
            Position of the primary corner (based on Alignment)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Image.Y">
            <summary>
            Position of the primary corner (based on Alignment)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Image.WidthInAxisUnits">
            <summary>
            If defined, the image will be stretched to be this wide in axis units.
            If null, the image will use screen/pixel units.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Image.HeightInAxisUnits">
            <summary>
            If defined, the image will be stretched to be this height in axis units.
            If null, the image will use screen/pixel units.
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.Image.Scale">
            <summary>
            Multiply the size of the image (in pixel units) by this scale factor.
            The primary corner (based on Alignment) will remain anchored.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Image.Rotation">
            <summary>
            Rotate the image clockwise around its primary corner (defined by Alignment) by this number of degrees
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Image.Bitmap">
            <summary>
            Image to display
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Image.Alignment">
            <summary>
            Indicates which corner of the Bitmap is described by X and Y.
            This corner will be the axis of Rotation, and the center of Scale.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Image.BorderSize">
            <summary>
            Line width of the border (in pixels)
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.IPlottable">
            <summary>
            Every plottable object must implement this interface.
            Additional features are provided by adjacent interfaces.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.IPlottable.IsVisible">
            <summary>
            Controls whether the plot will be rendered and contribute to automatic axis limit detection
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.IPlottable.XAxisIndex">
            <summary>
            Index of the horizontal axis this plottable will use for coordinate/pixel conversions.
            0 is the bottom axis, 1 is the top axis, and higher numbers are additional custom axes.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.IPlottable.YAxisIndex">
            <summary>
            Index of the vertical axis this plottable will use for coordinate/pixel conversions.
            0 is the left axis, 1 is the right axis, and higher numbers are additional custom axes.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.IPlottable.Render(ScottPlot.PlotDimensions,System.Drawing.Bitmap,System.Boolean)">
            <summary>
            This is called when it is time to draw the plottable on the canvas.
            </summary>
            <param name="dims">Spatial information about the plot and all axes to assist with coordinate/pixel conversions.</param>
            <param name="bmp">The image on which this plottable will be drawn.</param>
            <param name="lowQuality">If true, disable anti-aliased lines and text to achieve faster rendering.</param>
        </member>
        <member name="M:ScottPlot.Plottable.IPlottable.GetAxisLimits">
            <summary>
            Returns the limits of the data contained in a plottable.
            If an axis has no data its min and max may be Double.NaN.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Plottable.IPlottable.GetLegendItems">
            <summary>
            Returns items to show in the legend. Most plottables return a single item. in this array will appear in the legend.
            Plottables which never appear in the legend should return an empty array (not null).
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.IPlottable.ValidateData(System.Boolean)">
            <summary>
            Throw InvalidOperationException if ciritical variables are null or have incorrect sizes. 
            Deep validation is slower but also checks every value for NaN and Infinity.
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.IStylable">
            <summary>
            This interface is for plottable objects that could be styled using the plot's style. 
            Typically this is for things like frames, tick marks, and text labels.
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.LegendItem">
            <summary>
            This class describes a single item that appears in the figure legend.
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.LollipopPlot">
            <summary>
            Lollipop plots display a series of "Lollipops" in place of bars. 
            Positions are defined by Xs.
            Heights are defined by Ys (relative to BaseValue and YOffsets).
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.LollipopPlot.Label">
            <summary>
            Name for this series of values that will appear in the legend
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.LollipopPlot.LollipopColor">
            <summary>
            Color of all lollipop components (the stick and the circle)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.LollipopPlot.LollipopRadius">
            <summary>
            Size of the circle at the end of each lollipop
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.LollipopPlot.#ctor(System.Double[],System.Double[])">
            <summary>
            Create a lollipop plot from arrays of positions and sizes
            </summary>
            <param name="positions">position of each lollipop</param>
            <param name="values">height of each lollipop</param>
        </member>
        <member name="P:ScottPlot.Plottable.MarkerPlot.X">
            <summary>
            Horizontal position in coordinate space
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.MarkerPlot.Y">
            <summary>
            Vertical position in coordinate space
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.MarkerPlot.MarkerShape">
            <summary>
            Marker to draw at this point
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.MarkerPlot.MarkerSize">
            <summary>
            Size of the marker in pixel units
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.MarkerPlot.MarkerLineWidth">
            <summary>
            Thickness of the marker lines in pixel units
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.MarkerPlot.Color">
            <summary>
            Color of the marker to display at this point
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.MarkerPlot.Label">
            <summary>
            Text to appear in the legend (if populated)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.MarkerPlot.Text">
            <summary>
            Text to appear on the graph at the point
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.MarkerPlot.TextFont">
            <summary>
            Font settings for rendering <see cref="P:ScottPlot.Plottable.MarkerPlot.Text"/>.
            Alignment and orientation relative to the marker can be configured here.
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.PiePlot">
            <summary>
            A pie plot displays a collection of values as a circle.
            Pie plots with a hollow center are donut plots.
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.Polygon">
            <summary>
            A polygon is a collection of X/Y points that are all connected to form a closed shape.
            Polygons can be optionally filled with a color or a gradient.
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.Polygons">
            <summary>
            Polygons are multiple Polygon objects.
            This plot type is faster alternative for rendering a large number of polygons
            compared to adding a bunch of individual Polygon objects to the plot.
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.PopulationPlot">
            <summary>
            Population plots are designed to show collections of data.
            A Population is a 1D array of values, and statistics are calculated automatically.
            Populations can be displayed as bar plots, box plots, or scatter plots.
            Public methods, fields, and properties allow extensive customization.
            This plottable supports higher-order grouping (groups of groups).
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.RadarPlot">
            <summary>
            A radar chart is a graphical method of displaying multivariate data in the form of 
            a two-dimensional chart of three or more quantitative variables represented on axes 
            starting from the same point.
            
            Data is managed using 2D arrays where groups (colored shapes) are rows and categories (arms of the web) are columns.
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.RadarPlot.Norm">
            <summary>
            Values for every group (rows) and category (columns) normalized from 0 to 1.
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.RadarPlot.NormMax">
            <summary>
            Single value to normalize all values against for all groups/categories.
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.RadarPlot.NormMaxes">
            <summary>
            Individual values (one per category) to use for normalization.
            Length must be equal to the number of columns (categories) in the original data.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadarPlot.CategoryLabels">
            <summary>
            Labels for each category.
            Length must be equal to the number of columns (categories) in the original data.
            </summary>
            <remarks>
            If showing icons, labels will be ignored.
            </remarks>
        </member>
        <member name="P:ScottPlot.Plottable.RadarPlot.CategoryImages">
            <summary>
            Icons for each category.
            Length must be equal to the number of columns (categories) in the original data. 
            </summary>
            <remarks>
            If showing icons, labels will be ignored.
            </remarks>
        </member>
        <member name="P:ScottPlot.Plottable.RadarPlot.GroupLabels">
            <summary>
            Labels for each group.
            Length must be equal to the number of rows (groups) in the original data.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadarPlot.FillColors">
            <summary>
            Colors (typically semi-transparent) to shade the inner area of each group.
            Length must be equal to the number of rows (groups) in the original data.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadarPlot.LineColors">
            <summary>
            Colors to outline the shape for each group.
            Length must be equal to the number of rows (groups) in the original data.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadarPlot.WebColor">
            <summary>
            Color of the axis lines and concentric circles representing ticks
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadarPlot.IndependentAxes">
            <summary>
            Controls if values along each category axis are scaled independently or uniformly across all axes.
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.RadarPlot.Font">
            <summary>
            Font used for labeling values on the plot
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadarPlot.ShowAxisValues">
            <summary>
            If true, each value will be written in text on the plot.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadarPlot.ShowCategoryLabels">
            <summary>
            If true, each category name will be written in text at every corner of the radar
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadarPlot.AxisType">
            <summary>
            Controls rendering style of the concentric circles (ticks) of the web
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadarPlot.LineWidth">
            <summary>
            Determines the width of each spoke and the axis lines.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadarPlot.OutlineWidth">
            <summary>
            Determines the width of the line at the edge of each area polygon.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.RadarPlot.Update(System.Double[0:,0:],System.Boolean,System.Double[])">
            <summary>
            Replace the data values with new ones.
            </summary>
            <param name="values">2D array of groups (rows) of values for each category (columns)</param>
            <param name="independentAxes">Controls if values along each category axis are scaled independently or uniformly across all axes</param>
            <param name="maxValues">If provided, these values will be used to normalize each category (columns)</param>
        </member>
        <member name="M:ScottPlot.Plottable.RadarPlot.NormalizeInPlace(System.Double[0:,0:],System.Double[])">
            <summary>
            Normalize a 2D array by dividing all values by the maximum value.
            </summary>
            <returns>maximum value in the array before normalization</returns>
        </member>
        <member name="M:ScottPlot.Plottable.RadarPlot.NormalizeSeveralInPlace(System.Double[0:,0:],System.Double[])">
            <summary>
            Normalize each row of a 2D array independently by dividing all values by the maximum value.
            </summary>
            <returns>maximum value in each row of the array before normalization</returns>
        </member>
        <member name="T:ScottPlot.Plottable.RadialGauge">
            <summary>
            This class represents a single radial gauge.
            It has level and styling options and can be rendered onto an existing bitmap using any radius.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.StartAngle">
            <summary>
            Location of the base of the gauge (degrees)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.SweepAngle">
            <summary>
            Current level of this gauge (degrees)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.MaximumSizeAngle">
            <summary>
            Maximum angular size of the gauge (swept degrees)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.BackStartAngle">
            <summary>
            Angle where the background starts (degrees)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.Clockwise">
            <summary>
            If true angles end clockwise relative to their base
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.BackAngleSweep">
            <summary>
            Used internally to get the angle swept by the gauge background. It's equal to 360 degrees if CircularBackground is set to true. Also, returns a positive value is the gauge is drawn clockwise and a negative one otherwise
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.CircularBackground">
            <summary>
            If true the background will always be drawn as a complete circle regardless of MaximumSizeAngle
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.Font">
            <summary>
            Font used to render values at the tip of the gauge
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.FontSizeFraction">
            <summary>
            Size of the font relative to the line thickness
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.Label">
            <summary>
            Text to display on top of the label
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.LabelPositionFraction">
            <summary>
            Location of the label text along the length of the gauge.
            Low values place the label near the base and high values place the label at its tip.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.Width">
            <summary>
            Size of the gauge (pixels)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.Color">
            <summary>
            Color of the gauge foreground
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.BackgroundColor">
            <summary>
            Color of the gauge background
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.StartCap">
            <summary>
            Style of the base of the gauge
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.EndCap">
            <summary>
            Style of the tip of the gauge
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.Mode">
            <summary>
            Defines the location of each gauge relative to the start angle and distance from the center
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGauge.ShowLabels">
            <summary>
            Indicates whether or not labels will be rendered as text
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.RadialGauge.Render(System.Drawing.Graphics,ScottPlot.PlotDimensions,System.Drawing.PointF,System.Single)">
            <summary>
            Render the gauge onto an existing Bitmap
            </summary>
            <param name="gfx">active graphics object</param>
            <param name="dims">plot dimensions (used to determine pixel scaling)</param>
            <param name="centerPixel">pixel location on the bitmap to center the gauge on</param>
            <param name="radius">distance from the center (pixel units) to render the gauge</param>
        </member>
        <member name="M:ScottPlot.Plottable.RadialGauge.MeasureCharacters(System.Drawing.Graphics,System.Drawing.Font,System.String,System.Int32,System.Int32)">
            <summary>
            Return an array indicating the size of each character in a string.
            Specifiy the maximum expected size to avoid issues associated with text wrapping.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.RadialGauge.ReduceAngle(System.Double)">
            <summary>
            Reduces an angle into the range [0°-360°].
            Angles greater than 360 will roll-over (370º becomes 10º).
            Angles less than 0 will roll-under (-10º becomes 350º).
            </summary>
            <param name="angle">Angle value</param>
            <returns>Angle whithin [0°-360°]</returns>
        </member>
        <member name="T:ScottPlot.Plottable.RadialGaugePlot">
            <summary>
            A radial gauge chart is a graphical method of displaying scalar data in the form of 
            a chart made of circular gauges so that each scalar is represented by each gauge.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.Levels">
            <summary>
            This array holds the original levels passed-in by the user. 
            These levels are used to calculate radial gauge positions on every render.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.GaugeCount">
            <summary>
            Number of gauges.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.MaximumAngle">
            <summary>
            Maximum size (degrees) for the gauge.
            180 is a semicircle and 360 is a full circle.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.CircularBackground">
            <summary>
            Controls whether the backgrounds of the gauges are full circles or stop at the maximum angle.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.Labels">
            <summary>
            Labels that appear in the legend for each gauge.
            Number of labels must equal number of gauges.
            May be null if gauges are not to appear in the legend.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.Colors">
            <summary>
            Colors for each gauge.
            Number of colors must equal number of gauges.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.BackgroundTransparencyFraction">
            <summary>
            Describes how transparent the unfilled background of each gauge is (0 to 1).
            The larger the number the darker the background becomes.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.Clockwise">
            <summary>
            Indicates whether gauges fill clockwise as levels increase.
            If false, gauges will fill counter-clockwise (anti-clockwise).
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.GaugeMode">
            <summary>
            Determines whether the gauges are drawn stacked (dafault value), sequentially, or as a single gauge (ressembling a pie plot).
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.OrderInsideOut">
            <summary>
            Controls whether gauges will be dwan inside-out (true) or outside-in (false)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.LabelPositionFraction">
            <summary>
            Defines where the gauge label is written on the gage as a fraction of its length.
            Low values place the label near the base and high values place the label at its tip.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.StartingAngle">
            <summary>
            Angle (degrees) at which the gauges start.
            270° for North (default value), 0° for East, 90° for South, 180° for West, etc.
            Expected values in the range [0°-360°], otherwise unexpected side-effects might happen.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.SpaceFraction">
            <summary>
            The empty space between gauges as a fraction of the gauge width.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.FontSizeFraction">
            <summary>
            Size of the gague label text as a fraction of the gauge width.
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.RadialGaugePlot.Font">
            <summary>
            Describes labels drawn on each gauge.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.ShowLevels">
            <summary>
            Controls if value labels are shown inside the gauges.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.LevelTextFormat">
            <summary>
            String formatter to use for converting gauge levels to text
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.EndCap">
            <summary>
            Style of the tip of the gauge
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RadialGaugePlot.StartCap">
            <summary>
            Style of the base of the gauge
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.RadialGaugePlot.Update(System.Double[],System.Drawing.Color[])">
            <summary>
            Replace gauge levels with new ones.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.RadialGaugePlot.GetGaugeAngles(System.Double[],System.Double,System.Double,System.Boolean,ScottPlot.RadialGaugeMode)">
            <summary>
            Calculate the rotational angles for each gauge from the original data values
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.RepeatingAxisLine.Position">
            <summary>
            Location of the reference line (Y position if horizontal line, X position if vertical line)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.Count">
            <summary>
            Total number of plotted lines
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.Offset">
            <summary>
            Offset about Position (in Y position if horizontal line, in X position if vertical line), this offset should be negative
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.Shift">
            <summary>
            Shift between lines (in Y if horizontal line, in X if vertical line)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.RelativePosition">
            <summary>
            If RelativePosition is true, then the Shift is interpreted as a ratio of Position, otherwise it is an absolute shift along the axis
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.PositionLabel">
            <summary>
            If True, the position will be labeled on the axis using the PositionFormatter
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.HighlightReferenceLine">
            <summary>
            If True, the first line (positioned at the specified X or Y) will be thicker
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.RepeatingAxisLine.PositionLabelFont">
            <summary>
            Font to use for position labels (labels drawn over the axis)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.PositionLabelBackground">
            <summary>
            Color to use behind the position labels
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.PositionLabelOppositeAxis">
            <summary>
            If true the position label will be drawn on the right or top of the data area.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.PositionFormatter">
            <summary>
            This method generates the position label text for numeric (non-DateTime) axes.
            For DateTime axes assign your own format string that uses DateTime.FromOADate(position).
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.DateTime">
            <summary>
            Position of the axis line in DateTime (OADate) units.
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.RepeatingAxisLine.IsHorizontal">
            <summary>
            Indicates whether the line is horizontal (position in Y units) or vertical (position in X units)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.IgnoreAxisAuto">
            <summary>
            If true, AxisAuto() will ignore the position of this line when determining axis limits
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.Label">
            <summary>
            Text that appears in the legend
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.DragEnabled">
            <summary>
            Indicates whether this line is draggable in user controls.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.DragCursor">
            <summary>
            Cursor to display while hovering over this line if dragging is enabled.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.DragLimitMin">
            <summary>
            If dragging is enabled the line cannot be dragged more negative than this position
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.DragLimitMax">
            <summary>
            If dragging is enabled the line cannot be dragged more positive than this position
            </summary>
        </member>
        <member name="E:ScottPlot.Plottable.RepeatingAxisLine.Dragged">
            <summary>
            This event is invoked after the line is dragged
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.Min">
            <summary>
            The lower bound of the axis line.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingAxisLine.Max">
            <summary>
            The upper bound of the axis line.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.RepeatingAxisLine.DragTo(System.Double,System.Double,System.Boolean)">
            <summary>
            Move the reference line to a new coordinate in plot space.
            </summary>
            <param name="coordinateX">new X position</param>
            <param name="coordinateY">new Y position</param>
            <param name="fixedSize">This argument is ignored</param>
        </member>
        <member name="M:ScottPlot.Plottable.RepeatingAxisLine.IsUnderMouse(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Return True if the reference line is within a certain number of pixels (snap) to the mouse
            </summary>
            <param name="coordinateX">mouse position (coordinate space)</param>
            <param name="coordinateY">mouse position (coordinate space)</param>
            <param name="snapX">snap distance (pixels)</param>
            <param name="snapY">snap distance (pixels)</param>
            <returns></returns>
        </member>
        <member name="T:ScottPlot.Plottable.RepeatingVLine">
            <summary>
            Repeating Vertical lines with refernce at an X position
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingVLine.X">
            <summary>
            X position to render the line
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.RepeatingHLine">
            <summary>
            Repeating horizontHorizontal line at an Y position
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.RepeatingHLine.Y">
            <summary>
            Y position to render the line
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.ScaleBar">
            <summary>
            An L-shaped scalebar rendered in the corner of the data area
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ScaleBar.Width">
            <summary>
            Width of the scalebar in cooridinate units
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ScaleBar.Height">
            <summary>
            Height of the scalebar in cooridinate units
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ScaleBar.Padding">
            <summary>
            Distance in pixels from the edge of the data area
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.ScatterPlot">
            <summary>
            The scatter plot renders X/Y pairs as points and/or connected lines.
            Scatter plots can be extremely slow for large datasets, so use Signal plots in these situations.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ScatterPlot.OffsetX">
            <summary>
            Add this value to each X value before plotting (axis units)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ScatterPlot.OffsetY">
            <summary>
            Add this value to each Y value before plotting (axis units)
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ScatterPlot.StepDisplay">
            <summary>
            If enabled, scatter plot points will be connected by square corners rather than straight diagnal lines
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ScatterPlot.StepDisplayRight">
            <summary>
            Describes orientation of steps if <see cref="P:ScottPlot.Plottable.ScatterPlot.StepDisplay"/> is enabled.
            If true, lines will extend to the right before ascending or descending to the level of the following point.
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.ScatterPlot.Smooth">
            <summary>
            If enabled, points will be connected by smooth lines instead of straight diagnal lines.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.ScatterPlot.UpdateX(System.Double[])">
            <summary>
            Replace the Xs array with a new one
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.ScatterPlot.UpdateY(System.Double[])">
            <summary>
            Replace the Ys array with a new one
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.ScatterPlot.Update(System.Double[],System.Double[])">
            <summary>
            Replace Xs and Ys arrays with new ones
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.ScatterPlot.GetStepDisplayPoints(System.Drawing.PointF[],System.Boolean)">
            <summary>
            Convert scatter plot points (connected by diagnal lines) to step plot points (connected by right angles)
            by inserting an extra point between each of the original data points to result in L-shaped steps.
            </summary>
            <param name="points">Array of corner positions</param>
            <param name="right">Indicates that a line will extend to the right before rising or falling.</param>
        </member>
        <member name="M:ScottPlot.Plottable.ScatterPlot.GetPointNearestX(System.Double)">
            <summary>
            Return the X/Y coordinates of the point nearest the X position
            </summary>
            <param name="x">X position in plot space</param>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Plottable.ScatterPlot.GetPointNearestY(System.Double)">
            <summary>
            Return the X/Y coordinates of the point nearest the Y position
            </summary>
            <param name="y">Y position in plot space</param>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Plottable.ScatterPlot.GetPointNearest(System.Double,System.Double,System.Double)">
            <summary>
            Return the position and index of the data point nearest the given coordinate
            </summary>
            <param name="x">location in coordinate space</param>
            <param name="y">location in coordinate space</param>
            <param name="xyRatio">Ratio of pixels per unit (X/Y) when rendered</param>
        </member>
        <member name="T:ScottPlot.Plottable.ScatterPlotDraggable">
            <summary>
            The scatter plot renders X/Y pairs as points and/or connected lines.
            Scatter plots can be extremely slow for large datasets, so use Signal plots in these situations.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ScatterPlotDraggable.DragEnabled">
            <summary>
            Indicates whether scatter points are draggable in user controls.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ScatterPlotDraggable.DragEnabledX">
            <summary>
            Indicates whether scatter points are horizontally draggable in user controls.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ScatterPlotDraggable.DragEnabledY">
            <summary>
            Indicates whether scatter points are vertically draggable in user controls.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ScatterPlotDraggable.DragCursor">
            <summary>
            Cursor to display while hovering over the scatter points if dragging is enabled.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ScatterPlotDraggable.DragXLimitMin">
            <summary>
            If dragging is enabled the points cannot be dragged more negative than this position
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ScatterPlotDraggable.DragXLimitMax">
            <summary>
            If dragging is enabled the points cannot be dragged more positive than this position
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ScatterPlotDraggable.DragYLimitMin">
            <summary>
            If dragging is enabled the points cannot be dragged more negative than this position
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.ScatterPlotDraggable.DragYLimitMax">
            <summary>
            If dragging is enabled the points cannot be dragged more positive than this position
            </summary>
        </member>
        <member name="E:ScottPlot.Plottable.ScatterPlotDraggable.Dragged">
            <summary>
            This event is invoked after the plot is dragged
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.ScatterPlotDraggable.DragTo(System.Double,System.Double,System.Boolean)">
            <summary>
            Move a scatter point to a new coordinate in plot space.
            </summary>
            <param name="coordinateX">new X position</param>
            <param name="coordinateY">new Y position</param>
            <param name="fixedSize">This argument is ignored</param>
        </member>
        <member name="M:ScottPlot.Plottable.ScatterPlotDraggable.IsUnderMouse(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Return True if a scatter point is within a certain number of pixels (snap) to the mouse
            </summary>
            <param name="coordinateX">mouse position (coordinate space)</param>
            <param name="coordinateY">mouse position (coordinate space)</param>
            <param name="snapX">snap distance (pixels)</param>
            <param name="snapY">snap distance (pixels)</param>
            <returns></returns>
        </member>
        <member name="T:ScottPlot.Plottable.ScatterPlotList`1">
            <summary>
            A collection of X/Y coordinates that can be displayed as markers and/or connected lines.
            Unlike the regular ScatterPlot, this plot type has Add() methods to easily add data.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.ScatterPlotList`1.Clear">
            <summary>
            Clear the list of points
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.ScatterPlotList`1.Add(`0,`0)">
            <summary>
            Add a single point to the list
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.ScatterPlotList`1.AddRange(`0[],`0[])">
            <summary>
            Add multiple points to the list
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.ScatterPlotList`1.GetPoints(ScottPlot.PlotDimensions)">
            <summary>
            Return a new array containing pixel locations for each point of the scatter plot
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.SignalPlot">
            <summary>
            A signal plot displays evenly-spaced data.
            Instead of X/Y pairs, signal plots take Y values and a sample rate.
            Optional X and Y offsets can further customize the data.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.SignalPlotBase`1.StepDisplayRight">
            <summary>
            Describes orientation of steps if <see cref="P:ScottPlot.Plottable.SignalPlotBase`1.StepDisplay"/> is enabled.
            If true, lines will extend to the right before ascending or descending to the level of the following point.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.SignalPlotBase`1.UseParallel">
            <summary>
            If enabled, parallel processing will be used to calculate pixel positions for high density datasets.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.SignalPlotBase`1.BaselineY">
            <summary>
            If fill above and/or below is enabled, this defines the baseline level.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.SignalPlotBase`1.BaselineColor">
            <summary>
            If fill is enabled, a baseline will be drawn using this color.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.SignalPlotBase`1.BaselineWidth">
            <summary>
            If fill is enabled, a baseline will be drawn using this width.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.SignalPlotBase`1.GradientFillColor1">
            <summary>
            If fill is enabled, this color will be used to fill the area below the curve above BaselineY.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.SignalPlotBase`1.GradientFillColor2">
            <summary>
            If fill is enabled, this color will be used to fill the area above the curve below BaselineY.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.SignalPlotBase`1.ShowMarkersInLegend">
            <summary>
            When markers are visible on the line (low density mode) this is True
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.SignalPlotBase`1.AddYsGenericExpression">
            <summary>
            This expression adds two parameters of the generic type used by this signal plot.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.AddYs(`0,`0)">
            <summary>
            Add two Y values (of the generic type used by this signal plot) and return the result as a double
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.AddYsGeneric(`0,`0)">
            <summary>
            Add two Y values (of the generic type used by this signal plot) and return the result as a the same type
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.Update(System.Int32,`0)">
            <summary>
            Replace a single Y value
            </summary>
            <param name="index">array index to replace</param>
            <param name="newValue">new value</param>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.Update(System.Int32,System.Int32,`0[],System.Int32)">
            <summary>
            Replace a range of Y values
            </summary>
            <param name="firstIndex">index to begin replacing</param>
            <param name="lastIndex">last index to replace</param>
            <param name="newData">source for new data</param>
            <param name="fromData">source data offset</param>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.Update(System.Int32,`0[])">
            <summary>
            Replace all Y values from the given index through the end of the array
            </summary>
            <param name="firstIndex">first index to begin replacing</param>
            <param name="newData">new values</param>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.Update(`0[])">
            <summary>
            Replace all Y values with new ones
            </summary>
            <param name="newData">new Y values</param>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.RenderSingleLine(ScottPlot.PlotDimensions,System.Drawing.Graphics,System.Drawing.Pen)">
            <summary>
            Render when the data is zoomed out so much that it just looks like a vertical line.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.RenderLowDensity(ScottPlot.PlotDimensions,System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Brush,System.Drawing.Pen,System.Drawing.Pen)">
            <summary>
            Render when the data is zoomed in such that there is more than 1 column per data point.
            Rendering is accomplished by drawing a straight line from point to point.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.RenderHighDensity(ScottPlot.PlotDimensions,System.Drawing.Graphics,System.Double,System.Double,System.Drawing.Pen)">
            <summary>
            Render the data when there is more than one data point per pixel column.
            Each pixel column therefore represents multiple data points.
            Rendering is optimized by determining the min/max for each pixel column, then a single line is drawn connecting those values.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.FillToInfinity(ScottPlot.PlotDimensions,System.Drawing.Graphics,System.Single,System.Single,System.Drawing.PointF[],System.Boolean)">
            <summary>
            Shade the region abvove or below the curve (to infinity) by drawing a polygon to the edge of the visible plot area.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.FillToBaseline(ScottPlot.PlotDimensions,System.Drawing.Graphics,System.Single,System.Single,System.Drawing.PointF[],System.Double)">
            <summary>
            Shade the region abvove and below the curve (to the baseline level) by drawing two polygons
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.RenderHighDensityDistributionParallel(ScottPlot.PlotDimensions,System.Drawing.Graphics,System.Double,System.Double)">
            <summary>
            Render similar to high density mode except use multiple colors to represent density distributions.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.GetPointNearestX(System.Double)">
            <summary>
            Return the X/Y coordinates of the point nearest the X position
            </summary>
            <param name="x">X position in plot space</param>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.FillDisable">
            <summary>
            Configure the signal plot to only show the curve with no filled area above or below it
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.FillBelow(System.Nullable{System.Drawing.Color},System.Double)">
            <summary>
            Show a solid color beneath the curve
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.FillBelow(System.Drawing.Color,System.Drawing.Color,System.Double)">
            <summary>
            Show a two-color gradient beneath the curve
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.FillAbove(System.Nullable{System.Drawing.Color},System.Double)">
            <summary>
            Show a solid color above the curve
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.FillAbove(System.Drawing.Color,System.Drawing.Color,System.Double)">
            <summary>
            Show a two-color gradient above the curve
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.FillAboveAndBelow(System.Drawing.Color,System.Drawing.Color,System.Double)">
            <summary>
            Fill the area between the curve and the <see cref="P:ScottPlot.Plottable.SignalPlotBase`1.BaselineY"/> value
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotBase`1.FillAboveAndBelow(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Double)">
            <summary>
            Fill the area between the curve and the edge of the display area using two gradients
            </summary>
            <param name="above1">Color above the line next to the curve</param>
            <param name="above2">Color above the line next to the upper edge of the plot area</param>
            <param name="below1">Color below the line next to the curve</param>
            <param name="below2">Color below the line next to the lower edge of the plot area</param>
            <param name="alpha">Apply this opacity to all colors</param>
        </member>
        <member name="T:ScottPlot.Plottable.SignalPlotConst`1">
            <summary>
            This plot type is a potentially faster version of the SignalPlot.
            It pre-calculates min/max values for various segments of data, greatly speeding-up rendering
            for extremely large datasets (10s of millions of points).
            Note that these pre-calculations require more memory and an up-front calculation delay.
            If the underlying data is updated, you must call Update() methods to recalculate the min/max values.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:ScottPlot.Plottable.SignalPlotXY">
            <summary>
            A variation of the SignalPlot optimized for unevenly-spaced ascending X values.
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.SignalPlotXYConst`2">
            <summary>
            A variation of the SignalPlotConst optimized for unevenly-spaced ascending X values.
            </summary>
            <typeparam name="TX"></typeparam>
            <typeparam name="TY"></typeparam>
        </member>
        <member name="T:ScottPlot.Plottable.SignalPlotXYGeneric`2">
            <summary>
            A variation of the SignalPlotConst optimized for unevenly-spaced ascending X values.
            </summary>
            <typeparam name="TX"></typeparam>
            <typeparam name="TY"></typeparam>
        </member>
        <member name="F:ScottPlot.Plottable.SignalPlotXYGeneric`2.XsHaveBeenValidated">
            <summary>
            Indicates whether Xs have been validated to ensure all values are ascending.
            Validation occurs before the first render (not at assignment) to allow the user time to set min/max render indexes.
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotXYGeneric`2.ProcessInterval(System.Int32,System.Int32,System.Int32,ScottPlot.PlotDimensions)">
            <summary>
            TODO: document this
            </summary>
            <param name="x"></param>
            <param name="from"></param>
            <param name="length"></param>
            <param name="dims"></param>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Plottable.SignalPlotXYGeneric`2.GetPointNearestX(`0)">
            <summary>
            Return the X/Y coordinates of the point nearest the X position
            </summary>
            <param name="x">X position in plot space</param>
            <returns></returns>
        </member>
        <member name="T:ScottPlot.Plottable.Text">
            <summary>
            Display a text label at an X/Y position in coordinate space
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Text.DragEnabled">
            <summary>
            Indicates whether this marker is draggable in user controls.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Text.DragCursor">
            <summary>
            Cursor to display while hovering over this marker if dragging is enabled.
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.Text.DragXLimitMin">
            <summary>
            If dragging is enabled the marker cannot be dragged more negative than this position
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.Text.DragXLimitMax">
            <summary>
            If dragging is enabled the marker cannot be dragged more positive than this position
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.Text.DragYLimitMin">
            <summary>
            If dragging is enabled the marker cannot be dragged more negative than this position
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.Text.DragYLimitMax">
            <summary>
            If dragging is enabled the marker cannot be dragged more positive than this position
            </summary>
        </member>
        <member name="E:ScottPlot.Plottable.Text.Dragged">
            <summary>
            This event is invoked after the marker is dragged
            </summary>
        </member>
        <member name="M:ScottPlot.Plottable.Text.DragTo(System.Double,System.Double,System.Boolean)">
            <summary>
            Move the marker to a new coordinate in plot space.
            </summary>
            <param name="coordinateX">new X position</param>
            <param name="coordinateY">new Y position</param>
            <param name="fixedSize">This argument is ignored</param>
        </member>
        <member name="M:ScottPlot.Plottable.Text.IsUnderMouse(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Return True if the marker is within a certain number of pixels (snap) to the mouse
            </summary>
            <param name="coordinateX">mouse position (coordinate space)</param>
            <param name="coordinateY">mouse position (coordinate space)</param>
            <param name="snapX">snap distance (pixels)</param>
            <param name="snapY">snap distance (pixels)</param>
            <returns></returns>
        </member>
        <member name="T:ScottPlot.Plottable.Tooltip">
            <summary>
            A tooltip displays a text bubble pointing to a specific location in X/Y space.
            The position of the bubble moves according to the axis limits to best display the text in the data area.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Tooltip.X">
            <summary>
            Tooltip position in coordinate space
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Tooltip.Y">
            <summary>
            Tooltip position in coordinate space
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.Tooltip.HitCursor">
            <summary>
            Cursor to display when the tooltip is beneath the mouse
            </summary>
        </member>
        <member name="F:ScottPlot.Plottable.Tooltip.LastRenderRect">
            <summary>
            Bounding box of the tooltip the last time is was rendered (in coordinate units)
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.VectorField">
            <summary>
            The VectorField displays arrows representing a 2D array of 2D vectors
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.VectorField.Anchor">
            <summary>
            Describes which part of the vector line will be placed at the data coordinates.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.VectorField.ScaledArrowheads">
            <summary>
            If enabled arrowheads will be drawn as lines scaled to each vector's magnitude.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.VectorField.ScaledArrowheadWidth">
            <summary>
            When using scaled arrowheads this defines the width of the arrow relative to the vector line's length.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.VectorField.ScaledArrowheadLength">
            <summary>
            When using scaled arrowheads this defines length of the arrowhead relative to the vector line's length.
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.VectorField.MarkerShape">
            <summary>
            Marker drawn at each coordinate
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.VectorField.MarkerSize">
            <summary>
            Size of markers to be drawn at each coordinate
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.VLine">
            <summary>
            Vertical line at an X position
            </summary>
        </member>
        <member name="P:ScottPlot.Plottable.VLine.X">
            <summary>
            X position to render the line
            </summary>
        </member>
        <member name="T:ScottPlot.Plottable.VSpan">
            <summary>
            Shade the region between two Y values
            </summary>
        </member>
        <member name="T:ScottPlot.DataSet">
            <summary>
            Represents a series of data values with a common name. Values from several DataSets can be grouped (by value index).
            </summary>
        </member>
        <member name="T:ScottPlot.OHLC">
            <summary>
            This class holds open/high/low/close (OHLC) price data over a time range.
            </summary>
        </member>
        <member name="M:ScottPlot.OHLC.#ctor(System.Double,System.Double,System.Double,System.Double,System.DateTime,System.TimeSpan,System.Double)">
            <summary>
            OHLC price over a specific period of time
            </summary>
            <param name="open">opening price</param>
            <param name="high">maximum price</param>
            <param name="low">minimum price</param>
            <param name="close">closing price</param>
            <param name="timeStart">open time</param>
            <param name="timeSpan">width of the OHLC</param>
            <param name="volume">transaction volume for this time span</param>
        </member>
        <member name="M:ScottPlot.OHLC.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            OHLC price over a specific period of time
            </summary>
            <param name="open">opening price</param>
            <param name="high">maximum price</param>
            <param name="low">minimum price</param>
            <param name="close">closing price</param>
            <param name="timeStart">open time (DateTime.ToOADate() units)</param>
            <param name="timeSpan">width of the OHLC in days</param>
            <param name="volume">transaction volume for this time span</param>
        </member>
        <member name="M:ScottPlot.Plot.AddAnnotation(System.String,System.Double,System.Double)">
            <summary>
            Display text in the data area at a pixel location (not a X/Y coordinates)
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddArrow(System.Double,System.Double,System.Double,System.Double,System.Single,System.Nullable{System.Drawing.Color})">
            <summary>
            Display an arrow pointing to a spot in coordinate space
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddBracket(System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>
            Add a bracket to highlight a range between two points in coordinate space with an optional label.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddBracket(ScottPlot.Coordinate,ScottPlot.Coordinate,System.String)">
            <summary>
            Add a bracket to highlight a range between two points in coordinate space with an optional label.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddClevelandDot(System.Double[],System.Double[])">
            <summary>
            Add a Cleveland Dot plot for the given values. Cleveland Dots will be placed at X positions 0, 1, 2, etc.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddClevelandDot(System.Double[],System.Double[],System.Double[])">
            <summary>
            Add a Cleveland Dot plot for the given values using defined dot positions.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddLollipop(System.Double[],System.Nullable{System.Drawing.Color})">
            <summary>
            Add a Lollipop plot for the given values. Lollipops will be placed at X positions 0, 1, 2, etc.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddLollipop(System.Double[],System.Double[],System.Nullable{System.Drawing.Color})">
            <summary>
            Add a lollipop plot for the given values using defined lollipop positions
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddBar(System.Double[],System.Nullable{System.Drawing.Color})">
            <summary>
            Add a bar plot for the given values. Bars will be placed at X positions 0, 1, 2, etc.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddBar(System.Double[],System.Double[],System.Nullable{System.Drawing.Color})">
            <summary>
            Add a bar plot for the given values using defined bar positions
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddBar(System.Double[],System.Double[],System.Double[],System.Nullable{System.Drawing.Color})">
            <summary>
            Add a bar plot (values +/- errors) using defined positions
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddBarGroups(System.String[],System.String[],System.Double[][],System.Double[][])">
            <summary>
            Create a series of bar plots and customize the ticks and legend
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddBarSeries">
            <summary>
            Create an empty BarSeries, add it to the plot, and return it. Use its Add() method to add bars.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddBarSeries(System.Collections.Generic.List{ScottPlot.Plottable.Bar})">
            <summary>
            Create a BarSeries filled with the given bars, add it to the plot, and return it.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddBubblePlot">
            <summary>
            Add an empty bubble plot. Call it's Add() method to add bubbles with custom position and styling.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddBubblePlot(System.Double[],System.Double[],System.Double,System.Nullable{System.Drawing.Color},System.Double,System.Nullable{System.Drawing.Color})">
            <summary>
            Add a bubble plot with multiple bubbles at the given positions all styled the same.
            Call the Add() method to add bubbles manually, allowing further customization of size and style.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddCandlesticks(ScottPlot.OHLC[])">
            <summary>
            Add candlesticks to the chart from OHLC (open, high, low, close) data
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddColorbar(ScottPlot.Drawing.Colormap,System.Int32,System.Boolean)">
            <summary>
            Add a colorbar to display a colormap beside the data area
            </summary>
            <param name="colormap">Colormap to display in this colorbar</param>
            <param name="space">The size of the right axis will be set to this number of pixels to make room for the colorbar</param>
            <param name="rightSide">If false the colorbar will be displayed on the left edge of the plot.</param>
            <returns>the colorbar that was just created</returns>
        </member>
        <member name="M:ScottPlot.Plot.AddColorbar(ScottPlot.Plottable.IHasColormap,System.Int32)">
            <summary>
            Add a colorbar initialized with settings from a heatmap
            </summary>
            <param name="heatmap">A heatmap-containing plottable to connect with this colorbar</param>
            <param name="space">The size of the right axis will be set to this number of pixels to make room for the colorbar</param>
            <returns>the colorbar that was just created</returns>
        </member>
        <member name="M:ScottPlot.Plot.AddCrosshair(System.Double,System.Double)">
            <summary>
            Add a crosshair to the plot
            </summary>
            <param name="x">position of vertical line (axis units)</param>
            <param name="y">position of horizontal line (axis units)</param>
            <returns>the crosshair that was just created</returns>
        </member>
        <member name="M:ScottPlot.Plot.AddFill(System.Double[],System.Double[],System.Double,System.Nullable{System.Drawing.Color})">
            <summary>
            Create a polygon to fill the area between Y values and a baseline.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddFill(System.Double[],System.Double[],System.Double[],System.Nullable{System.Drawing.Color})">
            <summary>
            Create a polygon to fill the area between two Y curves that share the same X positions.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddFill(System.Double[],System.Double[],System.Double[],System.Double[],System.Nullable{System.Drawing.Color})">
            <summary>
            Create a polygon to fill the area between Y values of two curves.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddFillAboveAndBelow(System.Double[],System.Double[],System.Double,System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color})">
            <summary>
            Create a polygon to fill the area between Y values and a baseline
            that uses two different colors for area above and area below the baseline.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddFunction(System.Func{System.Double,System.Nullable{System.Double}},System.Nullable{System.Drawing.Color},System.Double,ScottPlot.LineStyle)">
            <summary>
            Add a line plot that uses a function (rather than X/Y points) to place the curve
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddHeatmap(System.Nullable{System.Double}[0:,0:],ScottPlot.Drawing.Colormap,System.Nullable{System.Boolean})">
            <summary>
            Add a heatmap to the plot automatically-sized so each cell is 1x1.
            </summary>
            <param name="intensities">2D array of intensities. 
            WARNING: Rendering artifacts may appear for arrays larger than Bitmap can support (~10M total values).</param>
            <param name="colormap"></param>
            <param name="lockScales">If true, AxisScaleLock() will be called to ensure heatmap cells will be square.</param>
            <returns>
            Returns the heatmap that was added to the plot.
            Act on its public fields and methods to customize it or update its data.
            </returns>
        </member>
        <member name="M:ScottPlot.Plot.AddHeatmap(System.Double[0:,0:],ScottPlot.Drawing.Colormap,System.Nullable{System.Boolean})">
            <summary>
            Add a heatmap to the plot automatically-sized so each cell is 1x1.
            </summary>
            <param name="intensities">2D array of intensities. 
            WARNING: Rendering artifacts may appear for arrays larger than Bitmap can support (~10M total values).</param>
            <param name="colormap"></param>
            <param name="lockScales">If true, AxisScaleLock() will be called to ensure heatmap cells will be square.</param>
            <returns>
            Returns the heatmap that was added to the plot.
            Act on its public fields and methods to customize it or update its data.
            </returns>
        </member>
        <member name="M:ScottPlot.Plot.AddHeatmapCoordinated(System.Nullable{System.Double}[0:,0:],System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},ScottPlot.Drawing.Colormap)">
            <summary>
            Add heatmap to the plot stretched to fit the given dimensions.
            Unlike the regular heatmap which gives each cell a size of 1x1 and starts at the axis origin, 
            this heatmap stretches the array so that it covers the defined X and Y spans.
            </summary>
            <param name="intensities">2D array of intensities. 
            WARNING: Rendering artifacts may appear for arrays larger than Bitmap can support (~10M total values).</param>
            <param name="xMin">position of the left edge of the far left column</param>
            <param name="xMax">position of the left edge of the far right column</param>
            <param name="yMin">position of the upper edge of the bottom row</param>
            <param name="yMax">position of the upper edge of the top row</param>
            <param name="colormap"></param>
            <returns>
            Returns the heatmap that was added to the plot.
            Act on its public fields and methods to customize it or update its data.
            </returns>
        </member>
        <member name="M:ScottPlot.Plot.AddHeatmapCoordinated(System.Double[0:,0:],System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},ScottPlot.Drawing.Colormap)">
            <summary>
            Add heatmap to the plot stretched to fit the given dimensions.
            Unlike the regular heatmap which gives each cell a size of 1x1 and starts at the axis origin, 
            this heatmap stretches the array so that it covers the defined X and Y spans.
            </summary>
            <param name="intensities">2D array of intensities. 
            WARNING: Rendering artifacts may appear for arrays larger than Bitmap can support (~10M total values).</param>
            <param name="xMin">position of the left edge of the far left column</param>
            <param name="xMax">position of the left edge of the far right column</param>
            <param name="yMin">position of the upper edge of the bottom row</param>
            <param name="yMax">position of the upper edge of the top row</param>
            <param name="colormap"></param>
            <returns>
            Returns the heatmap that was added to the plot.
            Act on its public fields and methods to customize it or update its data.
            </returns>
        </member>
        <member name="M:ScottPlot.Plot.AddHorizontalLine(System.Double,System.Nullable{System.Drawing.Color},System.Single,ScottPlot.LineStyle,System.String)">
            <summary>
            Add a horizontal axis line at a specific Y position
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddHorizontalSpan(System.Double,System.Double,System.Nullable{System.Drawing.Color},System.String)">
            <summary>
            Add a horizontal span (shades the region between two X positions)
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddImage(System.Drawing.Bitmap,System.Double,System.Double,System.Double,System.Double,ScottPlot.Alignment)">
            <summary>
            Display an image at a specific coordinate.
            The <paramref name="anchor"/> defines which part of the image is placed at that coordinate.
            By default the image is shown at its original size (in pixel units), but this can be modified with <paramref name="scale"/>.
            </summary>
            <param name="bitmap">Image to display</param>
            <param name="x">horizontal position of the image anchor (axis units)</param>
            <param name="y">vertical position of the image anchor (axis units)</param>
            <param name="rotation">rotation in degrees</param>
            <param name="scale">scale (1.0 = original scale, 2.0 = double size)</param>
            <param name="anchor">definces which part of the image is placed at the given X and Y coordinates</param>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Plot.AddLine(System.Double,System.Double,System.Double,System.Double,System.Nullable{System.Drawing.Color},System.Single)">
            <summary>
            Add a line (a scatter plot with two points) to the plot
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddLine(System.Double,System.Double,System.ValueTuple{System.Double,System.Double},System.Nullable{System.Drawing.Color},System.Single)">
            <summary>
            Add a line (a scatter plot with two points) to the plot
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddMarker(System.Double,System.Double,ScottPlot.MarkerShape,System.Double,System.Nullable{System.Drawing.Color},System.String)">
            <summary>
            Add a marker at a specific X/Y position.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddOHLCs(ScottPlot.OHLC[])">
            <summary>
            Add OHLC (open, high, low, close) data to the plot
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddPie(System.Double[],System.Boolean)">
            <summary>
            Add a pie chart to the plot
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddPoint(System.Double,System.Double,System.Nullable{System.Drawing.Color},System.Single,ScottPlot.MarkerShape,System.String)">
            <summary>
            Add a point (a scatter plot with a single marker)
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="color">color of the marker</param>
            <param name="size">size of the marker</param>
            <param name="shape">maker shape</param>
            <param name="label">text to appear in the legend</param>
            <returns>
            The scatter plot that was created and added to the plot. 
            Interact with its public fields and methods to customize style and update data.
            </returns>
        </member>
        <member name="M:ScottPlot.Plot.AddPolygon(System.Double[],System.Double[],System.Nullable{System.Drawing.Color},System.Double,System.Nullable{System.Drawing.Color})">
            <summary>
            Add a polygon to the plot
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddPolygons(System.Collections.Generic.List{System.Collections.Generic.List{System.ValueTuple{System.Double,System.Double}}},System.Nullable{System.Drawing.Color},System.Double,System.Nullable{System.Drawing.Color})">
            <summary>
            Add many polygons using an optimized rendering method
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddPopulation(ScottPlot.Statistics.Population,System.String)">
            <summary>
            Add a population to the plot
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddPopulations(ScottPlot.Statistics.Population[],System.String)">
            <summary>
            Add multiple populations to the plot as a single series
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddPopulations(ScottPlot.Statistics.PopulationMultiSeries)">
            <summary>
            Add multiple populations to the plot as a single series
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddRadar(System.Double[0:,0:],System.Boolean,System.Double[],System.Boolean)">
            <summary>
            Add a radar plot (a two-dimensional chart of three or more quantitative variables represented on axes starting from the same point)
            </summary>
            <param name="values">2D array containing categories (columns) and groups (rows)</param>
            <param name="independentAxes">if true, axis (category) values are scaled independently</param>
            <param name="maxValues">if provided, each category (column) is normalized to these values</param>
            <param name="disableFrameAndGrid">also make the plot frameless and disable its grid</param>
            <returns>the radar plot that was just created and added to the plot</returns>
        </member>
        <member name="M:ScottPlot.Plot.AddRadialGauge(System.Double[],System.Boolean)">
            <summary>
            Add a radial gauge plot (a chart where data is represented by concentric circular gauges)
            </summary>
            <param name="values">Array of gauge values</param>
            <param name="disableFrameAndGrid">Also make the plot frameless and disable its grid</param>
            <returns>The radial gaugle plot that was just created and added to the plot</returns>
        </member>
        <member name="M:ScottPlot.Plot.AddCoxcomb(System.Double[],System.Boolean)">
            <summary>
            A Pie chart where the angle of slices is constant but the radii are not.
            </summary>
            <param name="values">The data to plot</param>
            <param name="hideGridAndFrame">Whether to make the plot frameless and disable the grid</param>
        </member>
        <member name="M:ScottPlot.Plot.AddErrorBars(System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Nullable{System.Drawing.Color},System.Single)">
            <summary>
            Add error bars to the plot with custom dimensions in all 4 directions.
            </summary>
            <param name="xs">Horizontal center of the errorbar</param>
            <param name="ys">Vertical center of each errorbar</param>
            <param name="xErrorsPositive">Magnitude of positive vertical error</param>
            <param name="xErrorsNegative">Magnitude of positive horizontal error</param>
            <param name="yErrorsPositive">Magnitude of negative vertical error</param>
            <param name="yErrorsNegative">Magnitude of negative horizontal error</param>
            <param name="color">Color (null for next color in palette)</param>
            <param name="markerSize">Size (in pixels) to draw a marker at the center of each errorbar</param>
        </member>
        <member name="M:ScottPlot.Plot.AddErrorBars(System.Double[],System.Double[],System.Double[],System.Double[],System.Nullable{System.Drawing.Color},System.Single)">
            <summary>
            Add error bars to the plot which have symmetrical positive/negative errors
            </summary>
            <param name="xs">Horizontal center of the errorbar</param>
            <param name="ys">Vertical center of each errorbar</param>
            <param name="xErrors">Magnitude of vertical error</param>
            <param name="yErrors">Magnitude of horizontal error</param>
            <param name="color">Color (null for next color in palette)</param>
            <param name="markerSize">Size (in pixels) to draw a marker at the center of each errorbar</param>
        </member>
        <member name="M:ScottPlot.Plot.AddScaleBar(System.Double,System.Double,System.String,System.String)">
            <summary>
            Add an L-shaped scalebar to the corner of the plot
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddScatter(System.Double[],System.Double[],System.Nullable{System.Drawing.Color},System.Single,System.Single,ScottPlot.MarkerShape,ScottPlot.LineStyle,System.String)">
            <summary>
            Add a scatter plot from X/Y pairs. 
            Lines and markers are shown by default.
            Scatter plots are slower than Signal plots.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddScatterLines(System.Double[],System.Double[],System.Nullable{System.Drawing.Color},System.Single,ScottPlot.LineStyle,System.String)">
            <summary>
            Add a scatter plot from X/Y pairs connected by lines (no markers).
            Scatter plots are slower than Signal plots.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddScatterPoints(System.Double[],System.Double[],System.Nullable{System.Drawing.Color},System.Single,ScottPlot.MarkerShape,System.String)">
            <summary>
            Add a scatter plot from X/Y pairs using markers at points (no lines).
            Scatter plots are slower than Signal plots.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddScatterStep(System.Double[],System.Double[],System.Nullable{System.Drawing.Color},System.Single,System.String)">
            <summary>
            Add a step plot is a type of line plot where points are connected with right angles instead of straight lines.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddScatterList(System.Nullable{System.Drawing.Color},System.Single,System.Single,System.String,ScottPlot.MarkerShape,ScottPlot.LineStyle)">
            <summary>
            Scatter plot with Add() and Clear() methods for updating data
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddScatterList``1(System.Nullable{System.Drawing.Color},System.Single,System.Single,System.String,ScottPlot.MarkerShape,ScottPlot.LineStyle)">
            <summary>
            Generic ScatterPlotList using generic types (as long as they can be converted to double)
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddSignal(System.Double[],System.Double,System.Nullable{System.Drawing.Color},System.String)">
            <summary>
            Signal plots have evenly-spaced X points and render very fast.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddSignalConst``1(``0[],System.Double,System.Nullable{System.Drawing.Color},System.String)">
            <summary>
            SignalConts plots have evenly-spaced X points and render faster than Signal plots
            but data in source arrays cannot be changed after it is loaded.
            Methods can be used to update all or portions of the data.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddSignalXY(System.Double[],System.Double[],System.Nullable{System.Drawing.Color},System.String)">
            <summary>
            Speed-optimized plot for Ys with unevenly-spaced ascending Xs
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddSignalXYConst``2(``0[],``1[],System.Nullable{System.Drawing.Color},System.String)">
            <summary>
            Speed-optimized plot for Ys with unevenly-spaced ascending Xs.
            Faster than SignalXY but values cannot be modified after loading.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddText(System.String,System.Double,System.Double,System.Single,System.Nullable{System.Drawing.Color})">
            <summary>
            Display text at specific X/Y coordinates
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddText(System.String,System.Double,System.Double,ScottPlot.Drawing.Font)">
            <summary>
            Display text at specific X/Y coordinates
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddTooltip(System.String,System.Double,System.Double)">
            <summary>
            Display a text bubble that points to an X/Y location on the plot
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddVectorField(ScottPlot.Statistics.Vector2[0:,0:],System.Double[],System.Double[],System.String,System.Nullable{System.Drawing.Color},ScottPlot.Drawing.Colormap,System.Double)">
            <summary>
            Add a 2D vector field to the plot
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddVerticalLine(System.Double,System.Nullable{System.Drawing.Color},System.Single,ScottPlot.LineStyle,System.String)">
            <summary>
            Add a vertical axis line at a specific Y position
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.AddVerticalSpan(System.Double,System.Double,System.Nullable{System.Drawing.Color},System.String)">
            <summary>
            Add a horizontal span (shades the region between two X positions)
            </summary>
        </member>
        <member name="P:ScottPlot.Plot.XAxis">
            <summary>
            Axis on the bottom edge of the plot
            </summary>
        </member>
        <member name="P:ScottPlot.Plot.XAxis2">
            <summary>
            Axis on the top edge of the plot
            </summary>
        </member>
        <member name="P:ScottPlot.Plot.YAxis">
            <summary>
            Axis on the left edge of the plot
            </summary>
        </member>
        <member name="P:ScottPlot.Plot.YAxis2">
            <summary>
            Axis on the right edge of the plot
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.XLabel(System.String)">
            <summary>
            Set the label for the vertical axis to the right of the plot (XAxis)
            </summary>
            <param name="label">new text</param>
        </member>
        <member name="M:ScottPlot.Plot.YLabel(System.String)">
            <summary>
            Set the label for the vertical axis to the right of the plot (YAxis2)
            </summary>
            <param name="label">new text</param>
        </member>
        <member name="M:ScottPlot.Plot.Title(System.String,System.Nullable{System.Boolean},System.Nullable{System.Drawing.Color},System.Nullable{System.Single},System.String)">
            <summary>
            Set the label for the horizontal axis above the plot (XAxis2)
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.Frame(System.Nullable{System.Boolean},System.Nullable{System.Drawing.Color},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Configure color and visibility of the frame that outlines the data area.
            Note that the axis lines of all 4 primary axes touch each other, 
            giving the appearance of a rectangle framing the data area.
            This method allows the user to customize these lines as a group or individually.
            </summary>
            <param name="visible">visibility of the frames for the 4 primary axes</param>
            <param name="color">color for the 4 primary axis lines</param>
            <param name="left">visibility of the left axis (YAxis) line</param>
            <param name="right">visibility of the right axis (YAxis2) line</param>
            <param name="bottom">visibility of the bottom axis (XAxis) line</param>
            <param name="top">visibility of the top axis (XAxis2) line</param>
        </member>
        <member name="M:ScottPlot.Plot.Frameless(System.Boolean)">
            <summary>
            Give the plot a frameless appearance by hiding all axes.
            Axes are hidden by making them invisible and setting their size to zero.
            This causes the data area to go right up to the edge of the plot.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.Frame(System.Boolean)">
            <summary>
            Control visibility of axes.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.Grid(System.Nullable{System.Boolean},System.Nullable{System.Drawing.Color},System.Nullable{ScottPlot.LineStyle},System.Nullable{System.Boolean})">
            <summary>
            Customize basic options for the primary X and Y axes. 
            Call XAxis.Grid() and YAxis.Grid() to further customize grid settings.
            </summary>
            <param name="enable">sets visibility of X and Y grid lines</param>
            <param name="color">sets color of of X and Y grid lines</param>
            <param name="lineStyle">defines the style for X and Y grid lines</param>
            <param name="onTop">defines whether the grid is drawn on top of plottables</param>
        </member>
        <member name="M:ScottPlot.Plot.Layout(System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Set padding around the data area by defining the minimum size and padding for all axes
            </summary>
            <param name="left">YAxis size (in pixels) that defines the area to the left of the plot</param>
            <param name="right">YAxis2 size (in pixels) that defines the area to the right of the plot</param>
            <param name="bottom">XAxis size (in pixels) that defines the area to the bottom of the plot</param>
            <param name="top">XAxis2 size (in pixels) that defines the area to the top of the plot</param>
            <param name="padding">Customize the default padding between axes and the edge of the plot</param>
        </member>
        <member name="M:ScottPlot.Plot.MatchLayout(ScottPlot.Plot,System.Boolean,System.Boolean)">
            <summary>
            Adjust this axis layout based on the layout of a source plot
            </summary>
            <param name="sourcePlot">plot to use for layout reference</param>
            <param name="horizontal">if true, horizontal layout will be matched</param>
            <param name="vertical">if true, vertical layout will be matched</param>
        </member>
        <member name="M:ScottPlot.Plot.MatchAxis(ScottPlot.Plot,System.Boolean,System.Boolean)">
            <summary>
            Get the axis limits for the given plot and apply them to this plot
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.ManualDataArea(ScottPlot.PixelPadding)">
            <summary>
            Define the shape of the data area as padding (in pixels) on all 4 sides.
            Once defined, the layout will not be adjusted as axis labels or ticks change.
            Pass null into this function to disable the manual data area.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.XTicks(System.String[])">
            <summary>
            Manually define X axis tick labels using consecutive integer positions (0, 1, 2, etc.)
            </summary>
            <param name="labels">new tick labels for the X axis</param>
        </member>
        <member name="M:ScottPlot.Plot.XTicks(System.Double[],System.String[])">
            <summary>
            Manually define X axis tick positions and labels
            </summary>
            <param name="positions">positions on the X axis</param>
            <param name="labels">new tick labels for the X axis</param>
        </member>
        <member name="M:ScottPlot.Plot.YTicks(System.String[])">
            <summary>
            Manually define Y axis tick labels using consecutive integer positions (0, 1, 2, etc.)
            </summary>
            <param name="labels">new tick labels for the Y axis</param>
        </member>
        <member name="M:ScottPlot.Plot.YTicks(System.Double[],System.String[])">
            <summary>
            Manually define Y axis tick positions and labels
            </summary>
            <param name="positions">positions on the Y axis</param>
            <param name="labels">new tick labels for the Y axis</param>
        </member>
        <member name="M:ScottPlot.Plot.SetCulture(System.Globalization.CultureInfo)">
            <summary>
            Set the culture to use for number-to-string converstion for tick labels of all axes.
            </summary>
            <param name="culture">standard culture</param>
        </member>
        <member name="M:ScottPlot.Plot.SetCulture(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32[])">
            <summary>
            Set the culture to use for number-to-string converstion for tick labels of all axes.
            This overload allows you to manually define every format string, 
            allowing extensive customization of number and date formatting.
            </summary>
            <param name="shortDatePattern"></param>
            <param name="decimalSeparator">Separates the decimal digits</param>
            <param name="numberGroupSeparator">Separates large numbers ito groups of digits for readability</param>
            <param name="decimalDigits">Number of digits after the numberDecimalSeparator</param>
            <param name="numberNegativePattern">Appearance of negative numbers</param>
            <param name="numberGroupSizes">Sizes of decimal groups which are separated by the numberGroupSeparator</param>
        </member>
        <member name="M:ScottPlot.Plot.AddAxis(ScottPlot.Renderable.Edge,System.Int32,System.String,System.Nullable{System.Drawing.Color})">
            <summary>
            Create and return an additional axis
            </summary>
            <param name="edge">Edge of the plot the new axis will belong to</param>
            <param name="axisIndex">Only plottables with the same axis index will use this axis</param>
            <param name="title">defualt label to use for the axis</param>
            <param name="color">defualt color to use for the axis</param>
            <returns>The axis that was just created and added to the plot. You can further customize it by interacting with it.</returns>
        </member>
        <member name="M:ScottPlot.Plot.RemoveAxis(ScottPlot.Renderable.Axis)">
            <summary>
            Remove the a specific axis from the plot
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.GetCoordinate(System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            Return the coordinate (in coordinate space) for the given pixel
            </summary>
            <param name="xPixel">horizontal pixel location</param>
            <param name="yPixel">vertical pixel location</param>
            <param name="xAxisIndex">index of the horizontal axis to use</param>
            <param name="yAxisIndex">index of the vertical axis to use</param>
            <returns>point in coordinate space</returns>
        </member>
        <member name="M:ScottPlot.Plot.GetCoordinateX(System.Single,System.Int32)">
            <summary>
            Return the X position (in coordinate space) for the given pixel column
            </summary>
            <param name="xPixel">horizontal pixel location</param>
            <param name="xAxisIndex">index of the horizontal axis to use</param>
            <returns>horizontal position in coordinate space</returns>
        </member>
        <member name="M:ScottPlot.Plot.GetCoordinateY(System.Single,System.Int32)">
            <summary>
            Return the Y position (in coordinate space) for the given pixel row
            </summary>
            <param name="yPixel">vertical pixel location</param>
            <param name="yAxisIndex">index of the vertical axis to use</param>
            <returns>vertical position in coordinate space</returns>
        </member>
        <member name="M:ScottPlot.Plot.GetPixel(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Return the pixel for the given point in coordinate space
            </summary>
            <param name="x">horizontal coordinate</param>
            <param name="y">vertical coordinate</param>
            <param name="xAxisIndex">index of the horizontal axis to use</param>
            <param name="yAxisIndex">index of the vertical axis to use</param>
            <returns>pixel location</returns>
        </member>
        <member name="M:ScottPlot.Plot.GetPixelX(System.Double,System.Int32)">
            <summary>
            Return the horizontal pixel location given position in coordinate space
            </summary>
            <param name="x">horizontal coordinate</param>
            <param name="xAxisIndex">index of the horizontal axis to use</param>
            <returns>horizontal pixel position</returns>
        </member>
        <member name="M:ScottPlot.Plot.GetPixelY(System.Double,System.Int32)">
            <summary>
            Return the vertical pixel location given position in coordinate space
            </summary>
            <param name="y">vertical coordinate</param>
            <param name="yAxisIndex">index of the vertical axis to use</param>
            <returns>vertical pixel position</returns>
        </member>
        <member name="M:ScottPlot.Plot.GetDataLimits(System.Int32,System.Int32)">
            <summary>
            Return the limits of the data contained by this plot (regardless of the axis limits).
            WARNING: This method iterates all data points in the plot and may be slow for large datasets.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.GetAxisLimits(System.Int32,System.Int32)">
            <summary>
            Returns the current limits for a given pair of axes.
            </summary>
            <param name="xAxisIndex">which axis index to reference</param>
            <param name="yAxisIndex">which axis index to reference</param>
            <returns>current limits</returns>
        </member>
        <member name="M:ScottPlot.Plot.SetAxisLimits(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Int32,System.Int32)">
            <summary>
            Set limits for the a given pair of axes
            </summary>
            <param name="xMin">lower limit of the horizontal axis</param>
            <param name="xMax">upper limit of the horizontal axis</param>
            <param name="yMin">lower limit of the vertical axis</param>
            <param name="yMax">upper limit of the vertical axis</param>
            <param name="xAxisIndex">index of the axis the horizontal limits apply to</param>
            <param name="yAxisIndex">index of the axis the vertical limits apply to</param>
        </member>
        <member name="M:ScottPlot.Plot.SetAxisLimitsX(System.Double,System.Double)">
            <summary>
            Set limits for the primary X axis
            </summary>
            <param name="xMin">lower limit of the horizontal axis</param>
            <param name="xMax">upper limit of the horizontal axis</param>
        </member>
        <member name="M:ScottPlot.Plot.SetAxisLimitsY(System.Double,System.Double)">
            <summary>
            Set limits for the primary Y axis
            </summary>
            <param name="yMin">lower limit of the vertical axis</param>
            <param name="yMax">upper limit of the vertical axis</param>
        </member>
        <member name="M:ScottPlot.Plot.SetAxisLimits(ScottPlot.AxisLimits,System.Int32,System.Int32)">
            <summary>
            Set limits for a pair of axes
            </summary>
            <param name="limits">new limits</param>
            <param name="xAxisIndex">index of the axis the horizontal limits apply to</param>
            <param name="yAxisIndex">index of the axis the vertical limits apply to</param>
        </member>
        <member name="M:ScottPlot.Plot.SetViewLimits(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Set maximum outer limits beyond which the plot cannot be zoomed-out or panned.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.SetOuterViewLimits(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Set maximum outer limits beyond which the plot cannot be zoomed-out or panned.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.SetInnerViewLimits(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Set minimum innter limits which will always be visible on the plot.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.Margins(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Auto-scale the axis limits to fit the data. This function is an alias for AxisAuto().
            </summary>
            <param name="x">horizontal margin in the range [0, 1]</param>
            <param name="y">vertical margin in the range [0, 1]</param>
            <returns>Current default margins for automatic axis scaling</returns>
        </member>
        <member name="M:ScottPlot.Plot.Margins(System.Nullable{System.Double},System.Nullable{System.Double},System.Int32,System.Int32)">
            <summary>
            Auto-scale the axis limits to fit the data. This function is an alias for AxisAuto().
            This overload is for multi-axis plots (plots with multiple X and Y axes) and will only adjust the specified axes.
            </summary>
            <param name="x">horizontal margin in the range [0, 1]</param>
            <param name="y">vertical margin in the range [0, 1]</param>
            <param name="xAxisIndex">Only adjust the specified axis (for plots with multiple X axes)</param>
            <param name="yAxisIndex">Only adjust the specified axis (for plots with multiple Y axes)</param>
            <returns>Current default margins for automatic axis scaling</returns>
        </member>
        <member name="M:ScottPlot.Plot.AxisAuto(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Automatically set axis limits to fit the data.
            </summary>
            <param name="horizontalMargin">Extra space (fraction) to add to the left and right of the limits of the data (typically 0.05)</param>
            <param name="verticalMargin">Extra space (fraction) to add above and below the limits of the data (typically 0.1)</param>
        </member>
        <member name="M:ScottPlot.Plot.AxisAuto(System.Nullable{System.Double},System.Nullable{System.Double},System.Int32,System.Int32)">
            <summary>
            Automatically set axis limits to fit the data.
            This overload is designed for multi-axis plots (with multiple X axes or multiple Y axes).
            </summary>
            <param name="horizontalMargin">Extra space (fraction) to add to the left and right of the limits of the data (typically 0.05)</param>
            <param name="verticalMargin">Extra space (fraction) to add above and below the limits of the data (typically 0.1)</param>
            <param name="xAxisIndex">Only adjust the specified axis (for plots with multiple X axes)</param>
            <param name="yAxisIndex">Only adjust the specified axis (for plots with multiple Y axes)</param>
        </member>
        <member name="M:ScottPlot.Plot.AxisAutoX(System.Nullable{System.Double},System.Int32)">
            <summary>
            Automatically adjust axis limits to fit the data
            </summary>
            <param name="margin">amount of space to the left and right of the data (typically 0.05)</param>
            <param name="xAxisIndex">Only adjust the specified axis (for plots with multiple X axes)</param>
        </member>
        <member name="M:ScottPlot.Plot.AxisAutoY(System.Nullable{System.Double},System.Int32)">
            <summary>
            Automatically adjust axis limits to fit the data (with a little extra margin)
            </summary>
            <param name="margin">amount of space above and below the data (as a fraction of its height)</param>
            <param name="yAxisIndex">Only adjust the specified axis (for plots with multiple Y axes)</param>
        </member>
        <member name="M:ScottPlot.Plot.AxisScale(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Adjust axis limits to achieve a certain pixel scale (units per pixel)
            </summary>
            <param name="unitsPerPixelX">zoom so 1 pixel equals this many horizontal units in coordinate space</param>
            <param name="unitsPerPixelY">zoom so 1 pixel equals this many vertical units in coordinate space</param>
        </member>
        <member name="M:ScottPlot.Plot.AxisScaleLock(System.Boolean,ScottPlot.EqualScaleMode)">
            <summary>
            Lock X and Y axis scales (units per pixel) together to protect symmetry of circles and squares
            </summary>
            <param name="enable">if true, scales are locked such that zooming one zooms the other</param>
            <param name="scaleMode">defines behavior for how to adjust axis limits to achieve equal scales</param>
        </member>
        <member name="M:ScottPlot.Plot.AxisZoom(System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double},System.Int32,System.Int32)">
            <summary>
            Zoom in or out. The amount of zoom is defined as a fraction of the current axis span.
            </summary>
            <param name="xFrac">horizontal zoom (>1 means zoom in)</param>
            <param name="yFrac">vertical zoom (>1 means zoom in)</param>
            <param name="zoomToX">if defined, zoom will be centered at this point</param>
            <param name="zoomToY">if defined, zoom will be centered at this point</param>
            <param name="xAxisIndex">index of the axis to zoom</param>
            <param name="yAxisIndex">index of the axis to zoom</param>
        </member>
        <member name="M:ScottPlot.Plot.AxisPan(System.Double,System.Double)">
            <summary>
            Pan the primary X and Y axis without affecting zoom
            </summary>
            <param name="dx">horizontal distance to pan (in coordinate units)</param>
            <param name="dy">vertical distance to pan (in coordinate units)</param>
        </member>
        <member name="F:ScottPlot.Plot.settings">
            <summary>
            The settings object stores all state (configuration and data) for a plot
            </summary>
        </member>
        <member name="P:ScottPlot.Plot.Width">
            <summary>
            Plot image width (pixels)
            </summary>
        </member>
        <member name="P:ScottPlot.Plot.Height">
            <summary>
            Plot image height (pixels)
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.#ctor(System.Int32,System.Int32)">
            <summary>
            A ScottPlot stores data in plottable objects and draws it on a bitmap when Render() is called
            </summary>
            <param name="width">default width (pixels) to use when rendering</param>
            <param name="height">default height (pixels) to use when rendering</param>
        </member>
        <member name="M:ScottPlot.Plot.ToString">
            <summary>
            Brief description of this plot
            </summary>
            <returns>plot description</returns>
        </member>
        <member name="P:ScottPlot.Plot.Version">
            <summary>
            ScottPlot version in the format "1.2.3" (or "1.2.3-beta" for pre-releases)
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.Add(ScottPlot.Plottable.IPlottable)">
            <summary>
            Add a plottable to the plot
            </summary>
            <param name="plottable">a plottable the user created</param>
        </member>
        <member name="M:ScottPlot.Plot.Clear">
            <summary>
            Clear all plottables
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.Clear(System.Type)">
            <summary>
            Remove all plottables of the given type
            </summary>
            <param name="plottableType">all plottables of this type will be removed</param>
        </member>
        <member name="M:ScottPlot.Plot.Remove(ScottPlot.Plottable.IPlottable)">
            <summary>
            Remove a specific plottable
            </summary>
            <param name="plottable">The plottable to remove</param>
        </member>
        <member name="M:ScottPlot.Plot.RemoveAt(System.Int32)">
            <summary>
            Remove the plottable at the specified index of the list
            </summary>
            <param name="index">The zero-based index of the element to remove</param>
        </member>
        <member name="M:ScottPlot.Plot.Move(System.Int32,System.Int32)">
            <summary>
            Move a plottable in the list. Plottables near the end are rendered last (on top).
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.MoveFirst(ScottPlot.Plottable.IPlottable)">
            <summary>
            Move a plottable to the front so it is rendered first and appears beneath all others.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.MoveLast(ScottPlot.Plottable.IPlottable)">
            <summary>
            Move a plottable to the end so it is rendered last and appears above all others.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.GetPlottables">
            <summary>
            Return a copy of the list of plottables
            </summary>
            <returns>list of plottables</returns>
        </member>
        <member name="M:ScottPlot.Plot.GetDraggable(System.Double,System.Double,System.Int32)">
            <summary>
            Return the draggable plottable under the mouse cursor (or null if there isn't one)
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.GetHittable(System.Double,System.Double)">
            <summary>
            Return the highest hittable plottable at the given point (or null if no hit)
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.Validate(System.Boolean)">
            <summary>
            Throw an exception if any plottable contains an invalid state.
            </summary>
            <param name="deep">Check every individual value for validity. This is more thorough, but slower.</param>
        </member>
        <member name="M:ScottPlot.Plot.GetSettings(System.Boolean)">
            <summary>
            The Settings module stores manages plot state and advanced configuration.
            Its class structure changes frequently, and users are highly advised not to interact with it directly.
            This method returns the settings module for advanced users and developers to interact with.
            </summary>
            <param name="showWarning">Show a warning message indicating this method is only intended for developers</param>
            <returns>Settings used by the plot</returns>
        </member>
        <member name="M:ScottPlot.Plot.Resize(System.Single,System.Single)">
            <summary>
            Update the default size for new renders
            </summary>
            <param name="width">width (pixels) for future renders</param>
            <param name="height">height (pixels) for future renders</param>
        </member>
        <member name="M:ScottPlot.Plot.GetNextColor(System.Double)">
            <summary>
            Return a new color from the Pallette based on the number of plottables already in the plot.
            Use this to ensure every plottable gets a unique color.
            </summary>
            <param name="alpha">value from 0 (transparent) to 1 (opaque)</param>
            <returns>new color</returns>
        </member>
        <member name="P:ScottPlot.Plot.Palette">
            <summary>
            The palette defines default colors to use for new plottables.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.Style(ScottPlot.Styles.IStyle)">
            <summary>
            Set the colors and fonts of many plot components at once using a predefined theme
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.Style(System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color})">
            <summary>
            Set the color of specific plot components
            </summary>
            <param name="figureBackground">Color for area beneath the axis ticks and labels and around the data area</param>
            <param name="dataBackground">Color for area inside the data frame but beneath the grid and plottables</param>
            <param name="grid">Color for grid lines</param>
            <param name="tick">Color for axis tick marks and frame lines</param>
            <param name="axisLabel">Color for axis labels and tick labels</param>
            <param name="titleLabel">Color for the top axis label (XAxis2's title)</param>
        </member>
        <member name="M:ScottPlot.Plot.ResetLayout">
            <summary>
            Reset axis padding to the default values for all axes
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.Benchmark(System.Nullable{System.Boolean})">
            <summary>
            If enabled, the benchmark displays render information in the corner of the plot.
            </summary>
            <param name="enable">True/false defines whether benchmark is enabled. Null will not change the benchmark.</param>
            <returns>true if the benchmark is enabled</returns>
        </member>
        <member name="M:ScottPlot.Plot.BenchmarkTimes">
            <summary>
            Return an array of times for the last several renders.
            The last element of the array is the most recently rendered frame time.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.Legend(System.Nullable{System.Boolean},System.Nullable{ScottPlot.Alignment})">
            <summary>
            Configure legend visibility and location. 
            Optionally you can further customize the legend by interacting with the object it returns.
            </summary>
            <param name="enable">whether or not the legend is visible (or null for no change)</param>
            <param name="location">position of the legend relative to the data area</param>
            <returns>The legend itself. Use public fields to further customize its appearance and behavior.</returns>
        </member>
        <member name="M:ScottPlot.Plot.Copy">
            <summary>
            Return a new Plot with all the same Plottables (and some of the styles) of this one.
            </summary>
            <returns>A new plot similar to this one.</returns>
        </member>
        <member name="F:ScottPlot.Plot.Guid">
            <summary>
            The GUID helps identify individual plots
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.GetGuid">
            <summary>
            Every plot has a globally unique ID (GUID) that can help differentiate it from other plots
            </summary>
            <returns>A string representing the GUID</returns>
        </member>
        <member name="M:ScottPlot.Plot.Equals(System.Object)">
            <summary>
            Returns true if the given plot is the exact same plot as this one
            </summary>
            <param name="obj">the plot to compare this one to</param>
            <returns>true if the two plots have the same GUID</returns>
        </member>
        <member name="M:ScottPlot.Plot.GetHashCode">
            <summary>
            Returns an integer unique to this instance (based on the GUID)
            </summary>
            <returns>An integer representing the GUID</returns>
        </member>
        <member name="M:ScottPlot.Plot.PlotBarGroups(System.String[],System.String[],System.Double[][],System.Double[][],System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Create a series of bar plots given a 2D dataset
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.Render(System.Drawing.Bitmap,System.Boolean,System.Double)">
            <summary>
            Render the plot onto an existing bitmap
            </summary>
            <param name="bmp">an existing bitmap to render onto</param>
            <param name="lowQuality"></param>
            <param name="scale">scale the size of the output image by this fraction (without resizing the plot)</param>
            <returns>the same bitmap that was passed in (but was rendered onto)</returns>
        </member>
        <member name="M:ScottPlot.Plot.RenderLock">
            <summary>
            Wait for the current render to finish, then prevent future renders until RenderUnlock() is called.
            Locking rendering is required if you intend to modify plottables while rendering is occurring in another thread.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.RenderUnlock">
            <summary>
            Release the render lock, allowing renders to proceed.
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.Render(System.Boolean)">
            <summary>
            Render the plot onto a new Bitmap (using the size given when the plot was created or resized)
            </summary>
            <param name="lowQuality">if true, anti-aliasing will be disabled for this render</param>
            <returns>the Bitmap that was created</returns>
        </member>
        <member name="M:ScottPlot.Plot.Render(System.Int32,System.Int32,System.Boolean,System.Double)">
            <summary>
            Render the plot onto a new Bitmap of the given dimensions
            </summary>
            <param name="width">resize the plot to this width (pixels) before rendering</param>
            <param name="height">resize the plot to this height (pixels) before rendering</param>
            <param name="lowQuality">if true, anti-aliasing will be disabled for this render</param>
            <param name="scale">scale the size of the output image by this fraction (without resizing the plot)</param>
            <returns>the Bitmap that was created</returns>
        </member>
        <member name="M:ScottPlot.Plot.GetBitmap(System.Boolean,System.Double)">
            <summary>
            Create a new Bitmap, render the plot onto it, and return it
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.GetImageBytes(System.Boolean,System.Double)">
            <summary>
            Render the plot and return the bytes for a PNG file.
            This method is useful for rendering in stateless cloud environments that do not use a traditional filesystem.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Plot.GetImageBase64(System.Boolean,System.Double)">
            <summary>
            Render the plot and return the image as a Bas64-encoded PNG
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.GetImageHTML(System.Boolean,System.Double)">
            <summary>
            Render the plot and return an HTML img element containing a Base64-encoded PNG
            </summary>
        </member>
        <member name="M:ScottPlot.Plot.RenderLegend(System.Boolean,System.Double)">
            <summary>
            Return a new Bitmap containing only the legend
            </summary>
            <returns>new bitmap containing the legend</returns>
        </member>
        <member name="M:ScottPlot.Plot.SaveFig(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Double)">
            <summary>
            Save the plot as an image
            </summary>
            <param name="filePath">file path for the images (existing files will be overwritten)</param>
            <param name="width">resize the plot to this width (pixels) before rendering</param>
            <param name="height">resize the plot to this height (pixels) before rendering</param>
            <param name="lowQuality">if true, anti-aliasing will be disabled for this render. Default false</param>
            <param name="scale">scale the size of the output image by this fraction (without resizing the plot)</param>
            <returns>Full path for the image that was saved</returns>
        </member>
        <member name="F:ScottPlot.Renderable.ArrowStyle.Anchor">
            <summary>
            Describes which part of the vector line will be placed at the data coordinates.
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.ArrowStyle.ScaledArrowheads">
            <summary>
            If enabled arrowheads will be drawn as lines scaled to each vector's magnitude.
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.ArrowStyle.ScaledArrowheadWidth">
            <summary>
            When using scaled arrowheads this defines the width of the arrow relative to the vector line's length.
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.ArrowStyle.ScaledArrowheadLength">
            <summary>
            When using scaled arrowheads this defines length of the arrowhead relative to the vector line's length.
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.ArrowStyle.NonScaledArrowheadWidth">
            <summary>
            Size of the arrowhead if custom/scaled arrowheads are not in use
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.ArrowStyle.NonScaledArrowheadLength">
            <summary>
            Size of the arrowhead if custom/scaled arrowheads are not in use
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.ArrowStyle.MarkerShape">
            <summary>
            Marker drawn at each coordinate
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.ArrowStyle.MarkerSize">
            <summary>
            Size of markers to be drawn at each coordinate
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.ArrowStyle.Render(ScottPlot.PlotDimensions,System.Drawing.Graphics,System.Double[],System.Double[],ScottPlot.Statistics.Vector2[0:,0:],System.Drawing.Color[])">
            <summary>
            Render an evenly-spaced 2D vector field.
            </summary>
        </member>
        <member name="T:ScottPlot.Renderable.Axis">
            <summary>
            An Axis stores dimensions (axis limits and pixel/unit conversion methods) and can render
            itself including axis label, tick marks, tick labels, and grid lines
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.Axis.Dims">
            <summary>
            Axis dimensions and methods for pixel/unit conversions
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.Axis.AxisIndex">
            <summary>
            Plottables with this axis index will use pixel/unit conversions from this axis
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.GetSettings(System.Boolean)">
            <summary>
            Return configuration objects to allow deep customization of axis settings.
            WARNING: This API may not be stable across future versions.
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.ResetLayout">
            <summary>
            Reset axis padding to the default values
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.SetSizeLimit(System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Define the minimum and maximum limits for the pixel size of this axis
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.SetSizeLimit(System.Single)">
            <summary>
            Size this axis to an exact number of pixels
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.SetOffset(System.Single)">
            <summary>
            Define how many pixels away from the data area this axis will be.
            TightenLayout() populates this value (based on other PixelSize values) to stack axes beside each other.
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.GetSize">
            <summary>
            Returns the number of pixels occupied by this axis
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.RecalculateTickPositions(ScottPlot.PlotDimensions)">
            <summary>
            Use the latest configuration (size, font settings, axis limits) to determine tick mark positions
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.Render(ScottPlot.PlotDimensions,System.Drawing.Bitmap,System.Boolean)">
            <summary>
            Render all components of this axis onto the given Bitmap
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.DateTimeFormat(System.Boolean)">
            <summary>
            DateTime format assumes axis represents DateTime.ToOATime() units and displays tick labels accordingly.
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.Label(System.String,System.Nullable{System.Drawing.Color},System.Nullable{System.Single},System.Nullable{System.Boolean},System.String)">
            <summary>
            Configure the label of this axis
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.ImageLabel(System.Drawing.Bitmap,System.Single,System.Single)">
            <summary>
            Display a custom image as the axis label instead of text
            </summary>
            <param name="img">The image to display where the label should go</param>
            <param name="padInside">pixels of padding between the inner image edge and the data area</param>
            <param name="padOutside">pixels of padding between the outer image edge and the figure edge</param>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.Color(System.Drawing.Color)">
            <summary>
            Set color of every component of this axis (label, line, tick marks, and tick labels)
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.TickLabelFormat(System.Func{System.Double,System.String})">
            <summary>
            Use a custom function to generate tick label strings
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.TickLabelFormat(System.String,System.Boolean)">
            <summary>
            Manually define the string format to use for translating tick positions to tick labels
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.TickLabelNotation(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            Customize string settings for the tick labels
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.ManualTickSpacing(System.Double)">
            <summary>
            Define a manual spacing between major ticks (and major grid lines)
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.ManualTickSpacing(System.Double,ScottPlot.Ticks.DateTimeUnit)">
            <summary>
            Define a manual spacing between major ticks (and major grid lines) for axes configured to display using DateTime format
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.ManualTickPositions(System.Double[],System.String[])">
            <summary>
            Manually define major tick (and grid) positions and labels
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.AutomaticTickPositions">
            <summary>
            Reset previously defined manual tick positions and revert to default automatic tick placement.
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.AutomaticTickPositions(System.Double[],System.String[])">
            <summary>
            Reset previously defined manual tick positions and revert to default automatic tick placement.
            The provided tick positions and labels will be displayed in addition to the automatic ticks.
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.RulerMode(System.Boolean)">
            <summary>
            Ruler mode draws long tick marks and offsets tick labels for a ruler appearance
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.PixelSnap(System.Boolean)">
            <summary>
            Enable this to snap major ticks (and grid lines) to the nearest pixel to avoid anti-aliasing artifacts
            </summary>
            <param name="enable"></param>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.TickMarkColor(System.Drawing.Color)">
            <summary>
            Apply the same color to major and minor tick marks
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.TickMarkColor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Set colors for major and minor tick marks
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.TickMarkDirection(System.Boolean)">
            <summary>
            Control whether tick marks point outward or inward
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.SetCulture(System.Globalization.CultureInfo)">
            <summary>
            Set the culture to use for unit-to-string tick mark conversion
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.SetCulture(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32[])">
            <summary>
            Manually define culture to use for unit-to-string tick mark conversion
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.TickLabelStyle(System.Nullable{System.Drawing.Color},System.String,System.Nullable{System.Single},System.Nullable{System.Boolean},System.Nullable{System.Single})">
            <summary>
            Customize styling of the tick labels
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.LabelStyle(System.Nullable{System.Drawing.Color},System.String,System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Customize styling of the label (without changing its content)
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.Ticks(System.Boolean)">
            <summary>
            Set visibility of all ticks
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.Ticks(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Set visibility of individual tick components
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.TickDensity(System.Double)">
            <summary>
            This value defines the packing density of tick labels.
            A density of 1.0 means labels fit tightly based on measured maximum label size.
            Higher densities place more ticks but tick labels may oberlap.
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.MinimumTickSpacing(System.Double)">
            <summary>
            Define the smallest distance between major ticks, grid lines, and tick labels in coordinate units.
            This only works for numeric tick systems (DateTime ticks are not supported).
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.MinorLogScale(System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Sets whether minor ticks are evenly spaced or log-distributed between major tick positions
            </summary>
            <param name="enable">if true, minor tick marks will be logarithmically distributed</param>
            <param name="roundMajorTicks">if true, log-scaled ticks will only show as even powers of ten</param>
            <param name="minorTickCount">This many minor ticks will be placed between each major tick</param>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.Line(System.Nullable{System.Boolean},System.Nullable{System.Drawing.Color},System.Nullable{System.Single})">
            <summary>
            Configure the line drawn along the edge of the axis
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.Layout(System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Set the minimum size and padding of the axis
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.MajorGrid(System.Nullable{System.Boolean},System.Nullable{System.Drawing.Color},System.Nullable{System.Single},System.Nullable{ScottPlot.LineStyle})">
            <summary>
            Configure visibility and styling of the major grid
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.MinorGrid(System.Nullable{System.Boolean},System.Nullable{System.Drawing.Color},System.Nullable{System.Single},System.Nullable{ScottPlot.LineStyle},System.Nullable{System.Boolean})">
            <summary>
            Configure visibility and styling of the minor grid
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.Hide(System.Boolean)">
            <summary>
            Hide this axis by forcing its size to always be zero.
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.Grid(System.Boolean)">
            <summary>
            Set visibility for major tick grid lines
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.RecalculateAxisSize">
            <summary>
            Set pixel size based on the latest axis label, tick marks, and tick label
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.LockLimits(System.Boolean)">
            <summary>
            Lock min/max limits so it cannot be changed (until it's unlocked)
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.GetTicks(System.Double,System.Double)">
            <summary>
            Return the ticks displayed in the previous render
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Axis.TickMeasurement(System.Boolean)">
            <summary>
            Configure how tick label measurement is performed when calculating ideal tick density.
            </summary>
            <param name="manual"></param>
        </member>
        <member name="T:ScottPlot.Renderable.AxisDimensions">
            <summary>
            This class stores MUTABLE axis limits and pixel size information for a SINGLE AXIS. 
            Unlike PlotDimensions(immutable objects created just before rendering), 
            values in this class are intended for long term storage.
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisDimensions.FigureSizePx">
            <summary>
            Size of the entire figure (in pixels) if it were to be exported as an image
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisDimensions.DataSizePx">
            <summary>
            Side of just the data area (in pixels).
            The data area is the inner rectangle that displays plots.
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisDimensions.DataOffsetPx">
            <summary>
            Offset of the data area (in pixels) relative to the left or top edge of the figure.
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.AxisDimensions.IsInverted">
            <summary>
            Indicates whether pixel values ascend in the same direciton as axis unit values.
            Horizontal axes are not inverted (both ascend from left to right).
            Vertical axes are inverted (units ascend from bottom to top but pixel positions ascend from top to bottom).
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisDimensions.Min">
            <summary>
            Lower edge of the data area (axis units).
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisDimensions.Max">
            <summary>
            Upper edge of the data area (axis units).
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisDimensions.OuterBoundaryMin">
            <summary>
            Limit beyond which the plot cannot be zoomed in
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisDimensions.OuterBoundaryMax">
            <summary>
            Limit beyond which the plot cannot be zoomed in
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisDimensions.InnerBoundaryMin">
            <summary>
            Limit which will always be visible on the data area
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisDimensions.InnerBoundaryMax">
            <summary>
            Limit which will always be visible on the data area
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisDimensions.SpanBound">
            <summary>
            Size of the view boundaries.
            This should always be greater or equal to the Span.
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisDimensions.HasBeenSet">
            <summary>
            False until axes are intentionally set.
            Unset axes default to NaN min/max limits.
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisDimensions.IsNan">
            <summary>
            True if min or max is NaN.
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisDimensions.Span">
            <summary>
            Size of the data area (axis units)
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisDimensions.Center">
            <summary>
            Center of the data area (axis units)
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisDimensions.PxPerUnit">
            <summary>
            Number of pixels for each axis unit
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisDimensions.UnitsPerPx">
            <summary>
            Size of 1 screen pixel in axis units
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.AxisDimensions.MinRemembered">
            <summary>
            Limit remember/recall is used while mouse dragging
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.AxisDimensions.MaxRemembered">
            <summary>
            Limit remember/recall is used while mouse dragging
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.AxisDimensions.LockedLimits">
            <summary>
            If true, min/max cannot bet set.
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.AxisDimensions.Remember">
            <summary>
            Limit remember/recall is used while mouse dragging
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.AxisDimensions.Recall">
            <summary>
            Limit remember/recall is used while mouse dragging
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.AxisDimensions.RationalLimits">
            <summary>
            Return limits that contain no NaNs.
            NaNs will be replaced with +/- 10.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Renderable.AxisDimensions.ResetLimits">
            <summary>
            Reset the axis as if it were never set.
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.AxisDimensions.Resize(System.Single,System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Resize/reposition this axis according to the given pixel units
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.AxisDimensions.SetPadding(System.Single,System.Single)">
            <summary>
            Set data size and offset based on desired padding between the edge of the figure and data area
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.AxisDimensions.SetBoundsOuter(System.Double,System.Double)">
            <summary>
            Set boundaries beyond which this axis cannot be panned or zoomed
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.AxisDimensions.SetBoundsInner(System.Double,System.Double)">
            <summary>
            Set boundaries beyond which this axis cannot be panned or zoomed
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.AxisDimensions.ApplyBounds">
            <summary>
            Modify axis limits such that none extend beyond the boundaries.
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.AxisDimensions.SetAxis(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Set axis limits
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.AxisDimensions.Pan(System.Double)">
            <summary>
            Shift min and max by the given number of units
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.AxisDimensions.PanPx(System.Single)">
            <summary>
            Shift min and max by the given number of pixels
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.AxisDimensions.Zoom(System.Double,System.Nullable{System.Double})">
            <summary>
            Zoom by simultaneously adjusting Min and Max
            </summary>
            <param name="frac">1 for no change, 2 zooms in, .5 zooms out.</param>
            <param name="zoomTo">If given, zoom toward/from this alternative center point.</param>
        </member>
        <member name="M:ScottPlot.Renderable.AxisDimensions.GetPixel(System.Double)">
            <summary>
            Get the pixel location on the figure for a given position in axis units
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.AxisDimensions.GetUnit(System.Single)">
            <summary>
            Get the axis unit position for the given pixel location on the figure
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.AxisDimensions.LockLimits(System.Boolean)">
            <summary>
            Sets a flag indicating whether axis limits are mutable.
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisLabel.IsVisible">
            <summary>
            Controls whether this axis occupies space and is displayed
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.AxisLabel.Edge">
            <summary>
            Edge of the data area this axis represents
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.AxisLabel.Label">
            <summary>
            Axis title
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.AxisLabel.Font">
            <summary>
            Font options for the axis title
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.AxisLabel.ImageLabel">
            <summary>
            Set this field to display a bitmap instead of a text axis label
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.AxisLabel.ImagePaddingToDataArea">
            <summary>
            Padding (in pixels) between the image and the edge of the data area
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.AxisLabel.ImagePaddingToFigureEdge">
            <summary>
            Padding (in pixels) between the image and the edge of the figure
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.AxisLabel.ImagePadding">
            <summary>
            Total amount (in pixels) to pad the image when measuring axis size
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.AxisLabel.PixelSizePadding">
            <summary>
            Amount of padding (in pixels) to surround the contents of this axis
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.AxisLabel.PixelOffset">
            <summary>
            Distance to offset this axis to account for multiple axes
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.AxisLabel.PixelSize">
            <summary>
            Exact size (in pixels) of the contents of this this axis
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.AxisLabel.Measure">
            <summary>
            Return the size of the contents of this axis.
            Returned dimensions are screen-accurate (even if this axis is rotated).
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Renderable.AxisLabel.GetAxisCenter(ScottPlot.PlotDimensions)">
            <summary>
            Return the point and rotation representing the center of the base of this axis
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.AxisTicks.SnapPx">
            <summary>
            If true, grid lines will be drawn with anti-aliasing off to give the appearance of "snapping"
            to the nearest pixel and to avoid blurriness associated with drawing single-pixel anti-aliased lines.
            </summary>
        </member>
        <member name="T:ScottPlot.Renderable.IRenderable">
            <summary>
            A "renderable" is any object which can be drawn on the figure.
            </summary>
        </member>
        <member name="F:ScottPlot.Renderable.Legend.LegendItems">
            <summary>
            List of items appearing in the legend during the last render
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.Legend.Count">
            <summary>
            Number of items appearing in the legend during the last render
            </summary>
        </member>
        <member name="P:ScottPlot.Renderable.Legend.HasItems">
            <summary>
            Returns true if the legend contained items during the last render
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Legend.GetBitmap(System.Boolean,System.Double)">
            <summary>
            Creates and returns a Bitmap containing all legend items displayed at the last render.
            This will be 1px transparent Bitmap if no render was performed previously or if there are no legend items.
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.Legend.GetItems">
            <summary>
            Returns an array of legend items displayed in the last render
            </summary>
        </member>
        <member name="M:ScottPlot.Renderable.BenchmarkMessage.GetRenderTimes">
            <summary>
            Returns an array of render times (in milliseconds) of the last several renders.
            The most recent renders are at the end of the array.
            </summary>
        </member>
        <member name="T:ScottPlot.Settings">
            <summary>
            This module holds state for figure dimensions, axis limits, plot contents, and styling options.
            A plot can be duplicated by copying the full state of this settings module.
            </summary>
        </member>
        <member name="F:ScottPlot.Settings.Plottables">
            <summary>
            This List contains all plottables managed by this Plot.
            Render order is from lowest (first) to highest (last).
            </summary>
        </member>
        <member name="P:ScottPlot.Settings.PlottablesIdentifier">
            <summary>
            Unique value that changes any time the list of plottables is modified.
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.GetNextColor">
            <summary>
            Return the next color from PlottablePalette based on the current number of plottables
            </summary>
        </member>
        <member name="F:ScottPlot.Settings.Axes">
            <summary>
            List of all axes used in this plot.
            Axes can be added, but existing ones should not be removed.
            </summary>
        </member>
        <member name="P:ScottPlot.Settings.HorizontalAxes">
            <summary>
            Get an array containing just horizontal axes
            </summary>
        </member>
        <member name="P:ScottPlot.Settings.VerticalAxes">
            <summary>
            Get an array containing just vertical axes
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.GetXAxis(System.Int32)">
            <summary>
            Return the first horizontal axis with the given axis index
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.GetYAxis(System.Int32)">
            <summary>
            Return the first vertical axis with the given axis index
            </summary>
        </member>
        <member name="P:ScottPlot.Settings.AllAxesHaveBeenSet">
            <summary>
            Indicates whether unset axes are present.
            If true, the user may want to call AxisAuto() or SetAxisLimits().
            </summary>
        </member>
        <member name="P:ScottPlot.Settings.EqualScaleMode">
            <summary>
            Controls relationship between X and Y axis scales.
            See documentation for enumeration members.
            </summary>
        </member>
        <member name="P:ScottPlot.Settings.YAxis">
            <summary>
            Primary vertical axis (on the left of the plot)
            </summary>
        </member>
        <member name="P:ScottPlot.Settings.YAxis2">
            <summary>
            Secondary vertical axis (on the right of the plot)
            </summary>
        </member>
        <member name="P:ScottPlot.Settings.XAxis">
            <summary>
            Primary horizontal axis (on the bottom of the plot)
            </summary>
        </member>
        <member name="P:ScottPlot.Settings.XAxis2">
            <summary>
            Secondary horizontal axis (on the top of the plot)
            </summary>
        </member>
        <member name="P:ScottPlot.Settings.Width">
            <summary>
            Width of the figure (in pixels)
            </summary>
        </member>
        <member name="P:ScottPlot.Settings.Height">
            <summary>
            Height of the figure (in pixels)
            </summary>
        </member>
        <member name="F:ScottPlot.Settings.MarginsX">
            <summary>
            Default padding to use when AxisAuto() or Margins() is called without a specified margin
            </summary>
        </member>
        <member name="F:ScottPlot.Settings.MarginsY">
            <summary>
            Default padding to use when AxisAuto() or Margins() is called without a specified margin
            </summary>
        </member>
        <member name="F:ScottPlot.Settings.IgnoreOverflowExceptionsDuringRender">
            <summary>
            Controls whether OferflowException is ignored in the Render() method.
            This exception is commonly thrown by System.Drawing when drawing to extremely large pixel locations.
            </summary>
        </member>
        <member name="P:ScottPlot.Settings.DrawGridAbovePlottables">
            <summary>
            Determines whether the grid lines should be drawn above the plottables.
            </summary>
        </member>
        <member name="P:ScottPlot.Settings.ManualDataPadding">
            <summary>
            If defined, the data area will use this rectangle and not be adjusted
            depending on axis labels or ticks.
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.GetPlotDimensions(System.Int32,System.Int32,System.Double)">
            <summary>
            Return figure dimensions for the specified X and Y axes
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.Resize(System.Single,System.Single)">
            <summary>
            Set the default size for rendering images
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.ResetAxisLimits">
            <summary>
            Reset axis limits to their defauts
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.AxisSet(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Int32,System.Int32)">
            <summary>
            Define axis limits for a particuar axis
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.AxisSet(ScottPlot.AxisLimits,System.Int32,System.Int32)">
            <summary>
            Define axis limits for a particuar axis
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.AxisLimits(System.Int32,System.Int32)">
            <summary>
            Return X and Y axis limits
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.AxesPanPx(System.Single,System.Single)">
            <summary>
            Pan all axes by the given pixel distance
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.AxesZoomPx(System.Single,System.Single,System.Boolean)">
            <summary>
            Zoom all axes by the given pixel distance
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.AxesZoomTo(System.Double,System.Double,System.Single,System.Single)">
            <summary>
            Zoom all axes by the given fraction
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.AxisAutoAll(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Automatically adjust X and Y axis limits of all axes to fit the data
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.AxisAutoUnsetAxes(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Automatically adjust axis limits for all axes which have not yet been set
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.EnforceEqualAxisScales">
            <summary>
            If a scale lock mode is in use, modify the axis limits accordingly
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.AxisAutoAllX(System.Nullable{System.Double})">
            <summary>
            Automatically adjust X axis limits to fit the data
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.AxisAutoAllY(System.Nullable{System.Double})">
            <summary>
            Automatically adjust Y axis limits to fit the data
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.RememberAxisLimits">
            <summary>
            Store axis limits (useful for storing state upon a MouseDown event)
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.RecallAxisLimits">
            <summary>
            Recall axis limits (useful for recalling state from a previous MouseDown event)
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.MouseDown(System.Single,System.Single)">
            <summary>
            Remember mouse position (do this before calling MousePan or MouseZoom)
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.MousePan(System.Single,System.Single)">
            <summary>
            Pan all axes based on the mouse position now vs that last given to MouseDown()
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.MouseZoom(System.Single,System.Single)">
            <summary>
            Zoom all axes based on the mouse position now vs that last given to MouseDown()
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.CopyPrimaryLayoutToAllAxes">
            <summary>
            Ensure all axes have the same size and offset as the primary X and Y axis
            </summary>
        </member>
        <member name="M:ScottPlot.Settings.LayoutAuto">
            <summary>
            Automatically adjust the layout for every axis
            </summary>
        </member>
        <member name="P:ScottPlot.StarAxis.Ticks">
            <summary>
            The ticks for each spoke.
            </summary>
        </member>
        <member name="P:ScottPlot.StarAxis.NumberOfSpokes">
            <summary>
            The number of spokes to draw.
            </summary>
        </member>
        <member name="F:ScottPlot.StarAxis.CategoryLabels">
            <summary>
            Labels for each category.
            Length must be equal to the number of columns (categories) in the original data.
            </summary>
        </member>
        <member name="F:ScottPlot.StarAxis.CategoryImages">
            <summary>
            Icons for each category.
            Length must be equal to the number of columns (categories) in the original data.
            </summary>
        </member>
        <member name="P:ScottPlot.StarAxis.AxisType">
            <summary>
            Controls rendering style of the concentric circles (ticks) of the web
            </summary>
        </member>
        <member name="P:ScottPlot.StarAxis.ImagePlacement">
            <summary>
            Indicates the type of axis chart to render
            </summary>
        </member>
        <member name="P:ScottPlot.StarAxis.WebColor">
            <summary>
            Color of the axis lines and concentric circles representing ticks
            </summary>
        </member>
        <member name="P:ScottPlot.StarAxis.ShowAxisValues">
            <summary>
            If true, each value will be written in text on the plot.
            </summary>
        </member>
        <member name="P:ScottPlot.StarAxis.ShowCategoryLabels">
            <summary>
            If true, category labels will be written in text on the plot (provided they exist)
            </summary>
        </member>
        <member name="P:ScottPlot.StarAxis.LabelEachSpoke">
            <summary>
            Determines whether each spoke should be labeled, or just the first
            </summary>
        </member>
        <member name="P:ScottPlot.StarAxis.Graphics">
            <summary>
            The drawing surface to use.
            </summary>
        </member>
        <member name="F:ScottPlot.StarAxis.Font">
            <summary>
            Font used for labeling values on the plot
            </summary>
        </member>
        <member name="P:ScottPlot.StarAxis.LineWidth">
            <summary>
            Determines the width of each spoke and the axis lines.
            </summary>
        </member>
        <member name="M:ScottPlot.Statistics.Common.MinMaxSum(System.Double[])">
            <summary>
            Return the minimum, and maximum, and sum of a given array.
            </summary>
        </member>
        <member name="M:ScottPlot.Statistics.Common.StDev(System.Double[])">
            <summary>
            Return the standard deviation of the given values.
            </summary>
        </member>
        <member name="M:ScottPlot.Statistics.Common.StDev(System.Double[],System.Double)">
            <summary>
            Return the standard deviation of the given values.
            This overload is faster because the mean of the values is provided.
            </summary>
        </member>
        <member name="M:ScottPlot.Statistics.Common.StdErr(System.Double[])">
            <summary>
            Return the standard error of the given values
            </summary>
        </member>
        <member name="M:ScottPlot.Statistics.Common.Mean(System.Double[])">
            <summary>
            Return the mean of the given values
            </summary>
        </member>
        <member name="M:ScottPlot.Statistics.Common.NthOrderStatistic(System.Double[],System.Int32)">
            <summary>
            Return the Nth smallest value in the given array.
            </summary>
        </member>
        <member name="M:ScottPlot.Statistics.Common.Quantile(System.Double[],System.Int32,System.Int32)">
            <summary>
            Return the value of the Nth quantile.
            </summary>
        </member>
        <member name="M:ScottPlot.Statistics.Common.Quartile(System.Double[],System.Int32)">
            <summary>
            Return the value of the Nth quartile
            </summary>
            <param name="values"></param>
            <param name="quartile">quartile 1, 2, or 3</param>
        </member>
        <member name="M:ScottPlot.Statistics.Common.Percentile(System.Double[],System.Int32)">
            <summary>
            Return the percentile of the given array
            </summary>
            <param name="values"></param>
            <param name="percentile">number from 0 to 100</param>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Statistics.Common.Percentile(System.Double[],System.Double)">
            <summary>
            Return the percentile of the given array
            </summary>
            <param name="values"></param>
            <param name="percentile">number from 0 to 100</param>
        </member>
        <member name="M:ScottPlot.Statistics.Common.Median(System.Double[])">
            <summary>
            Return the median of the given array.
            If the length of the array is even, this value is the mean of the upper and lower medians.
            </summary>
        </member>
        <member name="M:ScottPlot.Statistics.Common.QuickSelect(System.Double[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Return the kth smallest value from a range of the given array.
            WARNING: values will be mutated.
            </summary>
            <param name="values"></param>
            <param name="leftIndex">inclusive lower bound</param>
            <param name="rightIndex">inclusive upper bound</param>
            <param name="k">number starting at 0</param>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Statistics.Common.GetRandomInt(System.Int32,System.Int32)">
            <summary>
            Return a random integer from within the given range
            </summary>
            <param name="min">inclusive lower bound</param>
            <param name="max">exclusive upper bound</param>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Statistics.Common.Partition(System.Double[],System.Int32,System.Int32)">
            <summary>
            Partition the array between the defined bounds according to elements above and below a randomly chosen pivot value
            </summary>
            <param name="values"></param>
            <param name="leftIndex"></param>
            <param name="rightIndex"></param>
            <returns>index of the pivot used</returns>
        </member>
        <member name="M:ScottPlot.Statistics.Common.ProbabilityDensityFunction(System.Double[])">
            <summary>
            Given a dataset of values return the probability density function.
            The returned function is a Gaussian curve from 0 to 1 (not normalized)
            </summary>
            <param name="values">original dataset</param>
            <returns>Function to return Y for a given X</returns>
        </member>
        <member name="M:ScottPlot.Statistics.Common.ProbabilityDensity(System.Double[],System.Double[],System.Boolean)">
            <summary>
            Given a dataset of values return the probability density function at specific X positions.
            Returned values will be normalized such that their integral is 1.
            </summary>
            <param name="values">original dataset</param>
            <param name="xs">Positions (Xs) for which probabilities (Ys) will be returned</param>
            <param name="percent">if True, output will be multiplied by 100</param>
            <returns>Densities (Ys) for each of the given Xs</returns>
        </member>
        <member name="M:ScottPlot.Statistics.Common.CumulativeSum(System.Double[])">
            <summary>
            Return the cumulative sum of the given data
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Statistics.Common.Histogram(System.Double[],System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Compute the histogram of a dataset.
            </summary>
            <param name="values">Input data</param>
            <param name="min">Lower edge of the first bin (inclusive). If NaN, minimum of input values will be used.</param>
            <param name="max">High edge of the largest bin (inclusive). If NaN, maximum of input values will be used.</param>
            <param name="binSize">Width of each bin.</param>
            <param name="density">If False, the result will contain the number of samples in each bin. If True, the result is the value of the probability density function at the bin (the sum of all values will be 1 if the bin size is 1).</param>
        </member>
        <member name="M:ScottPlot.Statistics.Common.Histogram(System.Double[],System.Int32,System.Boolean,System.Double,System.Double)">
            <summary>
            Compute the histogram of a dataset.
            </summary>
            <param name="values">Input data</param>
            <param name="binCount">Number of equal-width bins</param>
            <param name="density">If False, the result will contain the number of samples in each bin. If True, the result is the value of the probability density function at the bin (the sum of all values will be 1 if the bin size is 1).</param>
            <param name="min">Lower edge of the first bin (inclusive). If NaN, minimum of input values will be used.</param>
            <param name="max">High edge of the largest bin (inclusive). If NaN, maximum of input values will be used.</param>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Statistics.Finance.SMA(System.Double[],System.Int32,System.Boolean)">
            <summary>
            Simple moving average
            </summary>
            <param name="values">number of values to use for each calculation</param>
            <param name="period">number of values to use for each calculation</param>
            <param name="trimNan">only return data where values are present for the whole period</param>
        </member>
        <member name="M:ScottPlot.Statistics.Finance.SMStDev(System.Double[],System.Int32)">
            <summary>
            Simple moving standard deviation
            </summary>
            <param name="values"></param>
            <param name="period">number of values to use for each calculation</param>
        </member>
        <member name="M:ScottPlot.Statistics.Finance.SMA(ScottPlot.OHLC[],System.Int32)">
            <summary>
            Return the simple moving average (SMA) of the OHLC closing prices.
            The returned data will be shorter than the input data by N points.
            </summary>
            <param name="ohlcs">price data to analyze</param>
            <param name="N">each returned price represents the average of N prices</param>
        </member>
        <member name="M:ScottPlot.Statistics.Finance.Bollinger(System.Double[],System.Int32,System.Double)">
            <summary>
            Return the SMA and upper/lower Bollinger bands for the given price data.
            The returned data will NOT be shorter than the input data. It will contain NaN values at the front.
            </summary>
            <param name="prices">price data to use for analysis</param>
            <param name="N">each returned price represents the average of N prices</param>
            <param name="sdCoeff">number of standard deviations from the mean to use for the Bollinger bands</param>
        </member>
        <member name="M:ScottPlot.Statistics.Finance.Bollinger(ScottPlot.OHLC[],System.Int32,System.Double)">
            <summary>
            Return the SMA and upper/lower Bollinger bands for the closing price of the given OHLCs.
            The returned data will be shorter than the input data by N values.
            </summary>
            <param name="ohlcs">price data to use for analysis</param>
            <param name="N">each returned price represents the average of N prices</param>
            <param name="sdCoeff">number of standard deviations from the mean to use for the Bollinger bands</param>
        </member>
        <member name="F:ScottPlot.Statistics.Histogram.bins">
            <summary>
            Lower edges of bins used to create the histogram
            </summary>
        </member>
        <member name="F:ScottPlot.Statistics.Histogram.counts">
            <summary>
            Total number of values in each bin.
            </summary>
        </member>
        <member name="F:ScottPlot.Statistics.Histogram.countsFrac">
            <summary>
            Fractional number of values in each bin.
            The total of all values in this array is 1.0.
            </summary>
        </member>
        <member name="F:ScottPlot.Statistics.Histogram.cumulativeCounts">
            <summary>
            Cumulative total number of values in each bin.
            The returned array will start near 0.0 and end near 1.0.
            </summary>
        </member>
        <member name="F:ScottPlot.Statistics.Histogram.probability">
            <summary>
            Probability density (fraction) for each bin based on the mean and standard deviation of the population.
            The sum of all these values is 1.0
            </summary>
        </member>
        <member name="F:ScottPlot.Statistics.Histogram.countsFracCurve">
            <summary>
            This is the probability density curve normalized to its peak, so its maximum value is 1.0
            </summary>
        </member>
        <member name="F:ScottPlot.Statistics.Histogram.cumulativeFrac">
            <summary>
            Cumulative probability density fraction for each bin
            </summary>
        </member>
        <member name="F:ScottPlot.Statistics.Histogram.binSize">
            <summary>
            Distance between each bin
            </summary>
        </member>
        <member name="F:ScottPlot.Statistics.Histogram.mean">
            <summary>
            Population mean
            </summary>
        </member>
        <member name="F:ScottPlot.Statistics.Histogram.stdev">
            <summary>
            Population standard deviation
            </summary>
        </member>
        <member name="M:ScottPlot.Statistics.Histogram.#ctor(System.Double[],System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Boolean)">
            <summary>
            Compute the histogram of a set of data.
            Bins are identically sized and evenly spaced.
            </summary>
            <param name="values">input data</param>
            <param name="min">manually-defined lower edge of first bin</param>
            <param name="max">manually-defined upper edge of last bin</param>
            <param name="binSize">manually-defined width of each bin</param>
            <param name="binCount">resize bins as needed so this number of bins is achieved</param>
            <param name="ignoreOutOfBounds">if True, values below min or above max will be ignored</param>
        </member>
        <member name="M:ScottPlot.Statistics.Interpolation.Cubic.InterpolateXY(System.Double[],System.Double[],System.Int32)">
            <summary>
            Generate a smooth (interpolated) curve that follows the path of the given X/Y points
            </summary>
        </member>
        <member name="T:ScottPlot.Statistics.Interpolation.EndSlopeSpline">
            <summary>
            The End Slope Spline is a Natural Spline whose first and last point slopes can be defined
            </summary>
        </member>
        <member name="T:ScottPlot.Statistics.Interpolation.NaturalSpline">
            <summary>
            Natural Spline data interpolator
            </summary>
        </member>
        <member name="T:ScottPlot.Statistics.Interpolation.PeriodicSpline">
            <summary>
            The Periodic Spline is a Natural Spline whose first and last point slopes are equal
            </summary>
        </member>
        <member name="T:ScottPlot.Statistics.Population">
            <summary>
            This module holds an array of values and provides popultation statistics (mean, median, standard deviation, etc)
            </summary>
        </member>
        <member name="M:ScottPlot.Statistics.Population.#ctor(System.Random,System.Int32,System.Double,System.Double)">
            <summary>
            Generate random values with a normal distribution
            </summary>
        </member>
        <member name="M:ScottPlot.Statistics.Population.#ctor(System.Double[])">
            <summary>
            Calculate population stats from the given array of values
            </summary>
        </member>
        <member name="T:ScottPlot.Statistics.PopulationSeries">
            <summary>
            A population series is a collection of similar PopulationStats objects.
            </summary>
        </member>
        <member name="M:ScottPlot.Style.GetStyles">
            <summary>
            Return an array containing every available style
            </summary>
        </member>
        <member name="T:ScottPlot.Styles.IStyle">
            <summary>
            A theme describes a collection of colors and fonts that can be used to style a plot
            </summary>
        </member>
        <member name="P:ScottPlot.Ticks.TickCollection.CornerLabel">
            <summary>
            Label to show in the corner when using multiplier or offset notation
            </summary>
        </member>
        <member name="P:ScottPlot.Ticks.TickCollection.LargestLabelWidth">
            <summary>
            Measured size of the largest tick label
            </summary>
        </member>
        <member name="P:ScottPlot.Ticks.TickCollection.LargestLabelHeight">
            <summary>
            Measured size of the largest tick label
            </summary>
        </member>
        <member name="F:ScottPlot.Ticks.TickCollection.LabelFormat">
            <summary>
            Controls how to translate positions to strings
            </summary>
        </member>
        <member name="F:ScottPlot.Ticks.TickCollection.Orientation">
            <summary>
            If True, these ticks are placed along a vertical (Y) axis.
            This is used to determine whether tick density should be based on tick label width or height.
            </summary>
        </member>
        <member name="F:ScottPlot.Ticks.TickCollection.LabelUsingInvertedSign">
            <summary>
            If True, the sign of numeric tick labels will be inverted.
            This is used to give the appearance of descending ticks.
            </summary>
        </member>
        <member name="F:ScottPlot.Ticks.TickCollection.MinorTickDistribution">
            <summary>
            Define how minor ticks are distributed (evenly vs. log scale)
            </summary>
        </member>
        <member name="F:ScottPlot.Ticks.TickCollection.ManualTickFormatter">
            <summary>
            If defined, this function will be used to generate tick labels from positions
            </summary>
        </member>
        <member name="F:ScottPlot.Ticks.TickCollection.TickDensity">
            <summary>
            Optimally packed tick labels have a density 1.0 and lower densities space ticks farther apart.
            </summary>
        </member>
        <member name="F:ScottPlot.Ticks.TickCollection.MinimumTickSpacing">
            <summary>
            Defines the minimum distance (in coordinate units) for major ticks.
            </summary>
        </member>
        <member name="F:ScottPlot.Ticks.TickCollection.IntegerPositionsOnly">
            <summary>
            If True, non-integer tick positions will not be used.
            This may be desired for log10-scaled axes so tick marks are even powers of 10.
            </summary>
        </member>
        <member name="F:ScottPlot.Ticks.TickCollection.LogScaleMinorTickCount">
            <summary>
            If minor tick distribution is log-scaled, place this many minor ticks
            </summary>
        </member>
        <member name="F:ScottPlot.Ticks.TickCollection.MinorTickCount">
            <summary>
            Number of minor ticks per major tick
            </summary>
        </member>
        <member name="F:ScottPlot.Ticks.TickCollection.MeasureStringManually">
            <summary>
            Determine tick density using a fixed formula to estimate label size instead of MeasureString().
            This is less accurate, but is consistent across operating systems, and is independent of font.
            </summary>
        </member>
        <member name="M:ScottPlot.Ticks.TickCollection.MinorFromMajorLog(System.Double[],System.Double,System.Double,System.Int32)">
            <summary>
            Return an array of log-spaced minor tick marks for the given range
            </summary>
            <param name="majorTickPositions">Locations of visible major ticks. Must be evenly spaced.</param>
            <param name="min">Do not include minor ticks less than this value.</param>
            <param name="max">Do not include minor ticks greater than this value.</param>
            <param name="divisions">Number of minor ranges to divide each major range into. (A range is the space between tick marks)</param>
            <returns>Array of minor tick positions (empty at positions occupied by major ticks)</returns>
        </member>
        <member name="M:ScottPlot.Ticks.TickCollection.GetLogDistributedPoints(System.Int32,System.Double,System.Double,System.Boolean)">
            <summary>
            Return log-distributed points between the min/max values
            </summary>
            <param name="count">number of divisions</param>
            <param name="min">lowest value</param>
            <param name="max">highest value</param>
            <param name="inclusive">if true, returned values will contain the min/max values themselves</param>
            <returns></returns>
        </member>
        <member name="M:ScottPlot.Tools.Pad(System.Double[],System.Int32,System.Double,System.Double,System.Boolean)">
            <summary>
            return a copy of the given array padded with the given value at both sidees
            </summary>
        </member>
        <member name="M:ScottPlot.Validate.AssertIsReal(System.String,System.Double)">
            <summary>
            Throw an exception if the value is NaN or infinity
            </summary>
        </member>
        <member name="M:ScottPlot.Validate.AssertAllReal(System.String,System.Double[])">
            <summary>
            Throw an exception if the array is null or contains NaN or infinity
            </summary>
        </member>
        <member name="M:ScottPlot.Validate.AssertAllReal``1(System.String,``0[])">
            <summary>
            Throw an exception if the array is null or contains NaN or infinity
            </summary>
        </member>
        <member name="M:ScottPlot.Validate.AssertDoesNotDescend(System.Double[])">
            <summary>
            Throw an exception if an element is less than the previous element
            </summary>
        </member>
        <member name="M:ScottPlot.Validate.AssertDoesNotDescend``1(``0[])">
            <summary>
            Throw an exception if an element is less than the previous element
            </summary>
        </member>
        <member name="M:ScottPlot.Validate.AssertDoesNotDescend``1(System.String,``0[],System.Int32,System.Nullable{System.Int32})">
            <summary>
            Throw an exception if an element is less than the previous element
            </summary>
        </member>
        <member name="M:ScottPlot.Validate.AssertHasElements(System.String,System.Double[])">
            <summary>
            Throw an exception if the array does not contain at least one element
            </summary>
        </member>
        <member name="M:ScottPlot.Validate.AssertHasElements``1(System.String,``0[])">
            <summary>
            Throw an exception if the array does not contain at least one element
            </summary>
        </member>
        <member name="M:ScottPlot.Validate.AssertHasElements(System.String,System.Drawing.Color[])">
            <summary>
            Throw an exception if the array does not contain at least one element
            </summary>
        </member>
        <member name="M:ScottPlot.Validate.AssertHasElements(System.String,System.String[])">
            <summary>
            Throw an exception if the array does not contain at least one element
            </summary>
        </member>
        <member name="M:ScottPlot.Validate.AssertEqualLength(System.String,System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Throw an exception if non-null arrays have different lengths
            </summary>
        </member>
        <member name="M:ScottPlot.Validate.AssertEqualLength``2(System.String,``0[],``1[])">
            <summary>
            Throw an exception if non-null arrays have different lengths
            </summary>
        </member>
        <member name="M:ScottPlot.Validate.IsEqualLength(System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Returns true if all non-null arguments have equal length
            </summary>
        </member>
        <member name="M:ScottPlot.Validate.AssertHasText(System.String,System.String)">
            <summary>
            Throws an exception if the string is null, empty, or only contains whitespace
            </summary>
        </member>
    </members>
</doc>
